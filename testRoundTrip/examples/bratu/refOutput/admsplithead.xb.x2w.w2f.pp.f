
C ========== begin copyright notice ==============
C This file is part of 
C ---------------
C xaifBooster
C ---------------
C Distributed under the BSD license as follows:
C Copyright (c) 2005, The University of Chicago
C All rights reserved.
C
C Redistribution and use in source and binary forms, 
C with or without modification, are permitted provided that the following conditions are met:
C
C    - Redistributions of source code must retain the above copyright notice, 
C      this list of conditions and the following disclaimer.
C    - Redistributions in binary form must reproduce the above copyright notice, 
C      this list of conditions and the following disclaimer in the documentation 
C      and/or other materials provided with the distribution.
C    - Neither the name of The University of Chicago nor the names of its contributors 
C      may be used to endorse or promote products derived from this software without 
C      specific prior written permission.
C
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
C EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
C OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
C SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
C INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
C INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
C LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
C 
C General Information:
C xaifBooster is intended for the transformation of 
C numerical programs represented as xml files according 
C to the XAIF schema. It is part of the OpenAD framework. 
C The main application is automatic 
C differentiation, i.e. the generation of code for 
C the computation of derivatives. 
C The following people are the principal authors of the 
C current version: 
C 	Uwe Naumann
C	Jean Utke
C Additional contributors are: 
C	Andrew Lyons
C	Peter Fine
C
C For more details about xaifBooster and its use in OpenAD please visit:
C   http://www.mcs.anl.gov/openad
C
C This work is partially supported by:
C 	NSF-ITR grant OCE-0205590
C ========== end copyright notice ==============
       subroutine head(X,F)
          use OpenAD_tape
          use OpenAD_rev

          ! original arguments get inserted before version
          ! and declared here together with all local variables
          ! generated by xaifBooster

      use w2f__types
      use active_module
      IMPLICIT NONE
C
C     **** Global Variables & Derived Type Definitions ****
C
      REAL(w2f__8) OpenAD_Symbol_0
      REAL(w2f__8) OpenAD_Symbol_1
      REAL(w2f__8) OpenAD_Symbol_100
      REAL(w2f__8) OpenAD_Symbol_101
      REAL(w2f__8) OpenAD_Symbol_102
      REAL(w2f__8) OpenAD_Symbol_103
      REAL(w2f__8) OpenAD_Symbol_104
      REAL(w2f__8) OpenAD_Symbol_105
      REAL(w2f__8) OpenAD_Symbol_106
      REAL(w2f__8) OpenAD_Symbol_107
      REAL(w2f__8) OpenAD_Symbol_108
      REAL(w2f__8) OpenAD_Symbol_11
      REAL(w2f__8) OpenAD_Symbol_110
      REAL(w2f__8) OpenAD_Symbol_111
      REAL(w2f__8) OpenAD_Symbol_112
      REAL(w2f__8) OpenAD_Symbol_113
      REAL(w2f__8) OpenAD_Symbol_115
      REAL(w2f__8) OpenAD_Symbol_116
      REAL(w2f__8) OpenAD_Symbol_118
      REAL(w2f__8) OpenAD_Symbol_119
      REAL(w2f__8) OpenAD_Symbol_12
      REAL(w2f__8) OpenAD_Symbol_120
      REAL(w2f__8) OpenAD_Symbol_121
      REAL(w2f__8) OpenAD_Symbol_122
      REAL(w2f__8) OpenAD_Symbol_123
      REAL(w2f__8) OpenAD_Symbol_124
      REAL(w2f__8) OpenAD_Symbol_125
      REAL(w2f__8) OpenAD_Symbol_126
      REAL(w2f__8) OpenAD_Symbol_127
      REAL(w2f__8) OpenAD_Symbol_128
      REAL(w2f__8) OpenAD_Symbol_129
      REAL(w2f__8) OpenAD_Symbol_130
      REAL(w2f__8) OpenAD_Symbol_131
      REAL(w2f__8) OpenAD_Symbol_133
      REAL(w2f__8) OpenAD_Symbol_134
      REAL(w2f__8) OpenAD_Symbol_135
      REAL(w2f__8) OpenAD_Symbol_136
      REAL(w2f__8) OpenAD_Symbol_138
      REAL(w2f__8) OpenAD_Symbol_139
      REAL(w2f__8) OpenAD_Symbol_14
      REAL(w2f__8) OpenAD_Symbol_141
      REAL(w2f__8) OpenAD_Symbol_142
      REAL(w2f__8) OpenAD_Symbol_143
      REAL(w2f__8) OpenAD_Symbol_145
      REAL(w2f__8) OpenAD_Symbol_146
      REAL(w2f__8) OpenAD_Symbol_147
      REAL(w2f__8) OpenAD_Symbol_148
      REAL(w2f__8) OpenAD_Symbol_149
      REAL(w2f__8) OpenAD_Symbol_150
      REAL(w2f__8) OpenAD_Symbol_151
      REAL(w2f__8) OpenAD_Symbol_152
      REAL(w2f__8) OpenAD_Symbol_154
      REAL(w2f__8) OpenAD_Symbol_155
      REAL(w2f__8) OpenAD_Symbol_157
      REAL(w2f__8) OpenAD_Symbol_159
      REAL(w2f__8) OpenAD_Symbol_16
      REAL(w2f__8) OpenAD_Symbol_160
      REAL(w2f__8) OpenAD_Symbol_162
      REAL(w2f__8) OpenAD_Symbol_163
      REAL(w2f__8) OpenAD_Symbol_164
      REAL(w2f__8) OpenAD_Symbol_165
      REAL(w2f__8) OpenAD_Symbol_166
      REAL(w2f__8) OpenAD_Symbol_167
      REAL(w2f__8) OpenAD_Symbol_169
      REAL(w2f__8) OpenAD_Symbol_17
      REAL(w2f__8) OpenAD_Symbol_170
      REAL(w2f__8) OpenAD_Symbol_171
      REAL(w2f__8) OpenAD_Symbol_172
      REAL(w2f__8) OpenAD_Symbol_173
      REAL(w2f__8) OpenAD_Symbol_174
      REAL(w2f__8) OpenAD_Symbol_175
      REAL(w2f__8) OpenAD_Symbol_176
      REAL(w2f__8) OpenAD_Symbol_177
      REAL(w2f__8) OpenAD_Symbol_178
      REAL(w2f__8) OpenAD_Symbol_179
      REAL(w2f__8) OpenAD_Symbol_180
      REAL(w2f__8) OpenAD_Symbol_181
      REAL(w2f__8) OpenAD_Symbol_182
      REAL(w2f__8) OpenAD_Symbol_183
      REAL(w2f__8) OpenAD_Symbol_184
      REAL(w2f__8) OpenAD_Symbol_185
      REAL(w2f__8) OpenAD_Symbol_186
      REAL(w2f__8) OpenAD_Symbol_187
      REAL(w2f__8) OpenAD_Symbol_188
      type(active) :: OpenAD_Symbol_189
      REAL(w2f__8) OpenAD_Symbol_19
      REAL(w2f__8) OpenAD_Symbol_190
      REAL(w2f__8) OpenAD_Symbol_191
      REAL(w2f__8) OpenAD_Symbol_192
      REAL(w2f__8) OpenAD_Symbol_193
      REAL(w2f__8) OpenAD_Symbol_194
      REAL(w2f__8) OpenAD_Symbol_195
      type(active) :: OpenAD_Symbol_196
      REAL(w2f__8) OpenAD_Symbol_197
      REAL(w2f__8) OpenAD_Symbol_198
      REAL(w2f__8) OpenAD_Symbol_199
      REAL(w2f__8) OpenAD_Symbol_2
      REAL(w2f__8) OpenAD_Symbol_20
      REAL(w2f__8) OpenAD_Symbol_200
      REAL(w2f__8) OpenAD_Symbol_201
      REAL(w2f__8) OpenAD_Symbol_202
      REAL(w2f__8) OpenAD_Symbol_203
      REAL(w2f__8) OpenAD_Symbol_204
      REAL(w2f__8) OpenAD_Symbol_205
      REAL(w2f__8) OpenAD_Symbol_206
      REAL(w2f__8) OpenAD_Symbol_207
      REAL(w2f__8) OpenAD_Symbol_208
      type(active) :: OpenAD_Symbol_209
      REAL(w2f__8) OpenAD_Symbol_21
      type(active) :: OpenAD_Symbol_210
      REAL(w2f__8) OpenAD_Symbol_211
      REAL(w2f__8) OpenAD_Symbol_212
      REAL(w2f__8) OpenAD_Symbol_213
      REAL(w2f__8) OpenAD_Symbol_214
      REAL(w2f__8) OpenAD_Symbol_215
      REAL(w2f__8) OpenAD_Symbol_216
      type(active) :: OpenAD_Symbol_217
      INTEGER(w2f__i8) OpenAD_Symbol_218
      INTEGER(w2f__i8) OpenAD_Symbol_219
      REAL(w2f__8) OpenAD_Symbol_22
      INTEGER(w2f__i8) OpenAD_Symbol_220
      INTEGER(w2f__i8) OpenAD_Symbol_221
      INTEGER(w2f__i8) OpenAD_Symbol_222
      INTEGER(w2f__i8) OpenAD_Symbol_223
      REAL(w2f__8) OpenAD_Symbol_23
      REAL(w2f__8) OpenAD_Symbol_24
      REAL(w2f__8) OpenAD_Symbol_26
      REAL(w2f__8) OpenAD_Symbol_27
      REAL(w2f__8) OpenAD_Symbol_28
      REAL(w2f__8) OpenAD_Symbol_29
      REAL(w2f__8) OpenAD_Symbol_30
      REAL(w2f__8) OpenAD_Symbol_31
      REAL(w2f__8) OpenAD_Symbol_32
      REAL(w2f__8) OpenAD_Symbol_33
      REAL(w2f__8) OpenAD_Symbol_34
      REAL(w2f__8) OpenAD_Symbol_35
      REAL(w2f__8) OpenAD_Symbol_36
      REAL(w2f__8) OpenAD_Symbol_37
      REAL(w2f__8) OpenAD_Symbol_38
      REAL(w2f__8) OpenAD_Symbol_39
      REAL(w2f__8) OpenAD_Symbol_4
      REAL(w2f__8) OpenAD_Symbol_41
      REAL(w2f__8) OpenAD_Symbol_42
      REAL(w2f__8) OpenAD_Symbol_43
      REAL(w2f__8) OpenAD_Symbol_44
      REAL(w2f__8) OpenAD_Symbol_46
      REAL(w2f__8) OpenAD_Symbol_47
      REAL(w2f__8) OpenAD_Symbol_49
      REAL(w2f__8) OpenAD_Symbol_5
      REAL(w2f__8) OpenAD_Symbol_50
      REAL(w2f__8) OpenAD_Symbol_51
      REAL(w2f__8) OpenAD_Symbol_52
      REAL(w2f__8) OpenAD_Symbol_53
      REAL(w2f__8) OpenAD_Symbol_54
      REAL(w2f__8) OpenAD_Symbol_55
      REAL(w2f__8) OpenAD_Symbol_56
      REAL(w2f__8) OpenAD_Symbol_57
      REAL(w2f__8) OpenAD_Symbol_58
      REAL(w2f__8) OpenAD_Symbol_59
      REAL(w2f__8) OpenAD_Symbol_6
      REAL(w2f__8) OpenAD_Symbol_60
      REAL(w2f__8) OpenAD_Symbol_61
      REAL(w2f__8) OpenAD_Symbol_62
      REAL(w2f__8) OpenAD_Symbol_64
      REAL(w2f__8) OpenAD_Symbol_65
      REAL(w2f__8) OpenAD_Symbol_66
      REAL(w2f__8) OpenAD_Symbol_67
      REAL(w2f__8) OpenAD_Symbol_69
      REAL(w2f__8) OpenAD_Symbol_7
      REAL(w2f__8) OpenAD_Symbol_70
      REAL(w2f__8) OpenAD_Symbol_72
      REAL(w2f__8) OpenAD_Symbol_73
      REAL(w2f__8) OpenAD_Symbol_74
      REAL(w2f__8) OpenAD_Symbol_75
      REAL(w2f__8) OpenAD_Symbol_76
      REAL(w2f__8) OpenAD_Symbol_77
      REAL(w2f__8) OpenAD_Symbol_78
      REAL(w2f__8) OpenAD_Symbol_79
      REAL(w2f__8) OpenAD_Symbol_8
      REAL(w2f__8) OpenAD_Symbol_80
      REAL(w2f__8) OpenAD_Symbol_81
      REAL(w2f__8) OpenAD_Symbol_82
      REAL(w2f__8) OpenAD_Symbol_83
      REAL(w2f__8) OpenAD_Symbol_85
      REAL(w2f__8) OpenAD_Symbol_86
      REAL(w2f__8) OpenAD_Symbol_87
      REAL(w2f__8) OpenAD_Symbol_88
      REAL(w2f__8) OpenAD_Symbol_9
      REAL(w2f__8) OpenAD_Symbol_90
      REAL(w2f__8) OpenAD_Symbol_91
      REAL(w2f__8) OpenAD_Symbol_93
      REAL(w2f__8) OpenAD_Symbol_94
      REAL(w2f__8) OpenAD_Symbol_95
      REAL(w2f__8) OpenAD_Symbol_97
      REAL(w2f__8) OpenAD_Symbol_98
      REAL(w2f__8) OpenAD_Symbol_99
C
C     **** Parameters and Result ****
C
      type(active) :: X(1 : 9)
      type(active) :: F(1 : 7)
C
C     **** Local Variables and Functions ****
C
      REAL(w2f__8) H
      INTEGER(w2f__i4) I
      INTEGER(w2f__i8) OpenAD_Symbol_224
      INTEGER(w2f__i8) OpenAD_Symbol_225
      INTEGER(w2f__i8) OpenAD_Symbol_226
      INTEGER(w2f__i8) OpenAD_Symbol_227
      INTEGER(w2f__i8) OpenAD_Symbol_228
      INTEGER(w2f__i8) OpenAD_Symbol_229
      INTEGER(w2f__i8) OpenAD_Symbol_230
      INTEGER(w2f__i8) OpenAD_Symbol_231
      INTEGER(w2f__i8) OpenAD_Symbol_232
      INTEGER(w2f__i8) OpenAD_Symbol_233
      INTEGER(w2f__i8) OpenAD_Symbol_234
      INTEGER(w2f__i8) OpenAD_Symbol_235
      REAL(w2f__8) OpenAD_Symbol_236
      REAL(w2f__8) OpenAD_Symbol_237
      REAL(w2f__8) OpenAD_Symbol_238
      REAL(w2f__8) OpenAD_Symbol_239
      REAL(w2f__8) OpenAD_Symbol_240
      REAL(w2f__8) OpenAD_Symbol_241
      REAL(w2f__8) OpenAD_Symbol_242
      REAL(w2f__8) OpenAD_Symbol_243
      INTEGER(w2f__i8) OpenAD_Symbol_244
      INTEGER(w2f__i8) OpenAD_Symbol_245
      INTEGER(w2f__i8) OpenAD_Symbol_246
      REAL(w2f__8) OpenAD_Symbol_247
      INTEGER(w2f__i8) OpenAD_Symbol_248
      REAL(w2f__8) OpenAD_Symbol_249
      INTEGER(w2f__i8) OpenAD_Symbol_250
      INTEGER(w2f__i8) OpenAD_Symbol_251
      REAL(w2f__8) OpenAD_Symbol_252
      INTEGER(w2f__i8) OpenAD_Symbol_253
      INTEGER(w2f__i8) OpenAD_Symbol_254
      REAL(w2f__8) OpenAD_Symbol_255
      INTEGER(w2f__i8) OpenAD_Symbol_256
      REAL(w2f__8) OpenAD_Symbol_257
      INTEGER(w2f__i8) OpenAD_Symbol_258
      INTEGER(w2f__i8) OpenAD_Symbol_259
      INTEGER(w2f__i8) OpenAD_Symbol_260
      REAL(w2f__8) OpenAD_Symbol_261
      INTEGER(w2f__i8) OpenAD_Symbol_262
      INTEGER(w2f__i8) OpenAD_Symbol_263
      REAL(w2f__8) OpenAD_Symbol_264
      INTEGER(w2f__i8) OpenAD_Symbol_265
      INTEGER(w2f__i8) OpenAD_Symbol_266
      REAL(w2f__8) OpenAD_Symbol_267
      INTEGER(w2f__i8) OpenAD_Symbol_268
      INTEGER(w2f__i8) OpenAD_Symbol_269
      INTEGER(w2f__i8) OpenAD_Symbol_270
      REAL(w2f__8) OpenAD_Symbol_271
      INTEGER(w2f__i8) OpenAD_Symbol_272
      REAL(w2f__8) OpenAD_Symbol_273
      INTEGER(w2f__i8) OpenAD_Symbol_274
      INTEGER(w2f__i8) OpenAD_Symbol_275
      REAL(w2f__8) OpenAD_Symbol_276
      INTEGER(w2f__i8) OpenAD_Symbol_277
      INTEGER(w2f__i8) OpenAD_Symbol_278
      REAL(w2f__8) OpenAD_Symbol_279
      INTEGER(w2f__i8) OpenAD_Symbol_280
      INTEGER(w2f__i8) OpenAD_Symbol_281
      INTEGER(w2f__i8) OpenAD_Symbol_282
      INTEGER(w2f__i8) OpenAD_Symbol_283
      REAL(w2f__8) OpenAD_Symbol_284
      REAL(w2f__8) OpenAD_Symbol_285
      REAL(w2f__8) OpenAD_Symbol_286
      REAL(w2f__8) OpenAD_Symbol_287
      REAL(w2f__8) OpenAD_Symbol_288
      REAL(w2f__8) OpenAD_Symbol_289
      REAL(w2f__8) OpenAD_Symbol_290
      REAL(w2f__8) OpenAD_Symbol_291
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(F)
C
C     **** Statements ****
C

          integer iaddr
          external iaddr

         if (our_rev_mode%plain) then
! original function
C$OPENAD XXX Template ad_template.f
      H = 2.5D-01
      F(1)%v = (X(1)%v*(-2.0D00)+((X(8)%v*H*H)/1.2D+01)*(EXP(X(1)%v/(X(1
     +)%v*X(9)%v+1.0D00))*1.0D+01+1.0D00))
      F(2)%v = (X(1)%v+EXP(X(1)%v/(X(1)%v*X(9)%v+1.0D00))*((X(8)%v*H*H)/
     +1.2D+01))
      DO I = 2, 6, 1
        F(INT(I+(-1)))%v = (X(I)%v+F(I+(-1))%v+EXP(X(I)%v/(X(I)%v*X(9)%v
     ++1.0D00))*((X(8)%v*H*H)/1.2D+01))
        F(INT(I))%v = (EXP(X(I)%v/(X(I)%v*X(9)%v+1.0D00))*((X(8)%v*H*H)/
     +1.20000004768371582031D00)+F(I)%v-X(I)%v*2.0D00)
        F(INT(I+1))%v = (X(I)%v+EXP(X(I)%v/(X(I)%v*X(9)%v+1.0D00))*((X(8
     +)%v*H*H)/1.2D+01))
      END DO
      F(6)%v = (X(7)%v+F(6)%v+EXP(X(7)%v/(X(7)%v*X(9)%v+1.0D00))*((X(8)%
     +v*H*H)/1.2D+01))
      F(7)%v = (F(7)%v-X(7)%v*2.0D00)
      F(7)%v = (F(7)%v+((X(8)%v*H*H)/1.2D+01)*(EXP(X(7)%v/(X(7)%v*X(9)%v
     ++1.0D00))*1.0D+01+1.0D00))
          end if
          if (our_rev_mode%tape) then
! taping
C$OPENAD XXX Template ad_template.f
      H = 2.5D-01
      OpenAD_Symbol_11 = (H * H)
      OpenAD_Symbol_8 = (X(8)%v*OpenAD_Symbol_11)
      OpenAD_Symbol_4 = (OpenAD_Symbol_8 / 1.2D+01)
      OpenAD_Symbol_21 = (X(1)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_19 = (X(1)%v/OpenAD_Symbol_21)
      OpenAD_Symbol_16 = EXP(OpenAD_Symbol_19)
      OpenAD_Symbol_5 = (OpenAD_Symbol_16 * 1.0D+01 + 1.0D00)
      F(1)%v = (X(1)%v*(-2.0D00)+OpenAD_Symbol_4*OpenAD_Symbol_5)
      OpenAD_Symbol_2 = (-2.0D00)
      OpenAD_Symbol_0 = 1_w2f__i8
      OpenAD_Symbol_12 = OpenAD_Symbol_11
      OpenAD_Symbol_9 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_6 = OpenAD_Symbol_5
      OpenAD_Symbol_22 = (INT(1_w2f__i8) / OpenAD_Symbol_21)
      OpenAD_Symbol_26 = X(9)%v
      OpenAD_Symbol_27 = X(1)%v
      OpenAD_Symbol_24 = 1_w2f__i8
      OpenAD_Symbol_23 = (-(X(1)%v/(OpenAD_Symbol_21*OpenAD_Symbol_21)))
      OpenAD_Symbol_20 = EXP(OpenAD_Symbol_19)
      OpenAD_Symbol_17 = 1.0D+01
      OpenAD_Symbol_14 = 1_w2f__i8
      OpenAD_Symbol_7 = OpenAD_Symbol_4
      OpenAD_Symbol_1 = 1_w2f__i8
      OpenAD_Symbol_171 = (OpenAD_Symbol_20 * 1.0D+01 * OpenAD_Symbol_7 
     +)
      OpenAD_Symbol_172 = (OpenAD_Symbol_22 * OpenAD_Symbol_171)
      OpenAD_Symbol_173 = (OpenAD_Symbol_23 * OpenAD_Symbol_171)
      OpenAD_Symbol_174 = (OpenAD_Symbol_26 * OpenAD_Symbol_173)
      OpenAD_Symbol_175 = (OpenAD_Symbol_27 * OpenAD_Symbol_173)
      OpenAD_Symbol_176 = (OpenAD_Symbol_12 * OpenAD_Symbol_9 *  OpenAD_
     +Symbol_6)
          double_tape(double_tape_pointer) = OpenAD_Symbol_172
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_174
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_175
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_176
          double_tape_pointer = double_tape_pointer+1
      OpenAD_Symbol_36 = (X(1)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_34 = (X(1)%v/OpenAD_Symbol_36)
      OpenAD_Symbol_30 = EXP(OpenAD_Symbol_34)
      OpenAD_Symbol_46 = (H * H)
      OpenAD_Symbol_43 = (X(8)%v*OpenAD_Symbol_46)
      OpenAD_Symbol_31 = (OpenAD_Symbol_43 / 1.2D+01)
      F(2)%v = (X(1)%v+OpenAD_Symbol_30*OpenAD_Symbol_31)
      OpenAD_Symbol_28 = 1_w2f__i8
      OpenAD_Symbol_37 = (INT(1_w2f__i8) / OpenAD_Symbol_36)
      OpenAD_Symbol_41 = X(9)%v
      OpenAD_Symbol_42 = X(1)%v
      OpenAD_Symbol_39 = 1_w2f__i8
      OpenAD_Symbol_38 = (-(X(1)%v/(OpenAD_Symbol_36*OpenAD_Symbol_36)))
      OpenAD_Symbol_35 = EXP(OpenAD_Symbol_34)
      OpenAD_Symbol_32 = OpenAD_Symbol_31
      OpenAD_Symbol_47 = OpenAD_Symbol_46
      OpenAD_Symbol_44 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_33 = OpenAD_Symbol_30
      OpenAD_Symbol_29 = 1_w2f__i8
      OpenAD_Symbol_177 = (OpenAD_Symbol_35 * OpenAD_Symbol_32)
      OpenAD_Symbol_178 = (OpenAD_Symbol_37 * OpenAD_Symbol_177)
      OpenAD_Symbol_179 = (OpenAD_Symbol_38 * OpenAD_Symbol_177)
      OpenAD_Symbol_180 = (OpenAD_Symbol_41 * OpenAD_Symbol_179)
      OpenAD_Symbol_181 = (OpenAD_Symbol_42 * OpenAD_Symbol_179)
      OpenAD_Symbol_182 = (OpenAD_Symbol_47 * OpenAD_Symbol_44 *  OpenAD
     +_Symbol_33)
          double_tape(double_tape_pointer) = OpenAD_Symbol_178
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_180
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_181
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_182
          double_tape_pointer = double_tape_pointer+1
      OpenAD_Symbol_220 = 0_w2f__i8
      DO I = 2, 6, 1
        OpenAD_Symbol_59 = (X(I)%v*X(9)%v+1.0D00)
        OpenAD_Symbol_57 = (X(I)%v/OpenAD_Symbol_59)
        OpenAD_Symbol_53 = EXP(OpenAD_Symbol_57)
        OpenAD_Symbol_69 = (H * H)
        OpenAD_Symbol_66 = (X(8)%v*OpenAD_Symbol_69)
        OpenAD_Symbol_54 = (OpenAD_Symbol_66 / 1.2D+01)
        F(INT(I+(-1)))%v = (X(I)%v+F(I+(-1))%v+OpenAD_Symbol_53*OpenAD_S
     +ymbol_54)
        OpenAD_Symbol_51 = 1_w2f__i8
        OpenAD_Symbol_52 = 1_w2f__i8
        OpenAD_Symbol_49 = 1_w2f__i8
        OpenAD_Symbol_60 = (INT(1_w2f__i8) / OpenAD_Symbol_59)
        OpenAD_Symbol_64 = X(9)%v
        OpenAD_Symbol_65 = X(I)%v
        OpenAD_Symbol_62 = 1_w2f__i8
        OpenAD_Symbol_61 = (-(X(I)%v/(OpenAD_Symbol_59*OpenAD_Symbol_59)
     +))
        OpenAD_Symbol_58 = EXP(OpenAD_Symbol_57)
        OpenAD_Symbol_55 = OpenAD_Symbol_54
        OpenAD_Symbol_70 = OpenAD_Symbol_69
        OpenAD_Symbol_67 = (INT(1_w2f__i8) / 1.2D+01)
        OpenAD_Symbol_56 = OpenAD_Symbol_53
        OpenAD_Symbol_50 = 1_w2f__i8
        OpenAD_Symbol_183 = (OpenAD_Symbol_58 * OpenAD_Symbol_55)
        OpenAD_Symbol_184 = (OpenAD_Symbol_60 * OpenAD_Symbol_183)
        OpenAD_Symbol_185 = (OpenAD_Symbol_61 * OpenAD_Symbol_183)
        OpenAD_Symbol_186 = (OpenAD_Symbol_64 * OpenAD_Symbol_185)
        OpenAD_Symbol_187 = (OpenAD_Symbol_65 * OpenAD_Symbol_185)
        OpenAD_Symbol_188 = (OpenAD_Symbol_70 * OpenAD_Symbol_67 *  Open
     +AD_Symbol_56)
        OpenAD_Symbol_224 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_224
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_225 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_225
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_226 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_226
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_184
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_227 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_227
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_186
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_228 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_228
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_187
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_229 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_229
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_188
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_230 = (I +(-1))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_230
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_80 = (X(I)%v*X(9)%v+1.0D00)
        OpenAD_Symbol_78 = (X(I)%v/OpenAD_Symbol_80)
        OpenAD_Symbol_74 = EXP(OpenAD_Symbol_78)
        OpenAD_Symbol_90 = (H * H)
        OpenAD_Symbol_87 = (X(8)%v*OpenAD_Symbol_90)
        OpenAD_Symbol_75 = (OpenAD_Symbol_87 /  1.20000004768371582031D0
     +0)
        F(INT(I))%v = (OpenAD_Symbol_74*OpenAD_Symbol_75+F(I)%v-X(I)%v*2
     +.0D00)
        OpenAD_Symbol_81 = (INT(1_w2f__i8) / OpenAD_Symbol_80)
        OpenAD_Symbol_85 = X(9)%v
        OpenAD_Symbol_86 = X(I)%v
        OpenAD_Symbol_83 = 1_w2f__i8
        OpenAD_Symbol_82 = (-(X(I)%v/(OpenAD_Symbol_80*OpenAD_Symbol_80)
     +))
        OpenAD_Symbol_79 = EXP(OpenAD_Symbol_78)
        OpenAD_Symbol_76 = OpenAD_Symbol_75
        OpenAD_Symbol_91 = OpenAD_Symbol_90
        OpenAD_Symbol_88 = (INT(1_w2f__i8) / 1.20000004768371582031D00)
        OpenAD_Symbol_77 = OpenAD_Symbol_74
        OpenAD_Symbol_72 = 1_w2f__i8
        OpenAD_Symbol_93 = 1_w2f__i8
        OpenAD_Symbol_95 = 2.0D00
        OpenAD_Symbol_94 = (-1_w2f__i8)
        OpenAD_Symbol_73 = 1_w2f__i8
        OpenAD_Symbol_190 = (OpenAD_Symbol_79 * OpenAD_Symbol_76)
        OpenAD_Symbol_191 = (OpenAD_Symbol_81 * OpenAD_Symbol_190)
        OpenAD_Symbol_192 = (OpenAD_Symbol_82 * OpenAD_Symbol_190)
        OpenAD_Symbol_193 = (OpenAD_Symbol_85 * OpenAD_Symbol_192)
        OpenAD_Symbol_194 = (OpenAD_Symbol_86 * OpenAD_Symbol_192)
        OpenAD_Symbol_195 = (OpenAD_Symbol_91 * OpenAD_Symbol_88 *  Open
     +AD_Symbol_77)
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_191
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_193
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_194
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_195
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_105 = (X(I)%v*X(9)%v+1.0D00)
        OpenAD_Symbol_103 = (X(I)%v/OpenAD_Symbol_105)
        OpenAD_Symbol_99 = EXP(OpenAD_Symbol_103)
        OpenAD_Symbol_115 = (H * H)
        OpenAD_Symbol_112 = (X(8)%v*OpenAD_Symbol_115)
        OpenAD_Symbol_100 = (OpenAD_Symbol_112 / 1.2D+01)
        F(INT(I+1))%v = (X(I)%v+OpenAD_Symbol_99*OpenAD_Symbol_100)
        OpenAD_Symbol_97 = 1_w2f__i8
        OpenAD_Symbol_106 = (INT(1_w2f__i8) / OpenAD_Symbol_105)
        OpenAD_Symbol_110 = X(9)%v
        OpenAD_Symbol_111 = X(I)%v
        OpenAD_Symbol_108 = 1_w2f__i8
        OpenAD_Symbol_107 = (-(X(I)%v/(OpenAD_Symbol_105*OpenAD_Symbol_1
     +05)))
        OpenAD_Symbol_104 = EXP(OpenAD_Symbol_103)
        OpenAD_Symbol_101 = OpenAD_Symbol_100
        OpenAD_Symbol_116 = OpenAD_Symbol_115
        OpenAD_Symbol_113 = (INT(1_w2f__i8) / 1.2D+01)
        OpenAD_Symbol_102 = OpenAD_Symbol_99
        OpenAD_Symbol_98 = 1_w2f__i8
        OpenAD_Symbol_197 = (OpenAD_Symbol_104 * OpenAD_Symbol_101)
        OpenAD_Symbol_198 = (OpenAD_Symbol_106 * OpenAD_Symbol_197)
        OpenAD_Symbol_199 = (OpenAD_Symbol_107 * OpenAD_Symbol_197)
        OpenAD_Symbol_200 = (OpenAD_Symbol_110 * OpenAD_Symbol_199)
        OpenAD_Symbol_201 = (OpenAD_Symbol_111 * OpenAD_Symbol_199)
        OpenAD_Symbol_202 = (OpenAD_Symbol_116 * OpenAD_Symbol_113 *  Op
     +enAD_Symbol_102)
          double_tape(double_tape_pointer) = OpenAD_Symbol_198
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_231 = (I + 1)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_231
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_200
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_232 = (I + 1)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_232
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_201
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_233 = (I + 1)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_233
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_202
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_234 = (I + 1)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_234
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_235 = (I + 1)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_235
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_220 = (INT(OpenAD_Symbol_220) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_220
          integer_tape_pointer = integer_tape_pointer+1
      OpenAD_Symbol_128 = (X(7)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_126 = (X(7)%v/OpenAD_Symbol_128)
      OpenAD_Symbol_122 = EXP(OpenAD_Symbol_126)
      OpenAD_Symbol_138 = (H * H)
      OpenAD_Symbol_135 = (X(8)%v*OpenAD_Symbol_138)
      OpenAD_Symbol_123 = (OpenAD_Symbol_135 / 1.2D+01)
      F(6)%v = (X(7)%v+F(6)%v+OpenAD_Symbol_122*OpenAD_Symbol_123)
      OpenAD_Symbol_120 = 1_w2f__i8
      OpenAD_Symbol_121 = 1_w2f__i8
      OpenAD_Symbol_118 = 1_w2f__i8
      OpenAD_Symbol_129 = (INT(1_w2f__i8) / OpenAD_Symbol_128)
      OpenAD_Symbol_133 = X(9)%v
      OpenAD_Symbol_134 = X(7)%v
      OpenAD_Symbol_131 = 1_w2f__i8
      OpenAD_Symbol_130 = (-(X(7)%v/(OpenAD_Symbol_128*OpenAD_Symbol_128
     +)))
      OpenAD_Symbol_127 = EXP(OpenAD_Symbol_126)
      OpenAD_Symbol_124 = OpenAD_Symbol_123
      OpenAD_Symbol_139 = OpenAD_Symbol_138
      OpenAD_Symbol_136 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_125 = OpenAD_Symbol_122
      OpenAD_Symbol_119 = 1_w2f__i8
      OpenAD_Symbol_203 = (OpenAD_Symbol_127 * OpenAD_Symbol_124)
      OpenAD_Symbol_204 = (OpenAD_Symbol_129 * OpenAD_Symbol_203)
      OpenAD_Symbol_205 = (OpenAD_Symbol_130 * OpenAD_Symbol_203)
      OpenAD_Symbol_206 = (OpenAD_Symbol_133 * OpenAD_Symbol_205)
      OpenAD_Symbol_207 = (OpenAD_Symbol_134 * OpenAD_Symbol_205)
      OpenAD_Symbol_208 = (OpenAD_Symbol_139 * OpenAD_Symbol_136 *  Open
     +AD_Symbol_125)
          double_tape(double_tape_pointer) = OpenAD_Symbol_204
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_206
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_207
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_208
          double_tape_pointer = double_tape_pointer+1
      F(7)%v = (F(7)%v-X(7)%v*2.0D00)
      OpenAD_Symbol_141 = 1_w2f__i8
      OpenAD_Symbol_143 = 2.0D00
      OpenAD_Symbol_142 = (-1_w2f__i8)
      OpenAD_Symbol_154 = (H * H)
      OpenAD_Symbol_151 = (X(8)%v*OpenAD_Symbol_154)
      OpenAD_Symbol_147 = (OpenAD_Symbol_151 / 1.2D+01)
      OpenAD_Symbol_164 = (X(7)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_162 = (X(7)%v/OpenAD_Symbol_164)
      OpenAD_Symbol_159 = EXP(OpenAD_Symbol_162)
      OpenAD_Symbol_148 = (OpenAD_Symbol_159 * 1.0D+01 + 1.0D00)
      F(7)%v = (F(7)%v+OpenAD_Symbol_147*OpenAD_Symbol_148)
      OpenAD_Symbol_145 = 1_w2f__i8
      OpenAD_Symbol_155 = OpenAD_Symbol_154
      OpenAD_Symbol_152 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_149 = OpenAD_Symbol_148
      OpenAD_Symbol_165 = (INT(1_w2f__i8) / OpenAD_Symbol_164)
      OpenAD_Symbol_169 = X(9)%v
      OpenAD_Symbol_170 = X(7)%v
      OpenAD_Symbol_167 = 1_w2f__i8
      OpenAD_Symbol_166 = (-(X(7)%v/(OpenAD_Symbol_164*OpenAD_Symbol_164
     +)))
      OpenAD_Symbol_163 = EXP(OpenAD_Symbol_162)
      OpenAD_Symbol_160 = 1.0D+01
      OpenAD_Symbol_157 = 1_w2f__i8
      OpenAD_Symbol_150 = OpenAD_Symbol_147
      OpenAD_Symbol_146 = 1_w2f__i8
      OpenAD_Symbol_211 = (OpenAD_Symbol_163 * 1.0D+01 *  OpenAD_Symbol_
     +150)
      OpenAD_Symbol_212 = (OpenAD_Symbol_165 * OpenAD_Symbol_211)
      OpenAD_Symbol_213 = (OpenAD_Symbol_166 * OpenAD_Symbol_211)
      OpenAD_Symbol_214 = (OpenAD_Symbol_169 * OpenAD_Symbol_213)
      OpenAD_Symbol_215 = (OpenAD_Symbol_170 * OpenAD_Symbol_213)
      OpenAD_Symbol_216 = (OpenAD_Symbol_155 * OpenAD_Symbol_152 *  Open
     +AD_Symbol_149)
          double_tape(double_tape_pointer) = OpenAD_Symbol_212
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_214
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_215
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_216
          double_tape_pointer = double_tape_pointer+1
          end if 
          if (our_rev_mode%adjoint) then
! adjoint
          OpenAD_Symbol_217%d = OpenAD_Symbol_217%d+F(7)%d*1 _w2f__i8
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_284 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(7)%d*OpenAD_Symbol_284
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_285 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(7)%d*OpenAD_Symbol_285
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_286 = double_tape(double_tape_pointer)
          X(7)%d = X(7)%d+F(7)%d*OpenAD_Symbol_286
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_287 = double_tape(double_tape_pointer)
          X(7)%d = X(7)%d+F(7)%d*OpenAD_Symbol_287
          F(7)%d = 0.0d0
          F(7)%d = F(7)%d+OpenAD_Symbol_217%d
          OpenAD_Symbol_217%d = 0.0d0
          OpenAD_Symbol_210%d = OpenAD_Symbol_210%d+F(7)%d*1 _w2f__i8
          X(7)%d = X(7)%d+F(7)%d*-2.0D00
          F(7)%d = 0.0d0
          F(7)%d = F(7)%d+OpenAD_Symbol_210%d
          OpenAD_Symbol_210%d = 0.0d0
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_288 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(6)%d*OpenAD_Symbol_288
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_289 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(6)%d*OpenAD_Symbol_289
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_290 = double_tape(double_tape_pointer)
          X(7)%d = X(7)%d+F(6)%d*OpenAD_Symbol_290
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_291 = double_tape(double_tape_pointer)
          X(7)%d = X(7)%d+F(6)%d*OpenAD_Symbol_291
          OpenAD_Symbol_209%d = OpenAD_Symbol_209%d+F(6)%d*1 _w2f__i8
          X(7)%d = X(7)%d+F(6)%d*1 _w2f__i8
          F(6)%d = 0.0d0
          F(6)%d = F(6)%d+OpenAD_Symbol_209%d
          OpenAD_Symbol_209%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_218 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_219 = 1
      DO WHILE(INT(OpenAD_Symbol_219) .LE. INT(OpenAD_Symbol_218))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_244 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_245 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_245))%d = X(INT(OpenAD_Symbol_245))%d+F(IN
     +T(OpenAD_Symbol_244))%d*1 _w2f__i8
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_246 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_247 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(INT(OpenAD_Symbol_246))%d*OpenAD_Symbol_247
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_248 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_249 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(INT(OpenAD_Symbol_248))%d*OpenAD_Symbol_249
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_250 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_251 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_252 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_251))%d = X(INT(OpenAD_Symbol_251))%d+F(IN
     +T(OpenAD_Symbol_250))%d*OpenAD_Symbol_252
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_253 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_254 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_255 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_254))%d = X(INT(OpenAD_Symbol_254))%d+F(IN
     +T(OpenAD_Symbol_253))%d*OpenAD_Symbol_255
          F(INT(OpenAD_Symbol_253))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_256 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_257 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(INT(OpenAD_Symbol_256))%d*OpenAD_Symbol_257
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_258 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_259 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_259))%d = X(INT(OpenAD_Symbol_259))%d+F(IN
     +T(OpenAD_Symbol_258))%d*-2.0D00
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_260 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_261 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(INT(OpenAD_Symbol_260))%d*OpenAD_Symbol_261
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_262 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_263 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_264 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_263))%d = X(INT(OpenAD_Symbol_263))%d+F(IN
     +T(OpenAD_Symbol_262))%d*OpenAD_Symbol_264
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_265 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_266 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_267 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_266))%d = X(INT(OpenAD_Symbol_266))%d+F(IN
     +T(OpenAD_Symbol_265))%d*OpenAD_Symbol_267
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_268 = integer_tape(integer_tape_pointer)
          OpenAD_Symbol_196%d = OpenAD_Symbol_196%d+F(INT(OpenAD_Symbol_
     +268))%d*1 _w2f__i8
          F(INT(OpenAD_Symbol_268))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_269 = integer_tape(integer_tape_pointer)
          F(INT(OpenAD_Symbol_269))%d = F(INT(OpenAD_Symbol_269))%d+Open
     +AD_Symbol_196%d
          OpenAD_Symbol_196%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_270 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_271 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(INT(OpenAD_Symbol_270))%d*OpenAD_Symbol_271
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_272 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_273 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(INT(OpenAD_Symbol_272))%d*OpenAD_Symbol_273
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_274 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_275 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_276 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_275))%d = X(INT(OpenAD_Symbol_275))%d+F(IN
     +T(OpenAD_Symbol_274))%d*OpenAD_Symbol_276
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_277 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_278 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_279 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_278))%d = X(INT(OpenAD_Symbol_278))%d+F(IN
     +T(OpenAD_Symbol_277))%d*OpenAD_Symbol_279
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_280 = integer_tape(integer_tape_pointer)
          OpenAD_Symbol_189%d = OpenAD_Symbol_189%d+F(INT(OpenAD_Symbol_
     +280))%d*1 _w2f__i8
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_281 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_282 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_282))%d = X(INT(OpenAD_Symbol_282))%d+F(IN
     +T(OpenAD_Symbol_281))%d*1 _w2f__i8
          F(INT(OpenAD_Symbol_281))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_283 = integer_tape(integer_tape_pointer)
          F(INT(OpenAD_Symbol_283))%d = F(INT(OpenAD_Symbol_283))%d+Open
     +AD_Symbol_189%d
          OpenAD_Symbol_189%d = 0.0d0
        OpenAD_Symbol_219 = INT(OpenAD_Symbol_219) + 1
      END DO
          X(1)%d = X(1)%d+F(2)%d*1 _w2f__i8
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_236 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(2)%d*OpenAD_Symbol_236
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_237 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(2)%d*OpenAD_Symbol_237
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_238 = double_tape(double_tape_pointer)
          X(1)%d = X(1)%d+F(2)%d*OpenAD_Symbol_238
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_239 = double_tape(double_tape_pointer)
          X(1)%d = X(1)%d+F(2)%d*OpenAD_Symbol_239
          F(2)%d = 0.0d0
          X(1)%d = X(1)%d+F(1)%d*-2.0D00
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_240 = double_tape(double_tape_pointer)
          X(8)%d = X(8)%d+F(1)%d*OpenAD_Symbol_240
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_241 = double_tape(double_tape_pointer)
          X(9)%d = X(9)%d+F(1)%d*OpenAD_Symbol_241
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_242 = double_tape(double_tape_pointer)
          X(1)%d = X(1)%d+F(1)%d*OpenAD_Symbol_242
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_243 = double_tape(double_tape_pointer)
          X(1)%d = X(1)%d+F(1)%d*OpenAD_Symbol_243
          F(1)%d = 0.0d0
          end if 
        end subroutine head
