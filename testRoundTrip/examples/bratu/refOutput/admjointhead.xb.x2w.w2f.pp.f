C ***********************************************************
C Fortran file translated from WHIRL Fri Jul 21 11:32:37 2006
C ***********************************************************
C ***********************************************************

C ========== begin copyright notice ==============
C This file is part of 
C ---------------
C xaifBooster
C ---------------
C Distributed under the BSD license as follows:
C Copyright (c) 2005, The University of Chicago
C All rights reserved.
C
C Redistribution and use in source and binary forms, 
C with or without modification, are permitted provided that the following conditions are met:
C
C    - Redistributions of source code must retain the above copyright notice, 
C      this list of conditions and the following disclaimer.
C    - Redistributions in binary form must reproduce the above copyright notice, 
C      this list of conditions and the following disclaimer in the documentation 
C      and/or other materials provided with the distribution.
C    - Neither the name of The University of Chicago nor the names of its contributors 
C      may be used to endorse or promote products derived from this software without 
C      specific prior written permission.
C
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
C EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
C OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
C SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
C INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
C INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
C LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
C 
C General Information:
C xaifBooster is intended for the transformation of 
C numerical programs represented as xml files according 
C to the XAIF schema. It is part of the OpenAD framework. 
C The main application is automatic 
C differentiation, i.e. the generation of code for 
C the computation of derivatives. 
C The following people are the principal authors of the 
C current version: 
C 	Uwe Naumann
C	Jean Utke
C Additional contributors are: 
C	Andrew Lyons
C	Peter Fine
C
C For more details about xaifBooster and its use in OpenAD please visit:
C   http://www.mcs.anl.gov/openad
C
C This work is partially supported by:
C 	NSF-ITR grant OCE-0205590
C ========== end copyright notice ==============
       subroutine head(X,F)
          use OpenAD_dct
          use OpenAD_tape
          use OpenAD_rev
          use OpenAD_checkpoints

          ! original arguments get inserted before version
          ! and declared here together with all local variables
          ! generated by xaifBooster

      use w2f__types
      use active_module
      IMPLICIT NONE
C
C     **** Global Variables & Derived Type Definitions ****
C
      REAL(w2f__8) OpenAD_Symbol_0
      REAL(w2f__8) OpenAD_Symbol_1
      REAL(w2f__8) OpenAD_Symbol_100
      REAL(w2f__8) OpenAD_Symbol_101
      REAL(w2f__8) OpenAD_Symbol_102
      REAL(w2f__8) OpenAD_Symbol_103
      REAL(w2f__8) OpenAD_Symbol_104
      REAL(w2f__8) OpenAD_Symbol_105
      REAL(w2f__8) OpenAD_Symbol_106
      REAL(w2f__8) OpenAD_Symbol_107
      REAL(w2f__8) OpenAD_Symbol_108
      REAL(w2f__8) OpenAD_Symbol_109
      REAL(w2f__8) OpenAD_Symbol_11
      REAL(w2f__8) OpenAD_Symbol_110
      REAL(w2f__8) OpenAD_Symbol_111
      REAL(w2f__8) OpenAD_Symbol_112
      REAL(w2f__8) OpenAD_Symbol_114
      REAL(w2f__8) OpenAD_Symbol_115
      REAL(w2f__8) OpenAD_Symbol_116
      REAL(w2f__8) OpenAD_Symbol_117
      REAL(w2f__8) OpenAD_Symbol_119
      REAL(w2f__8) OpenAD_Symbol_12
      REAL(w2f__8) OpenAD_Symbol_120
      REAL(w2f__8) OpenAD_Symbol_122
      REAL(w2f__8) OpenAD_Symbol_123
      REAL(w2f__8) OpenAD_Symbol_124
      REAL(w2f__8) OpenAD_Symbol_125
      REAL(w2f__8) OpenAD_Symbol_126
      REAL(w2f__8) OpenAD_Symbol_127
      REAL(w2f__8) OpenAD_Symbol_128
      REAL(w2f__8) OpenAD_Symbol_129
      REAL(w2f__8) OpenAD_Symbol_130
      REAL(w2f__8) OpenAD_Symbol_131
      REAL(w2f__8) OpenAD_Symbol_132
      REAL(w2f__8) OpenAD_Symbol_133
      REAL(w2f__8) OpenAD_Symbol_134
      REAL(w2f__8) OpenAD_Symbol_135
      REAL(w2f__8) OpenAD_Symbol_136
      REAL(w2f__8) OpenAD_Symbol_138
      REAL(w2f__8) OpenAD_Symbol_139
      REAL(w2f__8) OpenAD_Symbol_14
      REAL(w2f__8) OpenAD_Symbol_140
      REAL(w2f__8) OpenAD_Symbol_141
      REAL(w2f__8) OpenAD_Symbol_143
      REAL(w2f__8) OpenAD_Symbol_144
      REAL(w2f__8) OpenAD_Symbol_146
      REAL(w2f__8) OpenAD_Symbol_147
      REAL(w2f__8) OpenAD_Symbol_148
      REAL(w2f__8) OpenAD_Symbol_149
      REAL(w2f__8) OpenAD_Symbol_151
      REAL(w2f__8) OpenAD_Symbol_152
      REAL(w2f__8) OpenAD_Symbol_153
      REAL(w2f__8) OpenAD_Symbol_154
      REAL(w2f__8) OpenAD_Symbol_155
      REAL(w2f__8) OpenAD_Symbol_156
      REAL(w2f__8) OpenAD_Symbol_157
      REAL(w2f__8) OpenAD_Symbol_158
      REAL(w2f__8) OpenAD_Symbol_159
      REAL(w2f__8) OpenAD_Symbol_16
      REAL(w2f__8) OpenAD_Symbol_161
      REAL(w2f__8) OpenAD_Symbol_162
      REAL(w2f__8) OpenAD_Symbol_164
      REAL(w2f__8) OpenAD_Symbol_166
      REAL(w2f__8) OpenAD_Symbol_167
      REAL(w2f__8) OpenAD_Symbol_169
      REAL(w2f__8) OpenAD_Symbol_17
      REAL(w2f__8) OpenAD_Symbol_170
      REAL(w2f__8) OpenAD_Symbol_171
      REAL(w2f__8) OpenAD_Symbol_172
      REAL(w2f__8) OpenAD_Symbol_173
      REAL(w2f__8) OpenAD_Symbol_174
      REAL(w2f__8) OpenAD_Symbol_176
      REAL(w2f__8) OpenAD_Symbol_177
      REAL(w2f__8) OpenAD_Symbol_178
      REAL(w2f__8) OpenAD_Symbol_179
      REAL(w2f__8) OpenAD_Symbol_180
      REAL(w2f__8) OpenAD_Symbol_181
      REAL(w2f__8) OpenAD_Symbol_182
      REAL(w2f__8) OpenAD_Symbol_183
      REAL(w2f__8) OpenAD_Symbol_184
      REAL(w2f__8) OpenAD_Symbol_185
      REAL(w2f__8) OpenAD_Symbol_186
      type(active) :: OpenAD_Symbol_187
      REAL(w2f__8) OpenAD_Symbol_188
      REAL(w2f__8) OpenAD_Symbol_189
      REAL(w2f__8) OpenAD_Symbol_19
      REAL(w2f__8) OpenAD_Symbol_190
      type(active) :: OpenAD_Symbol_191
      REAL(w2f__8) OpenAD_Symbol_192
      REAL(w2f__8) OpenAD_Symbol_193
      REAL(w2f__8) OpenAD_Symbol_194
      REAL(w2f__8) OpenAD_Symbol_195
      type(active) :: OpenAD_Symbol_196
      REAL(w2f__8) OpenAD_Symbol_197
      type(active) :: OpenAD_Symbol_198
      REAL(w2f__8) OpenAD_Symbol_199
      REAL(w2f__8) OpenAD_Symbol_2
      REAL(w2f__8) OpenAD_Symbol_20
      REAL(w2f__8) OpenAD_Symbol_200
      type(active) :: OpenAD_Symbol_201
      REAL(w2f__8) OpenAD_Symbol_202
      type(active) :: OpenAD_Symbol_203
      REAL(w2f__8) OpenAD_Symbol_204
      REAL(w2f__8) OpenAD_Symbol_205
      type(active) :: OpenAD_Symbol_206
      REAL(w2f__8) OpenAD_Symbol_207
      type(active) :: OpenAD_Symbol_208
      REAL(w2f__8) OpenAD_Symbol_209
      REAL(w2f__8) OpenAD_Symbol_21
      type(active) :: OpenAD_Symbol_210
      REAL(w2f__8) OpenAD_Symbol_211
      type(active) :: OpenAD_Symbol_212
      REAL(w2f__8) OpenAD_Symbol_213
      REAL(w2f__8) OpenAD_Symbol_214
      REAL(w2f__8) OpenAD_Symbol_215
      type(active) :: OpenAD_Symbol_216
      REAL(w2f__8) OpenAD_Symbol_217
      type(active) :: OpenAD_Symbol_218
      REAL(w2f__8) OpenAD_Symbol_219
      REAL(w2f__8) OpenAD_Symbol_22
      REAL(w2f__8) OpenAD_Symbol_220
      type(active) :: OpenAD_Symbol_221
      REAL(w2f__8) OpenAD_Symbol_222
      REAL(w2f__8) OpenAD_Symbol_223
      REAL(w2f__8) OpenAD_Symbol_224
      REAL(w2f__8) OpenAD_Symbol_225
      type(active) :: OpenAD_Symbol_226
      REAL(w2f__8) OpenAD_Symbol_227
      type(active) :: OpenAD_Symbol_228
      REAL(w2f__8) OpenAD_Symbol_229
      REAL(w2f__8) OpenAD_Symbol_23
      type(active) :: OpenAD_Symbol_230
      REAL(w2f__8) OpenAD_Symbol_231
      REAL(w2f__8) OpenAD_Symbol_232
      REAL(w2f__8) OpenAD_Symbol_233
      REAL(w2f__8) OpenAD_Symbol_234
      REAL(w2f__8) OpenAD_Symbol_235
      type(active) :: OpenAD_Symbol_236
      REAL(w2f__8) OpenAD_Symbol_237
      REAL(w2f__8) OpenAD_Symbol_238
      REAL(w2f__8) OpenAD_Symbol_239
      REAL(w2f__8) OpenAD_Symbol_24
      type(active) :: OpenAD_Symbol_240
      REAL(w2f__8) OpenAD_Symbol_241
      REAL(w2f__8) OpenAD_Symbol_242
      REAL(w2f__8) OpenAD_Symbol_243
      type(active) :: OpenAD_Symbol_244
      REAL(w2f__8) OpenAD_Symbol_245
      REAL(w2f__8) OpenAD_Symbol_246
      REAL(w2f__8) OpenAD_Symbol_247
      REAL(w2f__8) OpenAD_Symbol_248
      type(active) :: OpenAD_Symbol_249
      REAL(w2f__8) OpenAD_Symbol_250
      type(active) :: OpenAD_Symbol_251
      REAL(w2f__8) OpenAD_Symbol_252
      REAL(w2f__8) OpenAD_Symbol_253
      REAL(w2f__8) OpenAD_Symbol_254
      type(active) :: OpenAD_Symbol_255
      REAL(w2f__8) OpenAD_Symbol_256
      type(active) :: OpenAD_Symbol_257
      REAL(w2f__8) OpenAD_Symbol_258
      type(active) :: OpenAD_Symbol_259
      REAL(w2f__8) OpenAD_Symbol_26
      REAL(w2f__8) OpenAD_Symbol_260
      type(active) :: OpenAD_Symbol_261
      REAL(w2f__8) OpenAD_Symbol_262
      type(active) :: OpenAD_Symbol_263
      REAL(w2f__8) OpenAD_Symbol_264
      type(active) :: OpenAD_Symbol_265
      REAL(w2f__8) OpenAD_Symbol_266
      REAL(w2f__8) OpenAD_Symbol_267
      REAL(w2f__8) OpenAD_Symbol_268
      type(active) :: OpenAD_Symbol_269
      REAL(w2f__8) OpenAD_Symbol_27
      REAL(w2f__8) OpenAD_Symbol_270
      type(active) :: OpenAD_Symbol_271
      REAL(w2f__8) OpenAD_Symbol_272
      REAL(w2f__8) OpenAD_Symbol_273
      type(active) :: OpenAD_Symbol_274
      REAL(w2f__8) OpenAD_Symbol_275
      REAL(w2f__8) OpenAD_Symbol_276
      REAL(w2f__8) OpenAD_Symbol_277
      REAL(w2f__8) OpenAD_Symbol_278
      type(active) :: OpenAD_Symbol_279
      REAL(w2f__8) OpenAD_Symbol_28
      REAL(w2f__8) OpenAD_Symbol_280
      type(active) :: OpenAD_Symbol_281
      REAL(w2f__8) OpenAD_Symbol_282
      type(active) :: OpenAD_Symbol_283
      REAL(w2f__8) OpenAD_Symbol_284
      type(active) :: OpenAD_Symbol_285
      REAL(w2f__8) OpenAD_Symbol_286
      type(active) :: OpenAD_Symbol_287
      REAL(w2f__8) OpenAD_Symbol_288
      REAL(w2f__8) OpenAD_Symbol_289
      REAL(w2f__8) OpenAD_Symbol_29
      REAL(w2f__8) OpenAD_Symbol_290
      REAL(w2f__8) OpenAD_Symbol_291
      REAL(w2f__8) OpenAD_Symbol_292
      REAL(w2f__8) OpenAD_Symbol_293
      type(active) :: OpenAD_Symbol_294
      REAL(w2f__8) OpenAD_Symbol_295
      REAL(w2f__8) OpenAD_Symbol_296
      REAL(w2f__8) OpenAD_Symbol_297
      type(active) :: OpenAD_Symbol_298
      REAL(w2f__8) OpenAD_Symbol_299
      REAL(w2f__8) OpenAD_Symbol_30
      type(active) :: OpenAD_Symbol_300
      REAL(w2f__8) OpenAD_Symbol_301
      REAL(w2f__8) OpenAD_Symbol_302
      type(active) :: OpenAD_Symbol_303
      REAL(w2f__8) OpenAD_Symbol_304
      type(active) :: OpenAD_Symbol_305
      INTEGER(w2f__i8) OpenAD_Symbol_306
      INTEGER(w2f__i8) OpenAD_Symbol_307
      INTEGER(w2f__i8) OpenAD_Symbol_308
      REAL(w2f__8) OpenAD_Symbol_31
      REAL(w2f__8) OpenAD_Symbol_32
      REAL(w2f__8) OpenAD_Symbol_33
      REAL(w2f__8) OpenAD_Symbol_34
      REAL(w2f__8) OpenAD_Symbol_35
      REAL(w2f__8) OpenAD_Symbol_36
      REAL(w2f__8) OpenAD_Symbol_37
      REAL(w2f__8) OpenAD_Symbol_38
      REAL(w2f__8) OpenAD_Symbol_39
      REAL(w2f__8) OpenAD_Symbol_4
      REAL(w2f__8) OpenAD_Symbol_40
      REAL(w2f__8) OpenAD_Symbol_42
      REAL(w2f__8) OpenAD_Symbol_43
      REAL(w2f__8) OpenAD_Symbol_44
      REAL(w2f__8) OpenAD_Symbol_45
      REAL(w2f__8) OpenAD_Symbol_47
      REAL(w2f__8) OpenAD_Symbol_48
      REAL(w2f__8) OpenAD_Symbol_5
      REAL(w2f__8) OpenAD_Symbol_50
      REAL(w2f__8) OpenAD_Symbol_51
      REAL(w2f__8) OpenAD_Symbol_52
      REAL(w2f__8) OpenAD_Symbol_53
      REAL(w2f__8) OpenAD_Symbol_54
      REAL(w2f__8) OpenAD_Symbol_55
      REAL(w2f__8) OpenAD_Symbol_56
      REAL(w2f__8) OpenAD_Symbol_57
      REAL(w2f__8) OpenAD_Symbol_58
      REAL(w2f__8) OpenAD_Symbol_59
      REAL(w2f__8) OpenAD_Symbol_6
      REAL(w2f__8) OpenAD_Symbol_60
      REAL(w2f__8) OpenAD_Symbol_61
      REAL(w2f__8) OpenAD_Symbol_62
      REAL(w2f__8) OpenAD_Symbol_63
      REAL(w2f__8) OpenAD_Symbol_64
      REAL(w2f__8) OpenAD_Symbol_66
      REAL(w2f__8) OpenAD_Symbol_67
      REAL(w2f__8) OpenAD_Symbol_68
      REAL(w2f__8) OpenAD_Symbol_69
      REAL(w2f__8) OpenAD_Symbol_7
      REAL(w2f__8) OpenAD_Symbol_71
      REAL(w2f__8) OpenAD_Symbol_72
      REAL(w2f__8) OpenAD_Symbol_74
      REAL(w2f__8) OpenAD_Symbol_75
      REAL(w2f__8) OpenAD_Symbol_76
      REAL(w2f__8) OpenAD_Symbol_77
      REAL(w2f__8) OpenAD_Symbol_78
      REAL(w2f__8) OpenAD_Symbol_79
      REAL(w2f__8) OpenAD_Symbol_8
      REAL(w2f__8) OpenAD_Symbol_80
      REAL(w2f__8) OpenAD_Symbol_81
      REAL(w2f__8) OpenAD_Symbol_82
      REAL(w2f__8) OpenAD_Symbol_83
      REAL(w2f__8) OpenAD_Symbol_84
      REAL(w2f__8) OpenAD_Symbol_85
      REAL(w2f__8) OpenAD_Symbol_86
      REAL(w2f__8) OpenAD_Symbol_88
      REAL(w2f__8) OpenAD_Symbol_89
      REAL(w2f__8) OpenAD_Symbol_9
      REAL(w2f__8) OpenAD_Symbol_90
      REAL(w2f__8) OpenAD_Symbol_91
      REAL(w2f__8) OpenAD_Symbol_93
      REAL(w2f__8) OpenAD_Symbol_94
      REAL(w2f__8) OpenAD_Symbol_96
      REAL(w2f__8) OpenAD_Symbol_97
      REAL(w2f__8) OpenAD_Symbol_98
C
C     **** Parameters and Result ****
C
      type(active) :: X(1 : 9)
      type(active) :: F(1 : 7)
C
C     **** Local Variables and Functions ****
C
      REAL(w2f__8) H
      INTEGER(w2f__i4) I
      REAL(w2f__8) OpenAD_Symbol_309
      REAL(w2f__8) OpenAD_Symbol_310
      REAL(w2f__8) OpenAD_Symbol_311
      REAL(w2f__8) OpenAD_Symbol_312
      REAL(w2f__8) OpenAD_Symbol_313
      REAL(w2f__8) OpenAD_Symbol_314
      REAL(w2f__8) OpenAD_Symbol_315
      REAL(w2f__8) OpenAD_Symbol_316
      REAL(w2f__8) OpenAD_Symbol_317
      REAL(w2f__8) OpenAD_Symbol_318
      INTEGER(w2f__i8) OpenAD_Symbol_319
      INTEGER(w2f__i8) OpenAD_Symbol_320
      INTEGER(w2f__i8) OpenAD_Symbol_321
      INTEGER(w2f__i8) OpenAD_Symbol_322
      INTEGER(w2f__i8) OpenAD_Symbol_323
      INTEGER(w2f__i8) OpenAD_Symbol_324
      INTEGER(w2f__i8) OpenAD_Symbol_325
      INTEGER(w2f__i8) OpenAD_Symbol_326
      INTEGER(w2f__i8) OpenAD_Symbol_327
      INTEGER(w2f__i8) OpenAD_Symbol_328
      INTEGER(w2f__i8) OpenAD_Symbol_329
      INTEGER(w2f__i8) OpenAD_Symbol_330
      INTEGER(w2f__i8) OpenAD_Symbol_331
      REAL(w2f__8) OpenAD_Symbol_332
      INTEGER(w2f__i8) OpenAD_Symbol_333
      REAL(w2f__8) OpenAD_Symbol_334
      INTEGER(w2f__i8) OpenAD_Symbol_335
      REAL(w2f__8) OpenAD_Symbol_336
      INTEGER(w2f__i8) OpenAD_Symbol_337
      REAL(w2f__8) OpenAD_Symbol_338
      INTEGER(w2f__i8) OpenAD_Symbol_339
      REAL(w2f__8) OpenAD_Symbol_340
      INTEGER(w2f__i8) OpenAD_Symbol_341
      REAL(w2f__8) OpenAD_Symbol_342
      INTEGER(w2f__i8) OpenAD_Symbol_343
      REAL(w2f__8) OpenAD_Symbol_344
      INTEGER(w2f__i8) OpenAD_Symbol_345
      REAL(w2f__8) OpenAD_Symbol_346
      INTEGER(w2f__i8) OpenAD_Symbol_347
      REAL(w2f__8) OpenAD_Symbol_348
      INTEGER(w2f__i8) OpenAD_Symbol_349
      REAL(w2f__8) OpenAD_Symbol_350
      INTEGER(w2f__i8) OpenAD_Symbol_351
      REAL(w2f__8) OpenAD_Symbol_352
      INTEGER(w2f__i8) OpenAD_Symbol_353
      INTEGER(w2f__i8) OpenAD_Symbol_354
      INTEGER(w2f__i8) OpenAD_Symbol_355
      INTEGER(w2f__i8) OpenAD_Symbol_356
      INTEGER(w2f__i8) OpenAD_Symbol_357
      INTEGER(w2f__i8) OpenAD_Symbol_358
      INTEGER(w2f__i8) OpenAD_Symbol_359
      INTEGER(w2f__i8) OpenAD_Symbol_360
      REAL(w2f__8) OpenAD_Symbol_361
      INTEGER(w2f__i8) OpenAD_Symbol_362
      REAL(w2f__8) OpenAD_Symbol_363
      INTEGER(w2f__i8) OpenAD_Symbol_364
      REAL(w2f__8) OpenAD_Symbol_365
      INTEGER(w2f__i8) OpenAD_Symbol_366
      REAL(w2f__8) OpenAD_Symbol_367
      INTEGER(w2f__i8) OpenAD_Symbol_368
      REAL(w2f__8) OpenAD_Symbol_369
      INTEGER(w2f__i8) OpenAD_Symbol_370
      REAL(w2f__8) OpenAD_Symbol_371
      INTEGER(w2f__i8) OpenAD_Symbol_372
      INTEGER(w2f__i8) OpenAD_Symbol_373
      INTEGER(w2f__i8) OpenAD_Symbol_374
      INTEGER(w2f__i8) OpenAD_Symbol_375
      REAL(w2f__8) OpenAD_Symbol_376
      REAL(w2f__8) OpenAD_Symbol_377
      REAL(w2f__8) OpenAD_Symbol_378
      REAL(w2f__8) OpenAD_Symbol_379
      REAL(w2f__8) OpenAD_Symbol_380
      REAL(w2f__8) OpenAD_Symbol_381
      REAL(w2f__8) OpenAD_Symbol_382
      REAL(w2f__8) OpenAD_Symbol_383
      REAL(w2f__8) OpenAD_Symbol_384
      REAL(w2f__8) OpenAD_Symbol_385
      REAL(w2f__8) OpenAD_Symbol_386
      REAL(w2f__8) OpenAD_Symbol_387
      REAL(w2f__8) OpenAD_Symbol_388
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(F)
C
C     **** Statements ****
C


          ! checkpointing stacks and offsets
          integer :: cp_loop_variable_1,cp_loop_variable_2,
     +cp_loop_variable_3,cp_loop_variable_4,cp_loop_variable_5
          ! floats 'F'
          double precision, dimension(:), allocatable, save :: 
     +theArgFStack
          integer, save :: theArgFStackoffset=0, theArgFStackSize=0
          double precision, dimension(:), allocatable, save :: 
     +theResFStack
          integer, save :: theResFStackoffset=0, theResFStackSize=0
          ! integers 'I'
          integer, dimension(:), allocatable, save :: 
     +theArgIStack
          integer, save :: theArgIStackoffset=0, theArgIStackSize=0
          integer, dimension(:), allocatable, save :: 
     +theResIStack
          integer, save :: theResIStackoffset=0, theResIStackSize=0
          ! booleans 'B'
          logical, dimension(:), allocatable, save :: 
     +theArgBStack
          integer, save :: theArgBStackoffset=0, theArgBStackSize=0
          logical, dimension(:), allocatable, save :: 
     +theResBStack
          integer, save :: theResBStackoffset=0, theResBStackSize=0
          ! strings 'S'
          character*(80), dimension(:), allocatable, save :: 
     +theArgSStack
          integer, save :: theArgSStackoffset=0, theArgSStackSize=0
          character*(80), dimension(:), allocatable, save :: 
     +theResSStack
          integer, save :: theResSStackoffset=0, theResSStackSize=0

          type(modeType) :: our_orig_mode

	  ! call external C function used in inlined code
          integer iaddr
          external iaddr

C          write(*,'(A,I6,A,I6,A,I6,A,I6,A,I5,A,I5)')
C     +"b:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" RF:",theResFStackoffset, 
C     +" RI:",theResIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
          if (our_rev_mode%arg_store) then 
C            print*, " arg_store  ", our_rev_mode
C store arguments
          call cp_store_real_vector(X,size(X),theArgFStack,theArgFStacko
     +ffset,theArgFStackSize)
          call cp_store_real_vector(F,size(F),theArgFStack,theArgFStacko
     +ffset,theArgFStackSize)
          end if 
          if (our_rev_mode%arg_restore) then
C            print*, " arg_restore", our_rev_mode
C restore arguments
          do cp_loop_variable_1 = ubound(F,1),lbound(F,1),-1
             F(cp_loop_variable_1)%v = theArgFStack(theArgFStackoffset)
             theArgFStackoffset = theArgFStackoffset-1
C write(*,'(A,EN26.16E3)')"restore(v)  ",
C+F(cp_loop_variable_1)%v
          end do
          do cp_loop_variable_1 = ubound(X,1),lbound(X,1),-1
             X(cp_loop_variable_1)%v = theArgFStack(theArgFStackoffset)
             theArgFStackoffset = theArgFStackoffset-1
C write(*,'(A,EN26.16E3)')"restore(v)  ",
C+X(cp_loop_variable_1)%v
          end do
          end if
          if (our_rev_mode%plain) then
C            print*, " plain      ", our_rev_mode
            our_orig_mode=our_rev_mode
            our_rev_mode%arg_store=.FALSE.
C original function
C$OPENAD XXX Template ad_template.f
      H = 2.5D-01
      F(1)%v = (X(1)%v*(-2.0D00)+((X(8)%v*H*H)/1.2D+01)*(EXP(X(1)%v/(X(1
     +)%v*X(9)%v+1.0D00))*1.0D+01+1.0D00))
      F(2)%v = (X(1)%v+EXP(X(1)%v/(X(1)%v*X(9)%v+1.0D00))*((X(8)%v*H*H)/
     +1.2D+01))
      DO I = 2, 6, 1
        F(INT(I+(-1)))%v = (X(I)%v+F(I+(-1))%v+EXP(X(I)%v/(X(I)%v*X(9)%v
     ++1.0D00))*((X(8)%v*H*H)/1.2D+01))
        F(INT(I))%v = (EXP(X(I)%v/(X(I)%v*X(9)%v+1.0D00))*((X(8)%v*H*H)/
     +1.20000004768371582031D00)+F(I)%v-X(I)%v*2.0D00)
        F(INT(I+1))%v = (X(I)%v+EXP(X(I)%v/(X(I)%v*X(9)%v+1.0D00))*((X(8
     +)%v*H*H)/1.2D+01))
      END DO
      F(6)%v = (X(7)%v+F(6)%v+EXP(X(7)%v/(X(7)%v*X(9)%v+1.0D00))*((X(8)%
     +v*H*H)/1.2D+01))
      F(7)%v = (F(7)%v-X(7)%v*2.0D00)
      F(7)%v = (F(7)%v+((X(8)%v*H*H)/1.2D+01)*(EXP(X(7)%v/(X(7)%v*X(9)%v
     ++1.0D00))*1.0D+01+1.0D00))
      
            our_rev_mode=our_orig_mode
          end if 
          if (our_rev_mode%tape) then
C            print*, " tape       ", our_rev_mode
            our_rev_mode%arg_store=.TRUE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.TRUE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.FALSE.
C taping
C$OPENAD XXX Template ad_template.f
      H = 2.5D-01
      OpenAD_Symbol_11 = (H * H)
      OpenAD_Symbol_8 = (X(8)%v*OpenAD_Symbol_11)
      OpenAD_Symbol_4 = (OpenAD_Symbol_8 / 1.2D+01)
      OpenAD_Symbol_21 = (X(1)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_19 = (X(1)%v/OpenAD_Symbol_21)
      OpenAD_Symbol_16 = EXP(OpenAD_Symbol_19)
      OpenAD_Symbol_5 = (OpenAD_Symbol_16 * 1.0D+01 + 1.0D00)
      OpenAD_Symbol_28 = (X(1)%v*(-2.0D00)+OpenAD_Symbol_4*OpenAD_Symbol
     +_5)
      OpenAD_Symbol_2 = (-2.0D00)
      OpenAD_Symbol_0 = 1_w2f__i8
      OpenAD_Symbol_12 = OpenAD_Symbol_11
      OpenAD_Symbol_9 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_6 = OpenAD_Symbol_5
      OpenAD_Symbol_22 = (INT(1_w2f__i8) / OpenAD_Symbol_21)
      OpenAD_Symbol_26 = X(9)%v
      OpenAD_Symbol_27 = X(1)%v
      OpenAD_Symbol_24 = 1_w2f__i8
      OpenAD_Symbol_23 = (-(X(1)%v/(OpenAD_Symbol_21*OpenAD_Symbol_21)))
      OpenAD_Symbol_20 = EXP(OpenAD_Symbol_19)
      OpenAD_Symbol_17 = 1.0D+01
      OpenAD_Symbol_14 = 1_w2f__i8
      OpenAD_Symbol_7 = OpenAD_Symbol_4
      OpenAD_Symbol_1 = 1_w2f__i8
      F(1)%v = OpenAD_Symbol_28
      OpenAD_Symbol_37 = (X(1)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_35 = (X(1)%v/OpenAD_Symbol_37)
      OpenAD_Symbol_31 = EXP(OpenAD_Symbol_35)
      OpenAD_Symbol_47 = (H * H)
      OpenAD_Symbol_44 = (X(8)%v*OpenAD_Symbol_47)
      OpenAD_Symbol_32 = (OpenAD_Symbol_44 / 1.2D+01)
      OpenAD_Symbol_50 = (X(1)%v+OpenAD_Symbol_31*OpenAD_Symbol_32)
      OpenAD_Symbol_29 = 1_w2f__i8
      OpenAD_Symbol_38 = (INT(1_w2f__i8) / OpenAD_Symbol_37)
      OpenAD_Symbol_42 = X(9)%v
      OpenAD_Symbol_43 = X(1)%v
      OpenAD_Symbol_40 = 1_w2f__i8
      OpenAD_Symbol_39 = (-(X(1)%v/(OpenAD_Symbol_37*OpenAD_Symbol_37)))
      OpenAD_Symbol_36 = EXP(OpenAD_Symbol_35)
      OpenAD_Symbol_33 = OpenAD_Symbol_32
      OpenAD_Symbol_48 = OpenAD_Symbol_47
      OpenAD_Symbol_45 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_34 = OpenAD_Symbol_31
      OpenAD_Symbol_30 = 1_w2f__i8
      F(2)%v = OpenAD_Symbol_50
      OpenAD_Symbol_179 = (OpenAD_Symbol_6 * OpenAD_Symbol_1)
      OpenAD_Symbol_180 = (OpenAD_Symbol_7 * OpenAD_Symbol_1)
      OpenAD_Symbol_181 = (OpenAD_Symbol_33 * OpenAD_Symbol_30)
      OpenAD_Symbol_182 = (OpenAD_Symbol_34 * OpenAD_Symbol_30)
      OpenAD_Symbol_183 = (OpenAD_Symbol_14 * OpenAD_Symbol_180)
      OpenAD_Symbol_184 = (OpenAD_Symbol_17 * OpenAD_Symbol_183)
      OpenAD_Symbol_185 = (OpenAD_Symbol_36 * OpenAD_Symbol_181)
      OpenAD_Symbol_186 = (OpenAD_Symbol_38 * OpenAD_Symbol_185)
      OpenAD_Symbol_188 = (OpenAD_Symbol_39 * OpenAD_Symbol_185)
      OpenAD_Symbol_189 = (OpenAD_Symbol_20 * OpenAD_Symbol_184)
      OpenAD_Symbol_190 = (OpenAD_Symbol_22 * OpenAD_Symbol_189)
      OpenAD_Symbol_192 = (OpenAD_Symbol_23 * OpenAD_Symbol_189)
      OpenAD_Symbol_193 = (OpenAD_Symbol_45 * OpenAD_Symbol_182)
      OpenAD_Symbol_194 = (OpenAD_Symbol_40 * OpenAD_Symbol_188)
      OpenAD_Symbol_195 = (OpenAD_Symbol_42 * OpenAD_Symbol_194)
      OpenAD_Symbol_197 = (OpenAD_Symbol_43 * OpenAD_Symbol_194)
      OpenAD_Symbol_199 = (OpenAD_Symbol_24 * OpenAD_Symbol_192)
      OpenAD_Symbol_200 = (OpenAD_Symbol_26 * OpenAD_Symbol_199)
      OpenAD_Symbol_202 = (OpenAD_Symbol_27 * OpenAD_Symbol_199)
      OpenAD_Symbol_204 = (OpenAD_Symbol_9 * OpenAD_Symbol_179)
      OpenAD_Symbol_205 = (OpenAD_Symbol_48 * OpenAD_Symbol_193)
      OpenAD_Symbol_207 = (OpenAD_Symbol_12 * OpenAD_Symbol_204)
      OpenAD_Symbol_209 = (OpenAD_Symbol_2 * OpenAD_Symbol_0)
      OpenAD_Symbol_211 = OpenAD_Symbol_29
          double_tape(double_tape_pointer) = OpenAD_Symbol_186
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_190
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_195
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_197
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_200
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_202
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_205
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_207
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_209
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_211
          double_tape_pointer = double_tape_pointer+1
      OpenAD_Symbol_308 = 0_w2f__i8
      DO I = 2, 6, 1
        OpenAD_Symbol_61 = (X(I)%v*X(9)%v+1.0D00)
        OpenAD_Symbol_59 = (X(I)%v/OpenAD_Symbol_61)
        OpenAD_Symbol_55 = EXP(OpenAD_Symbol_59)
        OpenAD_Symbol_71 = (H * H)
        OpenAD_Symbol_68 = (X(8)%v*OpenAD_Symbol_71)
        OpenAD_Symbol_56 = (OpenAD_Symbol_68 / 1.2D+01)
        OpenAD_Symbol_74 = (X(I)%v+F(I+(-1))%v+OpenAD_Symbol_55*OpenAD_S
     +ymbol_56)
        OpenAD_Symbol_53 = 1_w2f__i8
        OpenAD_Symbol_54 = 1_w2f__i8
        OpenAD_Symbol_51 = 1_w2f__i8
        OpenAD_Symbol_62 = (INT(1_w2f__i8) / OpenAD_Symbol_61)
        OpenAD_Symbol_66 = X(9)%v
        OpenAD_Symbol_67 = X(I)%v
        OpenAD_Symbol_64 = 1_w2f__i8
        OpenAD_Symbol_63 = (-(X(I)%v/(OpenAD_Symbol_61*OpenAD_Symbol_61)
     +))
        OpenAD_Symbol_60 = EXP(OpenAD_Symbol_59)
        OpenAD_Symbol_57 = OpenAD_Symbol_56
        OpenAD_Symbol_72 = OpenAD_Symbol_71
        OpenAD_Symbol_69 = (INT(1_w2f__i8) / 1.2D+01)
        OpenAD_Symbol_58 = OpenAD_Symbol_55
        OpenAD_Symbol_52 = 1_w2f__i8
        F(INT(I+(-1)))%v = OpenAD_Symbol_74
        OpenAD_Symbol_213 = (OpenAD_Symbol_57 * OpenAD_Symbol_52)
        OpenAD_Symbol_214 = (OpenAD_Symbol_58 * OpenAD_Symbol_52)
        OpenAD_Symbol_215 = (OpenAD_Symbol_53 * OpenAD_Symbol_51)
        OpenAD_Symbol_217 = (OpenAD_Symbol_54 * OpenAD_Symbol_51)
        OpenAD_Symbol_219 = (OpenAD_Symbol_60 * OpenAD_Symbol_213)
        OpenAD_Symbol_220 = (OpenAD_Symbol_62 * OpenAD_Symbol_219)
        OpenAD_Symbol_222 = (OpenAD_Symbol_63 * OpenAD_Symbol_219)
        OpenAD_Symbol_223 = (OpenAD_Symbol_69 * OpenAD_Symbol_214)
        OpenAD_Symbol_224 = (OpenAD_Symbol_64 * OpenAD_Symbol_222)
        OpenAD_Symbol_225 = (OpenAD_Symbol_66 * OpenAD_Symbol_224)
        OpenAD_Symbol_227 = (OpenAD_Symbol_67 * OpenAD_Symbol_224)
        OpenAD_Symbol_229 = (OpenAD_Symbol_72 * OpenAD_Symbol_223)
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_319 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_319
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_215
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_320 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_320
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_217
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_321 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_321
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_220
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_322 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_322
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_225
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_323 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_323
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_227
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_324 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_324
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_229
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_325 = (I + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_325
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_83 = (X(I)%v*X(9)%v+1.0D00)
        OpenAD_Symbol_81 = (X(I)%v/OpenAD_Symbol_83)
        OpenAD_Symbol_77 = EXP(OpenAD_Symbol_81)
        OpenAD_Symbol_93 = (H * H)
        OpenAD_Symbol_90 = (X(8)%v*OpenAD_Symbol_93)
        OpenAD_Symbol_78 = (OpenAD_Symbol_90 /  1.20000004768371582031D0
     +0)
        OpenAD_Symbol_100 = (OpenAD_Symbol_77*OpenAD_Symbol_78+F(I)%v-X(
     +I)%v*2.0D00)
        OpenAD_Symbol_84 = (INT(1_w2f__i8) / OpenAD_Symbol_83)
        OpenAD_Symbol_88 = X(9)%v
        OpenAD_Symbol_89 = X(I)%v
        OpenAD_Symbol_86 = 1_w2f__i8
        OpenAD_Symbol_85 = (-(X(I)%v/(OpenAD_Symbol_83*OpenAD_Symbol_83)
     +))
        OpenAD_Symbol_82 = EXP(OpenAD_Symbol_81)
        OpenAD_Symbol_79 = OpenAD_Symbol_78
        OpenAD_Symbol_94 = OpenAD_Symbol_93
        OpenAD_Symbol_91 = (INT(1_w2f__i8) / 1.20000004768371582031D00)
        OpenAD_Symbol_80 = OpenAD_Symbol_77
        OpenAD_Symbol_75 = 1_w2f__i8
        OpenAD_Symbol_96 = 1_w2f__i8
        OpenAD_Symbol_98 = 2.0D00
        OpenAD_Symbol_97 = (-1_w2f__i8)
        OpenAD_Symbol_76 = 1_w2f__i8
        F(INT(I))%v = OpenAD_Symbol_100
        OpenAD_Symbol_109 = (X(I)%v*X(9)%v+1.0D00)
        OpenAD_Symbol_107 = (X(I)%v/OpenAD_Symbol_109)
        OpenAD_Symbol_103 = EXP(OpenAD_Symbol_107)
        OpenAD_Symbol_119 = (H * H)
        OpenAD_Symbol_116 = (X(8)%v*OpenAD_Symbol_119)
        OpenAD_Symbol_104 = (OpenAD_Symbol_116 / 1.2D+01)
        OpenAD_Symbol_122 = (X(I)%v+OpenAD_Symbol_103*OpenAD_Symbol_104)
        OpenAD_Symbol_101 = 1_w2f__i8
        OpenAD_Symbol_110 = (INT(1_w2f__i8) / OpenAD_Symbol_109)
        OpenAD_Symbol_114 = X(9)%v
        OpenAD_Symbol_115 = X(I)%v
        OpenAD_Symbol_112 = 1_w2f__i8
        OpenAD_Symbol_111 = (-(X(I)%v/(OpenAD_Symbol_109*OpenAD_Symbol_1
     +09)))
        OpenAD_Symbol_108 = EXP(OpenAD_Symbol_107)
        OpenAD_Symbol_105 = OpenAD_Symbol_104
        OpenAD_Symbol_120 = OpenAD_Symbol_119
        OpenAD_Symbol_117 = (INT(1_w2f__i8) / 1.2D+01)
        OpenAD_Symbol_106 = OpenAD_Symbol_103
        OpenAD_Symbol_102 = 1_w2f__i8
        F(INT(I+1))%v = OpenAD_Symbol_122
        OpenAD_Symbol_231 = (OpenAD_Symbol_105 * OpenAD_Symbol_102)
        OpenAD_Symbol_232 = (OpenAD_Symbol_106 * OpenAD_Symbol_102)
        OpenAD_Symbol_233 = (OpenAD_Symbol_79 * OpenAD_Symbol_75)
        OpenAD_Symbol_234 = (OpenAD_Symbol_80 * OpenAD_Symbol_75)
        OpenAD_Symbol_235 = (OpenAD_Symbol_96 * OpenAD_Symbol_76)
        OpenAD_Symbol_237 = (OpenAD_Symbol_97 * OpenAD_Symbol_76)
        OpenAD_Symbol_238 = (OpenAD_Symbol_108 * OpenAD_Symbol_231)
        OpenAD_Symbol_239 = (OpenAD_Symbol_110 * OpenAD_Symbol_238)
        OpenAD_Symbol_241 = (OpenAD_Symbol_111 * OpenAD_Symbol_238)
        OpenAD_Symbol_242 = (OpenAD_Symbol_82 * OpenAD_Symbol_233)
        OpenAD_Symbol_243 = (OpenAD_Symbol_84 * OpenAD_Symbol_242)
        OpenAD_Symbol_245 = (OpenAD_Symbol_85 * OpenAD_Symbol_242)
        OpenAD_Symbol_246 = (OpenAD_Symbol_117 * OpenAD_Symbol_232)
        OpenAD_Symbol_247 = (OpenAD_Symbol_112 * OpenAD_Symbol_241)
        OpenAD_Symbol_248 = (OpenAD_Symbol_114 * OpenAD_Symbol_247)
        OpenAD_Symbol_250 = (OpenAD_Symbol_115 * OpenAD_Symbol_247)
        OpenAD_Symbol_252 = (OpenAD_Symbol_91 * OpenAD_Symbol_234)
        OpenAD_Symbol_253 = (OpenAD_Symbol_86 * OpenAD_Symbol_245)
        OpenAD_Symbol_254 = (OpenAD_Symbol_88 * OpenAD_Symbol_253)
        OpenAD_Symbol_256 = (OpenAD_Symbol_89 * OpenAD_Symbol_253)
        OpenAD_Symbol_258 = (OpenAD_Symbol_120 * OpenAD_Symbol_246)
        OpenAD_Symbol_260 = (OpenAD_Symbol_98 * OpenAD_Symbol_237)
        OpenAD_Symbol_262 = (OpenAD_Symbol_94 * OpenAD_Symbol_252)
        OpenAD_Symbol_264 = OpenAD_Symbol_101
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_235
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_239
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_326 = (I + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_326
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_243
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_248
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_327 = (I + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_327
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_250
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_328 = (I + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_328
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_254
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_256
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_258
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_329 = (I + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_329
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_260
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_262
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_264
          double_tape_pointer = double_tape_pointer+1
        OpenAD_Symbol_330 = (I + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_330
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_308 = (INT(OpenAD_Symbol_308) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_308
          integer_tape_pointer = integer_tape_pointer+1
      OpenAD_Symbol_133 = (X(7)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_131 = (X(7)%v/OpenAD_Symbol_133)
      OpenAD_Symbol_127 = EXP(OpenAD_Symbol_131)
      OpenAD_Symbol_143 = (H * H)
      OpenAD_Symbol_140 = (X(8)%v*OpenAD_Symbol_143)
      OpenAD_Symbol_128 = (OpenAD_Symbol_140 / 1.2D+01)
      OpenAD_Symbol_146 = (X(7)%v+F(6)%v+OpenAD_Symbol_127*OpenAD_Symbol
     +_128)
      OpenAD_Symbol_125 = 1_w2f__i8
      OpenAD_Symbol_126 = 1_w2f__i8
      OpenAD_Symbol_123 = 1_w2f__i8
      OpenAD_Symbol_134 = (INT(1_w2f__i8) / OpenAD_Symbol_133)
      OpenAD_Symbol_138 = X(9)%v
      OpenAD_Symbol_139 = X(7)%v
      OpenAD_Symbol_136 = 1_w2f__i8
      OpenAD_Symbol_135 = (-(X(7)%v/(OpenAD_Symbol_133*OpenAD_Symbol_133
     +)))
      OpenAD_Symbol_132 = EXP(OpenAD_Symbol_131)
      OpenAD_Symbol_129 = OpenAD_Symbol_128
      OpenAD_Symbol_144 = OpenAD_Symbol_143
      OpenAD_Symbol_141 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_130 = OpenAD_Symbol_127
      OpenAD_Symbol_124 = 1_w2f__i8
      F(6)%v = OpenAD_Symbol_146
      OpenAD_Symbol_266 = (OpenAD_Symbol_129 * OpenAD_Symbol_124)
      OpenAD_Symbol_267 = (OpenAD_Symbol_130 * OpenAD_Symbol_124)
      OpenAD_Symbol_268 = (OpenAD_Symbol_125 * OpenAD_Symbol_123)
      OpenAD_Symbol_270 = (OpenAD_Symbol_126 * OpenAD_Symbol_123)
      OpenAD_Symbol_272 = (OpenAD_Symbol_132 * OpenAD_Symbol_266)
      OpenAD_Symbol_273 = (OpenAD_Symbol_134 * OpenAD_Symbol_272)
      OpenAD_Symbol_275 = (OpenAD_Symbol_135 * OpenAD_Symbol_272)
      OpenAD_Symbol_276 = (OpenAD_Symbol_141 * OpenAD_Symbol_267)
      OpenAD_Symbol_277 = (OpenAD_Symbol_136 * OpenAD_Symbol_275)
      OpenAD_Symbol_278 = (OpenAD_Symbol_138 * OpenAD_Symbol_277)
      OpenAD_Symbol_280 = (OpenAD_Symbol_139 * OpenAD_Symbol_277)
      OpenAD_Symbol_282 = (OpenAD_Symbol_144 * OpenAD_Symbol_276)
          double_tape(double_tape_pointer) = OpenAD_Symbol_268
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_270
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_273
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_278
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_280
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_282
          double_tape_pointer = double_tape_pointer+1
      OpenAD_Symbol_151 = (F(7)%v-X(7)%v*2.0D00)
      OpenAD_Symbol_147 = 1_w2f__i8
      OpenAD_Symbol_149 = 2.0D00
      OpenAD_Symbol_148 = (-1_w2f__i8)
      F(7)%v = OpenAD_Symbol_151
      OpenAD_Symbol_284 = (OpenAD_Symbol_149 * OpenAD_Symbol_148)
      OpenAD_Symbol_286 = OpenAD_Symbol_147
          double_tape(double_tape_pointer) = OpenAD_Symbol_284
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_286
          double_tape_pointer = double_tape_pointer+1
      OpenAD_Symbol_161 = (H * H)
      OpenAD_Symbol_158 = (X(8)%v*OpenAD_Symbol_161)
      OpenAD_Symbol_154 = (OpenAD_Symbol_158 / 1.2D+01)
      OpenAD_Symbol_171 = (X(7)%v*X(9)%v+1.0D00)
      OpenAD_Symbol_169 = (X(7)%v/OpenAD_Symbol_171)
      OpenAD_Symbol_166 = EXP(OpenAD_Symbol_169)
      OpenAD_Symbol_155 = (OpenAD_Symbol_166 * 1.0D+01 + 1.0D00)
      OpenAD_Symbol_178 = (F(7)%v+OpenAD_Symbol_154*OpenAD_Symbol_155)
      OpenAD_Symbol_152 = 1_w2f__i8
      OpenAD_Symbol_162 = OpenAD_Symbol_161
      OpenAD_Symbol_159 = (INT(1_w2f__i8) / 1.2D+01)
      OpenAD_Symbol_156 = OpenAD_Symbol_155
      OpenAD_Symbol_172 = (INT(1_w2f__i8) / OpenAD_Symbol_171)
      OpenAD_Symbol_176 = X(9)%v
      OpenAD_Symbol_177 = X(7)%v
      OpenAD_Symbol_174 = 1_w2f__i8
      OpenAD_Symbol_173 = (-(X(7)%v/(OpenAD_Symbol_171*OpenAD_Symbol_171
     +)))
      OpenAD_Symbol_170 = EXP(OpenAD_Symbol_169)
      OpenAD_Symbol_167 = 1.0D+01
      OpenAD_Symbol_164 = 1_w2f__i8
      OpenAD_Symbol_157 = OpenAD_Symbol_154
      OpenAD_Symbol_153 = 1_w2f__i8
      F(7)%v = OpenAD_Symbol_178
      OpenAD_Symbol_288 = (OpenAD_Symbol_156 * OpenAD_Symbol_153)
      OpenAD_Symbol_289 = (OpenAD_Symbol_157 * OpenAD_Symbol_153)
      OpenAD_Symbol_290 = (OpenAD_Symbol_164 * OpenAD_Symbol_289)
      OpenAD_Symbol_291 = (OpenAD_Symbol_167 * OpenAD_Symbol_290)
      OpenAD_Symbol_292 = (OpenAD_Symbol_170 * OpenAD_Symbol_291)
      OpenAD_Symbol_293 = (OpenAD_Symbol_172 * OpenAD_Symbol_292)
      OpenAD_Symbol_295 = (OpenAD_Symbol_173 * OpenAD_Symbol_292)
      OpenAD_Symbol_296 = (OpenAD_Symbol_174 * OpenAD_Symbol_295)
      OpenAD_Symbol_297 = (OpenAD_Symbol_176 * OpenAD_Symbol_296)
      OpenAD_Symbol_299 = (OpenAD_Symbol_177 * OpenAD_Symbol_296)
      OpenAD_Symbol_301 = (OpenAD_Symbol_159 * OpenAD_Symbol_288)
      OpenAD_Symbol_302 = (OpenAD_Symbol_162 * OpenAD_Symbol_301)
      OpenAD_Symbol_304 = OpenAD_Symbol_152
          double_tape(double_tape_pointer) = OpenAD_Symbol_293
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_297
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_299
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_302
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_304
          double_tape_pointer = double_tape_pointer+1
      
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.TRUE.
          end if 
          if (our_rev_mode%res_restore) then
C restore results
          do cp_loop_variable_1 = lbound(F,1),ubound(F,1),1
             F(cp_loop_variable_1)%v = theResFStack(theResFStackoffset)
             theResFStackoffset = theResFStackoffset+1
          end do
          end if 
          if (our_rev_mode%adjoint) then
C            print*, " adjoint    ", our_rev_mode
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
C adjoint
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_376 = double_tape(double_tape_pointer)
          OpenAD_Symbol_305%d = OpenAD_Symbol_305%d+F(7)%d*OpenAD_Symbol
     +_376
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_377 = double_tape(double_tape_pointer)
          OpenAD_Symbol_303%d = OpenAD_Symbol_303%d+F(7)%d*OpenAD_Symbol
     +_377
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_378 = double_tape(double_tape_pointer)
          OpenAD_Symbol_300%d = OpenAD_Symbol_300%d+F(7)%d*OpenAD_Symbol
     +_378
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_379 = double_tape(double_tape_pointer)
          OpenAD_Symbol_298%d = OpenAD_Symbol_298%d+F(7)%d*OpenAD_Symbol
     +_379
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_380 = double_tape(double_tape_pointer)
          OpenAD_Symbol_294%d = OpenAD_Symbol_294%d+F(7)%d*OpenAD_Symbol
     +_380
          F(7)%d = 0.0d0
          X(7)%d = X(7)%d+OpenAD_Symbol_294%d
          OpenAD_Symbol_294%d = 0.0d0
          X(7)%d = X(7)%d+OpenAD_Symbol_298%d
          OpenAD_Symbol_298%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_300%d
          OpenAD_Symbol_300%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_303%d
          OpenAD_Symbol_303%d = 0.0d0
          F(7)%d = F(7)%d+OpenAD_Symbol_305%d
          OpenAD_Symbol_305%d = 0.0d0
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_381 = double_tape(double_tape_pointer)
          OpenAD_Symbol_287%d = OpenAD_Symbol_287%d+F(7)%d*OpenAD_Symbol
     +_381
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_382 = double_tape(double_tape_pointer)
          OpenAD_Symbol_285%d = OpenAD_Symbol_285%d+F(7)%d*OpenAD_Symbol
     +_382
          F(7)%d = 0.0d0
          X(7)%d = X(7)%d+OpenAD_Symbol_285%d
          OpenAD_Symbol_285%d = 0.0d0
          F(7)%d = F(7)%d+OpenAD_Symbol_287%d
          OpenAD_Symbol_287%d = 0.0d0
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_383 = double_tape(double_tape_pointer)
          OpenAD_Symbol_283%d = OpenAD_Symbol_283%d+F(6)%d*OpenAD_Symbol
     +_383
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_384 = double_tape(double_tape_pointer)
          OpenAD_Symbol_281%d = OpenAD_Symbol_281%d+F(6)%d*OpenAD_Symbol
     +_384
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_385 = double_tape(double_tape_pointer)
          OpenAD_Symbol_279%d = OpenAD_Symbol_279%d+F(6)%d*OpenAD_Symbol
     +_385
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_386 = double_tape(double_tape_pointer)
          OpenAD_Symbol_274%d = OpenAD_Symbol_274%d+F(6)%d*OpenAD_Symbol
     +_386
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_387 = double_tape(double_tape_pointer)
          OpenAD_Symbol_271%d = OpenAD_Symbol_271%d+F(6)%d*OpenAD_Symbol
     +_387
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_388 = double_tape(double_tape_pointer)
          OpenAD_Symbol_269%d = OpenAD_Symbol_269%d+F(6)%d*OpenAD_Symbol
     +_388
          F(6)%d = 0.0d0
          X(7)%d = X(7)%d+OpenAD_Symbol_269%d
          OpenAD_Symbol_269%d = 0.0d0
          F(6)%d = F(6)%d+OpenAD_Symbol_271%d
          OpenAD_Symbol_271%d = 0.0d0
          X(7)%d = X(7)%d+OpenAD_Symbol_274%d
          OpenAD_Symbol_274%d = 0.0d0
          X(7)%d = X(7)%d+OpenAD_Symbol_279%d
          OpenAD_Symbol_279%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_281%d
          OpenAD_Symbol_281%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_283%d
          OpenAD_Symbol_283%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_306 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_307 = 1
      DO WHILE(INT(OpenAD_Symbol_307) .LE. INT(OpenAD_Symbol_306))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_331 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_332 = double_tape(double_tape_pointer)
          OpenAD_Symbol_265%d = OpenAD_Symbol_265%d+F(INT(OpenAD_Symbol_
     +331))%d*OpenAD_Symbol_332
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_333 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_334 = double_tape(double_tape_pointer)
          OpenAD_Symbol_263%d = OpenAD_Symbol_263%d+F(INT(OpenAD_Symbol_
     +333))%d*OpenAD_Symbol_334
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_335 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_336 = double_tape(double_tape_pointer)
          OpenAD_Symbol_261%d = OpenAD_Symbol_261%d+F(INT(OpenAD_Symbol_
     +335))%d*OpenAD_Symbol_336
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_337 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_338 = double_tape(double_tape_pointer)
          OpenAD_Symbol_259%d = OpenAD_Symbol_259%d+F(INT(OpenAD_Symbol_
     +337))%d*OpenAD_Symbol_338
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_339 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_340 = double_tape(double_tape_pointer)
          OpenAD_Symbol_257%d = OpenAD_Symbol_257%d+F(INT(OpenAD_Symbol_
     +339))%d*OpenAD_Symbol_340
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_341 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_342 = double_tape(double_tape_pointer)
          OpenAD_Symbol_255%d = OpenAD_Symbol_255%d+F(INT(OpenAD_Symbol_
     +341))%d*OpenAD_Symbol_342
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_343 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_344 = double_tape(double_tape_pointer)
          OpenAD_Symbol_251%d = OpenAD_Symbol_251%d+F(INT(OpenAD_Symbol_
     +343))%d*OpenAD_Symbol_344
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_345 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_346 = double_tape(double_tape_pointer)
          OpenAD_Symbol_249%d = OpenAD_Symbol_249%d+F(INT(OpenAD_Symbol_
     +345))%d*OpenAD_Symbol_346
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_347 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_348 = double_tape(double_tape_pointer)
          OpenAD_Symbol_244%d = OpenAD_Symbol_244%d+F(INT(OpenAD_Symbol_
     +347))%d*OpenAD_Symbol_348
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_349 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_350 = double_tape(double_tape_pointer)
          OpenAD_Symbol_240%d = OpenAD_Symbol_240%d+F(INT(OpenAD_Symbol_
     +349))%d*OpenAD_Symbol_350
          F(INT(OpenAD_Symbol_349))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_351 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_352 = double_tape(double_tape_pointer)
          OpenAD_Symbol_236%d = OpenAD_Symbol_236%d+F(INT(OpenAD_Symbol_
     +351))%d*OpenAD_Symbol_352
          F(INT(OpenAD_Symbol_351))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_353 = integer_tape(integer_tape_pointer)
          F(INT(OpenAD_Symbol_353))%d = F(INT(OpenAD_Symbol_353))%d+Open
     +AD_Symbol_236%d
          OpenAD_Symbol_236%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_354 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_354))%d = X(INT(OpenAD_Symbol_354))%d+Open
     +AD_Symbol_240%d
          OpenAD_Symbol_240%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_355 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_355))%d = X(INT(OpenAD_Symbol_355))%d+Open
     +AD_Symbol_244%d
          OpenAD_Symbol_244%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_356 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_356))%d = X(INT(OpenAD_Symbol_356))%d+Open
     +AD_Symbol_249%d
          OpenAD_Symbol_249%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_251%d
          OpenAD_Symbol_251%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_357 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_357))%d = X(INT(OpenAD_Symbol_357))%d+Open
     +AD_Symbol_255%d
          OpenAD_Symbol_255%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_257%d
          OpenAD_Symbol_257%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_259%d
          OpenAD_Symbol_259%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_358 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_358))%d = X(INT(OpenAD_Symbol_358))%d+Open
     +AD_Symbol_261%d
          OpenAD_Symbol_261%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_263%d
          OpenAD_Symbol_263%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_359 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_359))%d = X(INT(OpenAD_Symbol_359))%d+Open
     +AD_Symbol_265%d
          OpenAD_Symbol_265%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_360 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_361 = double_tape(double_tape_pointer)
          OpenAD_Symbol_230%d = OpenAD_Symbol_230%d+F(INT(OpenAD_Symbol_
     +360))%d*OpenAD_Symbol_361
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_362 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_363 = double_tape(double_tape_pointer)
          OpenAD_Symbol_228%d = OpenAD_Symbol_228%d+F(INT(OpenAD_Symbol_
     +362))%d*OpenAD_Symbol_363
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_364 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_365 = double_tape(double_tape_pointer)
          OpenAD_Symbol_226%d = OpenAD_Symbol_226%d+F(INT(OpenAD_Symbol_
     +364))%d*OpenAD_Symbol_365
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_366 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_367 = double_tape(double_tape_pointer)
          OpenAD_Symbol_221%d = OpenAD_Symbol_221%d+F(INT(OpenAD_Symbol_
     +366))%d*OpenAD_Symbol_367
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_368 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_369 = double_tape(double_tape_pointer)
          OpenAD_Symbol_218%d = OpenAD_Symbol_218%d+F(INT(OpenAD_Symbol_
     +368))%d*OpenAD_Symbol_369
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_370 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_371 = double_tape(double_tape_pointer)
          OpenAD_Symbol_216%d = OpenAD_Symbol_216%d+F(INT(OpenAD_Symbol_
     +370))%d*OpenAD_Symbol_371
          F(INT(OpenAD_Symbol_370))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_372 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_372))%d = X(INT(OpenAD_Symbol_372))%d+Open
     +AD_Symbol_216%d
          OpenAD_Symbol_216%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_373 = integer_tape(integer_tape_pointer)
          F(INT(OpenAD_Symbol_373))%d = F(INT(OpenAD_Symbol_373))%d+Open
     +AD_Symbol_218%d
          OpenAD_Symbol_218%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_374 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_374))%d = X(INT(OpenAD_Symbol_374))%d+Open
     +AD_Symbol_221%d
          OpenAD_Symbol_221%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_375 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_375))%d = X(INT(OpenAD_Symbol_375))%d+Open
     +AD_Symbol_226%d
          OpenAD_Symbol_226%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_228%d
          OpenAD_Symbol_228%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_230%d
          OpenAD_Symbol_230%d = 0.0d0
        OpenAD_Symbol_307 = INT(OpenAD_Symbol_307) + 1
      END DO
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_309 = double_tape(double_tape_pointer)
          OpenAD_Symbol_212%d = OpenAD_Symbol_212%d+F(2)%d*OpenAD_Symbol
     +_309
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_310 = double_tape(double_tape_pointer)
          OpenAD_Symbol_210%d = OpenAD_Symbol_210%d+F(1)%d*OpenAD_Symbol
     +_310
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_311 = double_tape(double_tape_pointer)
          OpenAD_Symbol_208%d = OpenAD_Symbol_208%d+F(1)%d*OpenAD_Symbol
     +_311
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_312 = double_tape(double_tape_pointer)
          OpenAD_Symbol_206%d = OpenAD_Symbol_206%d+F(2)%d*OpenAD_Symbol
     +_312
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_313 = double_tape(double_tape_pointer)
          OpenAD_Symbol_203%d = OpenAD_Symbol_203%d+F(1)%d*OpenAD_Symbol
     +_313
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_314 = double_tape(double_tape_pointer)
          OpenAD_Symbol_201%d = OpenAD_Symbol_201%d+F(1)%d*OpenAD_Symbol
     +_314
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_315 = double_tape(double_tape_pointer)
          OpenAD_Symbol_198%d = OpenAD_Symbol_198%d+F(2)%d*OpenAD_Symbol
     +_315
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_316 = double_tape(double_tape_pointer)
          OpenAD_Symbol_196%d = OpenAD_Symbol_196%d+F(2)%d*OpenAD_Symbol
     +_316
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_317 = double_tape(double_tape_pointer)
          OpenAD_Symbol_191%d = OpenAD_Symbol_191%d+F(1)%d*OpenAD_Symbol
     +_317
          F(1)%d = 0.0d0
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_318 = double_tape(double_tape_pointer)
          OpenAD_Symbol_187%d = OpenAD_Symbol_187%d+F(2)%d*OpenAD_Symbol
     +_318
          F(2)%d = 0.0d0
          X(1)%d = X(1)%d+OpenAD_Symbol_187%d
          OpenAD_Symbol_187%d = 0.0d0
          X(1)%d = X(1)%d+OpenAD_Symbol_191%d
          OpenAD_Symbol_191%d = 0.0d0
          X(1)%d = X(1)%d+OpenAD_Symbol_196%d
          OpenAD_Symbol_196%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_198%d
          OpenAD_Symbol_198%d = 0.0d0
          X(1)%d = X(1)%d+OpenAD_Symbol_201%d
          OpenAD_Symbol_201%d = 0.0d0
          X(9)%d = X(9)%d+OpenAD_Symbol_203%d
          OpenAD_Symbol_203%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_206%d
          OpenAD_Symbol_206%d = 0.0d0
          X(8)%d = X(8)%d+OpenAD_Symbol_208%d
          OpenAD_Symbol_208%d = 0.0d0
          X(1)%d = X(1)%d+OpenAD_Symbol_210%d
          OpenAD_Symbol_210%d = 0.0d0
          X(1)%d = X(1)%d+OpenAD_Symbol_212%d
          OpenAD_Symbol_212%d = 0.0d0
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
          end if 
          if (our_rev_mode%res_store) then
C store results
C            print*, " res_store  ", our_rev_mode
          call cp_store_real_vector(F,size(F),theResFStack,theResFStacko
     +ffset,theResFStackSize)
          end if 
C          write(*,'(A,I6,A,I6,A,I6,A,I6,A,I5,A,I5)')
C     +"a:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" RF:",theResFStackoffset, 
C     +" RI:",theResIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
        end subroutine head
