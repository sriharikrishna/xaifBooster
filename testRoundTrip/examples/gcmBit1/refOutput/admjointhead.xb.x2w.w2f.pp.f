
C ========== begin copyright notice ==============
C This file is part of 
C ---------------
C xaifBooster
C ---------------
C Distributed under the BSD license as follows:
C Copyright (c) 2005, The University of Chicago
C All rights reserved.
C
C Redistribution and use in source and binary forms, 
C with or without modification, are permitted provided that the following conditions are met:
C
C    - Redistributions of source code must retain the above copyright notice, 
C      this list of conditions and the following disclaimer.
C    - Redistributions in binary form must reproduce the above copyright notice, 
C      this list of conditions and the following disclaimer in the documentation 
C      and/or other materials provided with the distribution.
C    - Neither the name of The University of Chicago nor the names of its contributors 
C      may be used to endorse or promote products derived from this software without 
C      specific prior written permission.
C
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
C EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
C OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
C SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
C INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
C INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
C LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
C 
C General Information:
C xaifBooster is intended for the transformation of 
C numerical programs represented as xml files according 
C to the XAIF schema. It is part of the OpenAD framework. 
C The main application is automatic 
C differentiation, i.e. the generation of code for 
C the computation of derivatives. 
C The following people are the principal authors of the 
C current version: 
C 	Uwe Naumann
C	Jean Utke
C Additional contributors are: 
C	Andrew Lyons
C	Peter Fine
C
C For more details about xaifBooster and its use in OpenAD please visit:
C   http://www.mcs.anl.gov/openad
C
C This work is partially supported by:
C 	NSF-ITR grant OCE-0205590
C ========== end copyright notice ==============
       subroutine find_bulkmod(LOCPRES,TFLD,SFLD,BULKMOD)
          use OpenAD_dct
          use OpenAD_tape
          use OpenAD_rev
          use OpenAD_checkpoints

          ! original arguments get inserted before version
          ! and declared here together with all local variables
          ! generated by xaifBooster

      use w2f__types
      use active_module
      IMPLICIT NONE
C
C     **** Global Variables & Derived Type Definitions ****
C
      REAL(w2f__8) OpenAD_Symbol_0
      REAL(w2f__8) OpenAD_Symbol_1
      REAL(w2f__8) OpenAD_Symbol_10
      REAL(w2f__8) OpenAD_Symbol_100
      REAL(w2f__8) OpenAD_Symbol_101
      REAL(w2f__8) OpenAD_Symbol_102
      REAL(w2f__8) OpenAD_Symbol_103
      REAL(w2f__8) OpenAD_Symbol_104
      REAL(w2f__8) OpenAD_Symbol_106
      REAL(w2f__8) OpenAD_Symbol_108
      REAL(w2f__8) OpenAD_Symbol_110
      REAL(w2f__8) OpenAD_Symbol_111
      REAL(w2f__8) OpenAD_Symbol_112
      REAL(w2f__8) OpenAD_Symbol_113
      REAL(w2f__8) OpenAD_Symbol_114
      REAL(w2f__8) OpenAD_Symbol_115
      REAL(w2f__8) OpenAD_Symbol_116
      REAL(w2f__8) OpenAD_Symbol_117
      REAL(w2f__8) OpenAD_Symbol_118
      REAL(w2f__8) OpenAD_Symbol_12
      REAL(w2f__8) OpenAD_Symbol_120
      REAL(w2f__8) OpenAD_Symbol_122
      REAL(w2f__8) OpenAD_Symbol_124
      REAL(w2f__8) OpenAD_Symbol_125
      REAL(w2f__8) OpenAD_Symbol_126
      REAL(w2f__8) OpenAD_Symbol_127
      REAL(w2f__8) OpenAD_Symbol_128
      REAL(w2f__8) OpenAD_Symbol_13
      REAL(w2f__8) OpenAD_Symbol_135
      REAL(w2f__8) OpenAD_Symbol_136
      REAL(w2f__8) OpenAD_Symbol_137
      REAL(w2f__8) OpenAD_Symbol_138
      REAL(w2f__8) OpenAD_Symbol_139
      REAL(w2f__8) OpenAD_Symbol_14
      REAL(w2f__8) OpenAD_Symbol_140
      REAL(w2f__8) OpenAD_Symbol_141
      REAL(w2f__8) OpenAD_Symbol_142
      REAL(w2f__8) OpenAD_Symbol_143
      REAL(w2f__8) OpenAD_Symbol_144
      REAL(w2f__8) OpenAD_Symbol_145
      REAL(w2f__8) OpenAD_Symbol_146
      REAL(w2f__8) OpenAD_Symbol_147
      REAL(w2f__8) OpenAD_Symbol_148
      REAL(w2f__8) OpenAD_Symbol_149
      REAL(w2f__8) OpenAD_Symbol_15
      REAL(w2f__8) OpenAD_Symbol_150
      REAL(w2f__8) OpenAD_Symbol_151
      REAL(w2f__8) OpenAD_Symbol_152
      REAL(w2f__8) OpenAD_Symbol_153
      REAL(w2f__8) OpenAD_Symbol_154
      REAL(w2f__8) OpenAD_Symbol_155
      REAL(w2f__8) OpenAD_Symbol_156
      REAL(w2f__8) OpenAD_Symbol_157
      REAL(w2f__8) OpenAD_Symbol_158
      REAL(w2f__8) OpenAD_Symbol_159
      REAL(w2f__8) OpenAD_Symbol_16
      REAL(w2f__8) OpenAD_Symbol_160
      REAL(w2f__8) OpenAD_Symbol_161
      REAL(w2f__8) OpenAD_Symbol_162
      REAL(w2f__8) OpenAD_Symbol_163
      REAL(w2f__8) OpenAD_Symbol_164
      REAL(w2f__8) OpenAD_Symbol_165
      REAL(w2f__8) OpenAD_Symbol_166
      REAL(w2f__8) OpenAD_Symbol_167
      REAL(w2f__8) OpenAD_Symbol_168
      REAL(w2f__8) OpenAD_Symbol_169
      REAL(w2f__8) OpenAD_Symbol_17
      REAL(w2f__8) OpenAD_Symbol_170
      REAL(w2f__8) OpenAD_Symbol_171
      REAL(w2f__8) OpenAD_Symbol_172
      REAL(w2f__8) OpenAD_Symbol_173
      REAL(w2f__8) OpenAD_Symbol_174
      REAL(w2f__8) OpenAD_Symbol_175
      REAL(w2f__8) OpenAD_Symbol_176
      REAL(w2f__8) OpenAD_Symbol_177
      REAL(w2f__8) OpenAD_Symbol_178
      REAL(w2f__8) OpenAD_Symbol_179
      REAL(w2f__8) OpenAD_Symbol_18
      REAL(w2f__8) OpenAD_Symbol_180
      REAL(w2f__8) OpenAD_Symbol_181
      REAL(w2f__8) OpenAD_Symbol_182
      REAL(w2f__8) OpenAD_Symbol_183
      REAL(w2f__8) OpenAD_Symbol_184
      REAL(w2f__8) OpenAD_Symbol_185
      REAL(w2f__8) OpenAD_Symbol_186
      REAL(w2f__8) OpenAD_Symbol_187
      REAL(w2f__8) OpenAD_Symbol_188
      REAL(w2f__8) OpenAD_Symbol_189
      REAL(w2f__8) OpenAD_Symbol_19
      REAL(w2f__8) OpenAD_Symbol_190
      REAL(w2f__8) OpenAD_Symbol_191
      REAL(w2f__8) OpenAD_Symbol_192
      REAL(w2f__8) OpenAD_Symbol_193
      REAL(w2f__8) OpenAD_Symbol_194
      REAL(w2f__8) OpenAD_Symbol_195
      REAL(w2f__8) OpenAD_Symbol_196
      REAL(w2f__8) OpenAD_Symbol_197
      REAL(w2f__8) OpenAD_Symbol_198
      REAL(w2f__8) OpenAD_Symbol_199
      REAL(w2f__8) OpenAD_Symbol_2
      REAL(w2f__8) OpenAD_Symbol_200
      REAL(w2f__8) OpenAD_Symbol_201
      REAL(w2f__8) OpenAD_Symbol_202
      REAL(w2f__8) OpenAD_Symbol_203
      REAL(w2f__8) OpenAD_Symbol_204
      REAL(w2f__8) OpenAD_Symbol_205
      REAL(w2f__8) OpenAD_Symbol_206
      REAL(w2f__8) OpenAD_Symbol_207
      REAL(w2f__8) OpenAD_Symbol_208
      REAL(w2f__8) OpenAD_Symbol_209
      REAL(w2f__8) OpenAD_Symbol_21
      REAL(w2f__8) OpenAD_Symbol_210
      REAL(w2f__8) OpenAD_Symbol_211
      REAL(w2f__8) OpenAD_Symbol_212
      REAL(w2f__8) OpenAD_Symbol_213
      REAL(w2f__8) OpenAD_Symbol_214
      REAL(w2f__8) OpenAD_Symbol_215
      REAL(w2f__8) OpenAD_Symbol_216
      REAL(w2f__8) OpenAD_Symbol_217
      REAL(w2f__8) OpenAD_Symbol_218
      REAL(w2f__8) OpenAD_Symbol_219
      REAL(w2f__8) OpenAD_Symbol_220
      REAL(w2f__8) OpenAD_Symbol_221
      REAL(w2f__8) OpenAD_Symbol_222
      INTEGER(w2f__i8) OpenAD_Symbol_226
      INTEGER(w2f__i8) OpenAD_Symbol_227
      INTEGER(w2f__i8) OpenAD_Symbol_228
      INTEGER(w2f__i8) OpenAD_Symbol_229
      REAL(w2f__8) OpenAD_Symbol_23
      INTEGER(w2f__i8) OpenAD_Symbol_230
      INTEGER(w2f__i8) OpenAD_Symbol_231
      INTEGER(w2f__i8) OpenAD_Symbol_232
      INTEGER(w2f__i8) OpenAD_Symbol_233
      INTEGER(w2f__i8) OpenAD_Symbol_234
      INTEGER(w2f__i8) OpenAD_Symbol_235
      INTEGER(w2f__i8) OpenAD_Symbol_236
      INTEGER(w2f__i8) OpenAD_Symbol_237
      INTEGER(w2f__i8) OpenAD_Symbol_238
      INTEGER(w2f__i8) OpenAD_Symbol_239
      INTEGER(w2f__i8) OpenAD_Symbol_240
      INTEGER(w2f__i8) OpenAD_Symbol_241
      INTEGER(w2f__i8) OpenAD_Symbol_242
      INTEGER(w2f__i8) OpenAD_Symbol_243
      REAL(w2f__8) OpenAD_Symbol_25
      REAL(w2f__8) OpenAD_Symbol_27
      REAL(w2f__8) OpenAD_Symbol_29
      REAL(w2f__8) OpenAD_Symbol_3
      REAL(w2f__8) OpenAD_Symbol_30
      REAL(w2f__8) OpenAD_Symbol_31
      REAL(w2f__8) OpenAD_Symbol_32
      REAL(w2f__8) OpenAD_Symbol_33
      REAL(w2f__8) OpenAD_Symbol_34
      REAL(w2f__8) OpenAD_Symbol_35
      REAL(w2f__8) OpenAD_Symbol_36
      REAL(w2f__8) OpenAD_Symbol_37
      REAL(w2f__8) OpenAD_Symbol_38
      REAL(w2f__8) OpenAD_Symbol_4
      REAL(w2f__8) OpenAD_Symbol_40
      REAL(w2f__8) OpenAD_Symbol_42
      REAL(w2f__8) OpenAD_Symbol_44
      REAL(w2f__8) OpenAD_Symbol_46
      REAL(w2f__8) OpenAD_Symbol_47
      REAL(w2f__8) OpenAD_Symbol_48
      REAL(w2f__8) OpenAD_Symbol_49
      REAL(w2f__8) OpenAD_Symbol_5
      REAL(w2f__8) OpenAD_Symbol_50
      REAL(w2f__8) OpenAD_Symbol_51
      REAL(w2f__8) OpenAD_Symbol_53
      REAL(w2f__8) OpenAD_Symbol_55
      REAL(w2f__8) OpenAD_Symbol_57
      REAL(w2f__8) OpenAD_Symbol_58
      REAL(w2f__8) OpenAD_Symbol_59
      REAL(w2f__8) OpenAD_Symbol_6
      REAL(w2f__8) OpenAD_Symbol_60
      REAL(w2f__8) OpenAD_Symbol_61
      REAL(w2f__8) OpenAD_Symbol_62
      REAL(w2f__8) OpenAD_Symbol_63
      REAL(w2f__8) OpenAD_Symbol_64
      REAL(w2f__8) OpenAD_Symbol_65
      REAL(w2f__8) OpenAD_Symbol_66
      REAL(w2f__8) OpenAD_Symbol_67
      REAL(w2f__8) OpenAD_Symbol_68
      REAL(w2f__8) OpenAD_Symbol_69
      REAL(w2f__8) OpenAD_Symbol_7
      REAL(w2f__8) OpenAD_Symbol_70
      REAL(w2f__8) OpenAD_Symbol_71
      REAL(w2f__8) OpenAD_Symbol_72
      REAL(w2f__8) OpenAD_Symbol_74
      REAL(w2f__8) OpenAD_Symbol_76
      REAL(w2f__8) OpenAD_Symbol_78
      REAL(w2f__8) OpenAD_Symbol_8
      REAL(w2f__8) OpenAD_Symbol_80
      REAL(w2f__8) OpenAD_Symbol_81
      REAL(w2f__8) OpenAD_Symbol_82
      REAL(w2f__8) OpenAD_Symbol_83
      REAL(w2f__8) OpenAD_Symbol_84
      REAL(w2f__8) OpenAD_Symbol_85
      REAL(w2f__8) OpenAD_Symbol_86
      REAL(w2f__8) OpenAD_Symbol_87
      REAL(w2f__8) OpenAD_Symbol_88
      REAL(w2f__8) OpenAD_Symbol_9
      REAL(w2f__8) OpenAD_Symbol_90
      REAL(w2f__8) OpenAD_Symbol_92
      REAL(w2f__8) OpenAD_Symbol_94
      REAL(w2f__8) OpenAD_Symbol_95
      REAL(w2f__8) OpenAD_Symbol_97
      REAL(w2f__8) OpenAD_Symbol_98
      REAL(w2f__8) OpenAD_Symbol_99
C
C     **** Parameters and Result ****
C
      type(active) :: LOCPRES(1 : 2, 1 : 2)
      type(active) :: TFLD(1 : 2, 1 : 2, 1 : 2, 1 : 2, 1 : 2)
      type(active) :: SFLD(1 : 2, 1 : 2, 1 : 2, 1 : 2, 1 : 2)
      type(active) :: BULKMOD(1 : 2, 1 : 2)
C
C     **** Local Variables and Functions ****
C
      INTEGER(w2f__i4) BI
      INTEGER(w2f__i4) BJ
      type(active) :: BMFRESH
      type(active) :: BMPRES
      type(active) :: BMSALT
      REAL(w2f__8) EOSJMDCKFW(1 : 5)
      REAL(w2f__8) EOSJMDCKP(1 : 14)
      REAL(w2f__8) EOSJMDCKSW(1 : 7)
      INTEGER(w2f__i4) I
      INTEGER(w2f__i4) J
      INTEGER(w2f__i4) K
      type(active) :: P
      type(active) :: P2
      type(active) :: S
      type(active) :: S3O2
      REAL(w2f__8) SITOBAR
      type(active) :: T
      type(active) :: T2
      type(active) :: T3
      type(active) :: T4
      INTEGER(w2f__i8) OpenAD_Symbol_287
      INTEGER(w2f__i8) OpenAD_Symbol_288
      INTEGER(w2f__i8) OpenAD_Symbol_289
      INTEGER(w2f__i8) OpenAD_Symbol_290
      INTEGER(w2f__i8) OpenAD_Symbol_291
      REAL(w2f__8) OpenAD_Symbol_292
      INTEGER(w2f__i8) OpenAD_Symbol_293
      INTEGER(w2f__i8) OpenAD_Symbol_294
      INTEGER(w2f__i8) OpenAD_Symbol_295
      INTEGER(w2f__i8) OpenAD_Symbol_296
      INTEGER(w2f__i8) OpenAD_Symbol_297
      REAL(w2f__8) OpenAD_Symbol_298
      INTEGER(w2f__i8) OpenAD_Symbol_299
      INTEGER(w2f__i8) OpenAD_Symbol_300
      INTEGER(w2f__i8) OpenAD_Symbol_301
      INTEGER(w2f__i8) OpenAD_Symbol_302
      INTEGER(w2f__i8) OpenAD_Symbol_303
      REAL(w2f__8) OpenAD_Symbol_304
      INTEGER(w2f__i8) OpenAD_Symbol_305
      INTEGER(w2f__i8) OpenAD_Symbol_306
      INTEGER(w2f__i8) OpenAD_Symbol_307
      INTEGER(w2f__i8) OpenAD_Symbol_308
      INTEGER(w2f__i8) OpenAD_Symbol_309
      INTEGER(w2f__i8) OpenAD_Symbol_310
      INTEGER(w2f__i8) OpenAD_Symbol_311
      INTEGER(w2f__i8) OpenAD_Symbol_312
      INTEGER(w2f__i8) OpenAD_Symbol_313
      INTEGER(w2f__i8) OpenAD_Symbol_314
      REAL(w2f__8) OpenAD_Symbol_315
      REAL(w2f__8) OpenAD_Symbol_316
      INTEGER(w2f__i8) OpenAD_Symbol_317
      INTEGER(w2f__i8) OpenAD_Symbol_318
      INTEGER(w2f__i8) OpenAD_Symbol_319
      INTEGER(w2f__i8) OpenAD_Symbol_320
      REAL(w2f__8) OpenAD_Symbol_321
      INTEGER(w2f__i8) OpenAD_Symbol_322
      INTEGER(w2f__i8) OpenAD_Symbol_323
      REAL(w2f__8) OpenAD_Symbol_324
      INTEGER(w2f__i8) OpenAD_Symbol_325
      INTEGER(w2f__i8) OpenAD_Symbol_326
      REAL(w2f__8) OpenAD_Symbol_327
      INTEGER(w2f__i8) OpenAD_Symbol_328
      INTEGER(w2f__i8) OpenAD_Symbol_329
      REAL(w2f__8) OpenAD_Symbol_330
      INTEGER(w2f__i8) OpenAD_Symbol_331
      INTEGER(w2f__i8) OpenAD_Symbol_332
      REAL(w2f__8) OpenAD_Symbol_333
      INTEGER(w2f__i8) OpenAD_Symbol_334
      INTEGER(w2f__i8) OpenAD_Symbol_335
      REAL(w2f__8) OpenAD_Symbol_336
      INTEGER(w2f__i8) OpenAD_Symbol_337
      INTEGER(w2f__i8) OpenAD_Symbol_338
      REAL(w2f__8) OpenAD_Symbol_339
      INTEGER(w2f__i8) OpenAD_Symbol_340
      INTEGER(w2f__i8) OpenAD_Symbol_341
      REAL(w2f__8) OpenAD_Symbol_342
      INTEGER(w2f__i8) OpenAD_Symbol_343
      INTEGER(w2f__i8) OpenAD_Symbol_344
      REAL(w2f__8) OpenAD_Symbol_345
      INTEGER(w2f__i8) OpenAD_Symbol_346
      INTEGER(w2f__i8) OpenAD_Symbol_347
      REAL(w2f__8) OpenAD_Symbol_348
      INTEGER(w2f__i8) OpenAD_Symbol_349
      INTEGER(w2f__i8) OpenAD_Symbol_350
      REAL(w2f__8) OpenAD_Symbol_351
      INTEGER(w2f__i8) OpenAD_Symbol_352
      INTEGER(w2f__i8) OpenAD_Symbol_353
      REAL(w2f__8) OpenAD_Symbol_354
      INTEGER(w2f__i8) OpenAD_Symbol_355
      INTEGER(w2f__i8) OpenAD_Symbol_356
      REAL(w2f__8) OpenAD_Symbol_357
      INTEGER(w2f__i8) OpenAD_Symbol_358
      INTEGER(w2f__i8) OpenAD_Symbol_359
      REAL(w2f__8) OpenAD_Symbol_360
      INTEGER(w2f__i8) OpenAD_Symbol_361
      INTEGER(w2f__i8) OpenAD_Symbol_362
      REAL(w2f__8) OpenAD_Symbol_363
      INTEGER(w2f__i8) OpenAD_Symbol_364
      INTEGER(w2f__i8) OpenAD_Symbol_365
      REAL(w2f__8) OpenAD_Symbol_366
      INTEGER(w2f__i8) OpenAD_Symbol_367
      INTEGER(w2f__i8) OpenAD_Symbol_368
      REAL(w2f__8) OpenAD_Symbol_369
      INTEGER(w2f__i8) OpenAD_Symbol_370
      INTEGER(w2f__i8) OpenAD_Symbol_371
      REAL(w2f__8) OpenAD_Symbol_372
      INTEGER(w2f__i8) OpenAD_Symbol_373
      INTEGER(w2f__i8) OpenAD_Symbol_374
      REAL(w2f__8) OpenAD_Symbol_375
      INTEGER(w2f__i8) OpenAD_Symbol_376
      INTEGER(w2f__i8) OpenAD_Symbol_377
      REAL(w2f__8) OpenAD_Symbol_378
      INTEGER(w2f__i8) OpenAD_Symbol_379
      INTEGER(w2f__i8) OpenAD_Symbol_380
      REAL(w2f__8) OpenAD_Symbol_381
      INTEGER(w2f__i8) OpenAD_Symbol_382
      INTEGER(w2f__i8) OpenAD_Symbol_383
      REAL(w2f__8) OpenAD_Symbol_384
      INTEGER(w2f__i8) OpenAD_Symbol_385
      INTEGER(w2f__i8) OpenAD_Symbol_386
      REAL(w2f__8) OpenAD_Symbol_387
      INTEGER(w2f__i8) OpenAD_Symbol_388
      INTEGER(w2f__i8) OpenAD_Symbol_389
      REAL(w2f__8) OpenAD_Symbol_390
C
C     **** Statements ****
C


          ! checkpointing stacks and offsets
          integer :: cp_loop_variable_1,cp_loop_variable_2,
     +cp_loop_variable_3,cp_loop_variable_4,cp_loop_variable_5
          ! floats 'F'
          double precision, dimension(:), allocatable, save :: 
     +theArgFStack
          integer, save :: theArgFStackoffset=0, theArgFStackSize=0
          ! integers 'I'
          integer, dimension(:), allocatable, save :: 
     +theArgIStack
          integer, save :: theArgIStackoffset=0, theArgIStackSize=0
          ! booleans 'B'
          logical, dimension(:), allocatable, save :: 
     +theArgBStack
          integer, save :: theArgBStackoffset=0, theArgBStackSize=0
          ! strings 'S'
          character*(80), dimension(:), allocatable, save :: 
     +theArgSStack
          integer, save :: theArgSStackoffset=0, theArgSStackSize=0

          type(modeType) :: our_orig_mode

	  ! call external C function used in inlined code
          integer iaddr
          external iaddr

C          write(*,'(A,I6,A,I6,A,I5,A,I5)')
C     +"b:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
          if (our_rev_mode%arg_store) then 
C            print*, " arg_store  ", our_rev_mode
C store arguments
          do cp_loop_variable_1 = lbound(LOCPRES,1),ubound(LOCPRES,1)
          call cp_store_real_vector(LOCPRES(cp_loop_variable_1,:),size(L
     +OCPRES(cp_loop_variable_1,:)),theArgFStack,theArgFStackoffset,theA
     +rgFStackSize)
          end do
          do cp_loop_variable_1 = lbound(TFLD,1),ubound(TFLD,1)
             do cp_loop_variable_2 = lbound(TFLD,2),ubound(TFLD,2)
                do cp_loop_variable_3 = lbound(TFLD,3),ubound(TFLD,3)
                   do cp_loop_variable_4 = lbound(TFLD,4),ubound(TFLD,4)
          call cp_store_real_vector(TFLD(cp_loop_variable_1,cp_loop_vari
     +able_2,cp_loop_variable_3,cp_loop_variable_4,:),size(TFLD(cp_loop_
     +variable_1,cp_loop_variable_2,cp_loop_variable_3,cp_loop_variable_
     +4,:)),theArgFStack,theArgFStackoffset,theArgFStackSize)
                 end do
               end do
             end do
          end do
          do cp_loop_variable_1 = lbound(SFLD,1),ubound(SFLD,1)
             do cp_loop_variable_2 = lbound(SFLD,2),ubound(SFLD,2)
                do cp_loop_variable_3 = lbound(SFLD,3),ubound(SFLD,3)
                   do cp_loop_variable_4 = lbound(SFLD,4),ubound(SFLD,4)
          call cp_store_real_vector(SFLD(cp_loop_variable_1,cp_loop_vari
     +able_2,cp_loop_variable_3,cp_loop_variable_4,:),size(SFLD(cp_loop_
     +variable_1,cp_loop_variable_2,cp_loop_variable_3,cp_loop_variable_
     +4,:)),theArgFStack,theArgFStackoffset,theArgFStackSize)
                 end do
               end do
             end do
          end do
          end if 
          if (our_rev_mode%arg_restore) then
C            print*, " arg_restore", our_rev_mode
C restore arguments
          do cp_loop_variable_1 = ubound(SFLD,1),lbound(SFLD,1),-1
             do cp_loop_variable_2 = ubound(SFLD,2),lbound(SFLD,2),-1
                do cp_loop_variable_3 = ubound(SFLD,3),lbound(SFLD,3),-1
                   do cp_loop_variable_4 = ubound(SFLD,4),lbound(SFLD,4)
     +,-1
                      do cp_loop_variable_5 = ubound(SFLD,5),lbound(SFLD
     +,5),-1
                         SFLD(cp_loop_variable_1,cp_loop_variable_2,cp_l
     +oop_variable_3,cp_loop_variable_4,cp_loop_variable_5)%v = theArgFS
     +tack(theArgFStackoffset)
                         theArgFStackoffset = theArgFStackoffset-1
                      end do
                   end do
                end do
             end do
          end do
          do cp_loop_variable_1 = ubound(TFLD,1),lbound(TFLD,1),-1
             do cp_loop_variable_2 = ubound(TFLD,2),lbound(TFLD,2),-1
                do cp_loop_variable_3 = ubound(TFLD,3),lbound(TFLD,3),-1
                   do cp_loop_variable_4 = ubound(TFLD,4),lbound(TFLD,4)
     +,-1
                      do cp_loop_variable_5 = ubound(TFLD,5),lbound(TFLD
     +,5),-1
                         TFLD(cp_loop_variable_1,cp_loop_variable_2,cp_l
     +oop_variable_3,cp_loop_variable_4,cp_loop_variable_5)%v = theArgFS
     +tack(theArgFStackoffset)
                         theArgFStackoffset = theArgFStackoffset-1
                      end do
                   end do
                end do
             end do
          end do
          do cp_loop_variable_1 = ubound(LOCPRES,1),lbound(LOCPRES,1),-1
             do cp_loop_variable_2 = ubound(LOCPRES,2),lbound(LOCPRES,2)
     +,-1
                LOCPRES(cp_loop_variable_1,cp_loop_variable_2)%v = theAr
     +gFStack(theArgFStackoffset)
                theArgFStackoffset = theArgFStackoffset-1
             end do
          end do
          end if
          if (our_rev_mode%plain) then
C            print*, " plain      ", our_rev_mode
            our_orig_mode=our_rev_mode
            our_rev_mode%arg_store=.FALSE.
C original function
C$OPENAD XXX Template ad_template.f
      EOSJMDCKFW(1) = 1.96593300779999990482D+04
      EOSJMDCKFW(1) = 1.44430404659999993555D+02
      EOSJMDCKFW(1) = (-1.70610296730000010612D00)
      EOSJMDCKFW(1) = 9.64870397000000025456D-03
      EOSJMDCKFW(1) = (-4.19025309379999992402D-05)
      EOSJMDCKSW(1) = 5.28485488889999999174D+01
      EOSJMDCKSW(2) = (-3.10108900070000026439D-01)
      EOSJMDCKSW(3) = 6.2832632101999996363D-03
      EOSJMDCKSW(4) = (-5.08418816029999971122D-05)
      EOSJMDCKSW(5) = 3.88664007189999993752D-01
      EOSJMDCKSW(6) = 9.08583030100000056672D-03
      EOSJMDCKSW(7) = (-4.61992400230000011332D-04)
      EOSJMDCKP(1) = 3.18651890749999999741D00
      EOSJMDCKP(2) = 2.2122759371999999034D-02
      EOSJMDCKP(3) = (-2.98464205119999999305D-04)
      EOSJMDCKP(4) = 1.95641496250000003533D-06
      EOSJMDCKP(5) = 6.70438818630000009369D-03
      EOSJMDCKP(6) = (-1.84731805350000003168D-04)
      EOSJMDCKP(7) = 2.05933105239999988355D-07
      EOSJMDCKP(8) = 1.48026592800000000947D-04
      EOSJMDCKP(9) = 2.10289799719999998548D-04
      EOSJMDCKP(10) = (-1.20201602839999992066D-05)
      EOSJMDCKP(11) = 1.394679998200000081D-07
      EOSJMDCKP(12) = (-2.04023695009999982071D-06)
      EOSJMDCKP(13) = 6.12877286699999960113D-08
      EOSJMDCKP(14) = 6.20732298890000023583D-10
      K = 1
      BI = 1
      BJ = 1
      SITOBAR = 1.0D00
      DO J = 1, 2, 1
        DO I = 1, 2, 1
          T%v = TFLD(I,J,K,BI,BJ)%v
          T2%v = (T%v*T%v)
          T3%v = (T%v*T2%v)
          T4%v = (T%v*T3%v)
          S%v = SFLD(I,J,K,BI,BJ)%v
          IF (S%v .GT. 0.0D00) THEN
            S3O2%v = (S%v*SQRT(S%v))
          ELSE
            S%v = 0.0D00
            S3O2%v = 0.0D00
          ENDIF
          P%v = (LOCPRES(I,J)%v*SITOBAR)
          P2%v = (P%v*P%v)
          BMFRESH%v = (EOSJMDCKFW(1)+EOSJMDCKFW(2)*T%v+EOSJMDCKFW(3)*T2%
     +v+EOSJMDCKFW(4)*T3%v+EOSJMDCKFW(5)*T4%v)
          BMSALT%v = (S%v*(EOSJMDCKSW(1)+EOSJMDCKSW(2)*T%v+EOSJMDCKSW(3)
     +*T2%v+EOSJMDCKSW(4)*T3%v)+S3O2%v*(EOSJMDCKSW(5)+EOSJMDCKSW(6)*T%v+
     +EOSJMDCKSW(7)*T2%v))
          BMPRES%v = (P%v*(EOSJMDCKP(1)+EOSJMDCKP(2)*T%v+EOSJMDCKP(3)*T2
     +%v+EOSJMDCKP(4)*T3%v)+P%v*S%v*(EOSJMDCKP(5)+EOSJMDCKP(6)*T%v+EOSJM
     +DCKP(7)*T2%v)+EOSJMDCKP(8)*P%v*S3O2%v+P2%v*(EOSJMDCKP(9)+EOSJMDCKP
     +(10)*T%v+EOSJMDCKP(11)*T2%v)+P2%v*S%v*(EOSJMDCKP(12)+EOSJMDCKP(13)
     +*T%v+EOSJMDCKP(14)*T2%v))
          BULKMOD(INT(I),INT(J))%v = (BMPRES%v+BMFRESH%v+BMSALT%v)
        END DO
      END DO
      
            our_rev_mode=our_orig_mode
          end if 
          if (our_rev_mode%tape) then
C            print*, " tape       ", our_rev_mode
            our_rev_mode%arg_store=.TRUE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.TRUE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.FALSE.
C taping
C$OPENAD XXX Template ad_template.f
      EOSJMDCKFW(1) = 1.96593300779999990482D+04
      EOSJMDCKFW(1) = 1.44430404659999993555D+02
      EOSJMDCKFW(1) = (-1.70610296730000010612D00)
      EOSJMDCKFW(1) = 9.64870397000000025456D-03
      EOSJMDCKFW(1) = (-4.19025309379999992402D-05)
      EOSJMDCKSW(1) = 5.28485488889999999174D+01
      EOSJMDCKSW(2) = (-3.10108900070000026439D-01)
      EOSJMDCKSW(3) = 6.2832632101999996363D-03
      EOSJMDCKSW(4) = (-5.08418816029999971122D-05)
      EOSJMDCKSW(5) = 3.88664007189999993752D-01
      EOSJMDCKSW(6) = 9.08583030100000056672D-03
      EOSJMDCKSW(7) = (-4.61992400230000011332D-04)
      EOSJMDCKP(1) = 3.18651890749999999741D00
      EOSJMDCKP(2) = 2.2122759371999999034D-02
      EOSJMDCKP(3) = (-2.98464205119999999305D-04)
      EOSJMDCKP(4) = 1.95641496250000003533D-06
      EOSJMDCKP(5) = 6.70438818630000009369D-03
      EOSJMDCKP(6) = (-1.84731805350000003168D-04)
      EOSJMDCKP(7) = 2.05933105239999988355D-07
      EOSJMDCKP(8) = 1.48026592800000000947D-04
      EOSJMDCKP(9) = 2.10289799719999998548D-04
      EOSJMDCKP(10) = (-1.20201602839999992066D-05)
      EOSJMDCKP(11) = 1.394679998200000081D-07
      EOSJMDCKP(12) = (-2.04023695009999982071D-06)
      EOSJMDCKP(13) = 6.12877286699999960113D-08
      EOSJMDCKP(14) = 6.20732298890000023583D-10
      K = 1
      BI = 1
      BJ = 1
      SITOBAR = 1.0D00
      OpenAD_Symbol_231 = 0_w2f__i8
      DO J = 1, 2, 1
        OpenAD_Symbol_232 = 0_w2f__i8
        DO I = 1, 2, 1
          T%v = TFLD(I,J,K,BI,BJ)%v
          T2%v = (T%v*T%v)
          OpenAD_Symbol_0 = T%v
          OpenAD_Symbol_1 = T%v
          T3%v = (T%v*T2%v)
          OpenAD_Symbol_2 = T2%v
          OpenAD_Symbol_3 = T%v
          T4%v = (T%v*T3%v)
          OpenAD_Symbol_4 = T3%v
          OpenAD_Symbol_5 = T%v
          S%v = SFLD(I,J,K,BI,BJ)%v
          OpenAD_Symbol_135 = (OpenAD_Symbol_2 +(OpenAD_Symbol_1 +  Open
     +AD_Symbol_0) * OpenAD_Symbol_3)
          OpenAD_Symbol_136 = (OpenAD_Symbol_4 + OpenAD_Symbol_135 *  Op
     +enAD_Symbol_5)
          OpenAD_Symbol_137 = (OpenAD_Symbol_1 + OpenAD_Symbol_0)
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BI
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BJ
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BI
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BJ
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_135
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BI
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BJ
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_136
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BI
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BJ
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_137
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BI
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = BJ
          integer_tape_pointer = integer_tape_pointer+1
          IF (S%v .GT. 0.0D00) THEN
            OpenAD_Symbol_6 = SQRT(S%v)
            S3O2%v = (S%v*OpenAD_Symbol_6)
            OpenAD_Symbol_7 = OpenAD_Symbol_6
            OpenAD_Symbol_9 = (5.0D-01 / OpenAD_Symbol_6)
            OpenAD_Symbol_8 = S%v
            OpenAD_Symbol_138 = (OpenAD_Symbol_9 * OpenAD_Symbol_8)
            OpenAD_Symbol_139 = OpenAD_Symbol_7
          double_tape(double_tape_pointer) = OpenAD_Symbol_138
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_139
          double_tape_pointer = double_tape_pointer+1
            OpenAD_Symbol_233 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_233
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            S%v = 0.0D00
            S3O2%v = 0.0D00
            OpenAD_Symbol_234 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_234
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          P%v = (LOCPRES(I,J)%v*SITOBAR)
          OpenAD_Symbol_10 = SITOBAR
          P2%v = (P%v*P%v)
          OpenAD_Symbol_12 = P%v
          OpenAD_Symbol_13 = P%v
          BMFRESH%v = (EOSJMDCKFW(1)+EOSJMDCKFW(2)*T%v+EOSJMDCKFW(3)*T2%
     +v+EOSJMDCKFW(4)*T3%v+EOSJMDCKFW(5)*T4%v)
          OpenAD_Symbol_23 = EOSJMDCKFW(2)
          OpenAD_Symbol_21 = 1_w2f__i8
          OpenAD_Symbol_18 = 1_w2f__i8
          OpenAD_Symbol_25 = EOSJMDCKFW(3)
          OpenAD_Symbol_19 = 1_w2f__i8
          OpenAD_Symbol_16 = 1_w2f__i8
          OpenAD_Symbol_27 = EOSJMDCKFW(4)
          OpenAD_Symbol_17 = 1_w2f__i8
          OpenAD_Symbol_14 = 1_w2f__i8
          OpenAD_Symbol_29 = EOSJMDCKFW(5)
          OpenAD_Symbol_15 = 1_w2f__i8
          OpenAD_Symbol_32 = (EOSJMDCKSW(1)+EOSJMDCKSW(2)*T%v+EOSJMDCKSW
     +(3)*T2%v+EOSJMDCKSW(4)*T3%v)
          OpenAD_Symbol_47 = (EOSJMDCKSW(5)+EOSJMDCKSW(6)*T%v+EOSJMDCKSW
     +(7)*T2%v)
          BMSALT%v = (S%v*OpenAD_Symbol_32+S3O2%v*OpenAD_Symbol_47)
          OpenAD_Symbol_33 = OpenAD_Symbol_32
          OpenAD_Symbol_42 = EOSJMDCKSW(2)
          OpenAD_Symbol_40 = 1_w2f__i8
          OpenAD_Symbol_37 = 1_w2f__i8
          OpenAD_Symbol_44 = EOSJMDCKSW(3)
          OpenAD_Symbol_38 = 1_w2f__i8
          OpenAD_Symbol_35 = 1_w2f__i8
          OpenAD_Symbol_46 = EOSJMDCKSW(4)
          OpenAD_Symbol_36 = 1_w2f__i8
          OpenAD_Symbol_34 = S%v
          OpenAD_Symbol_30 = 1_w2f__i8
          OpenAD_Symbol_48 = OpenAD_Symbol_47
          OpenAD_Symbol_55 = EOSJMDCKSW(6)
          OpenAD_Symbol_53 = 1_w2f__i8
          OpenAD_Symbol_50 = 1_w2f__i8
          OpenAD_Symbol_57 = EOSJMDCKSW(7)
          OpenAD_Symbol_51 = 1_w2f__i8
          OpenAD_Symbol_49 = S3O2%v
          OpenAD_Symbol_31 = 1_w2f__i8
          OpenAD_Symbol_66 = (EOSJMDCKP(1)+EOSJMDCKP(2)*T%v+EOSJMDCKP(3)
     +*T2%v+EOSJMDCKP(4)*T3%v)
          OpenAD_Symbol_81 = (P%v*S%v)
          OpenAD_Symbol_82 = (EOSJMDCKP(5)+EOSJMDCKP(6)*T%v+EOSJMDCKP(7)
     +*T2%v)
          OpenAD_Symbol_95 = (P%v*S3O2%v)
          OpenAD_Symbol_100 = (EOSJMDCKP(9)+EOSJMDCKP(10)*T%v+EOSJMDCKP(
     +11)*T2%v)
          OpenAD_Symbol_111 = (P2%v*S%v)
          OpenAD_Symbol_112 = (EOSJMDCKP(12)+EOSJMDCKP(13)*T%v+EOSJMDCKP
     +(14)*T2%v)
          BMPRES%v = (P%v*OpenAD_Symbol_66+OpenAD_Symbol_81*OpenAD_Symbo
     +l_82+EOSJMDCKP(8)*OpenAD_Symbol_95+P2%v*OpenAD_Symbol_100+OpenAD_S
     +ymbol_111*OpenAD_Symbol_112)
          OpenAD_Symbol_67 = OpenAD_Symbol_66
          OpenAD_Symbol_76 = EOSJMDCKP(2)
          OpenAD_Symbol_74 = 1_w2f__i8
          OpenAD_Symbol_71 = 1_w2f__i8
          OpenAD_Symbol_78 = EOSJMDCKP(3)
          OpenAD_Symbol_72 = 1_w2f__i8
          OpenAD_Symbol_69 = 1_w2f__i8
          OpenAD_Symbol_80 = EOSJMDCKP(4)
          OpenAD_Symbol_70 = 1_w2f__i8
          OpenAD_Symbol_68 = P%v
          OpenAD_Symbol_64 = 1_w2f__i8
          OpenAD_Symbol_85 = S%v
          OpenAD_Symbol_86 = P%v
          OpenAD_Symbol_83 = OpenAD_Symbol_82
          OpenAD_Symbol_92 = EOSJMDCKP(6)
          OpenAD_Symbol_90 = 1_w2f__i8
          OpenAD_Symbol_87 = 1_w2f__i8
          OpenAD_Symbol_94 = EOSJMDCKP(7)
          OpenAD_Symbol_88 = 1_w2f__i8
          OpenAD_Symbol_84 = OpenAD_Symbol_81
          OpenAD_Symbol_65 = 1_w2f__i8
          OpenAD_Symbol_62 = 1_w2f__i8
          OpenAD_Symbol_98 = S3O2%v
          OpenAD_Symbol_99 = P%v
          OpenAD_Symbol_97 = EOSJMDCKP(8)
          OpenAD_Symbol_63 = 1_w2f__i8
          OpenAD_Symbol_60 = 1_w2f__i8
          OpenAD_Symbol_101 = OpenAD_Symbol_100
          OpenAD_Symbol_108 = EOSJMDCKP(10)
          OpenAD_Symbol_106 = 1_w2f__i8
          OpenAD_Symbol_103 = 1_w2f__i8
          OpenAD_Symbol_110 = EOSJMDCKP(11)
          OpenAD_Symbol_104 = 1_w2f__i8
          OpenAD_Symbol_102 = P2%v
          OpenAD_Symbol_61 = 1_w2f__i8
          OpenAD_Symbol_58 = 1_w2f__i8
          OpenAD_Symbol_115 = S%v
          OpenAD_Symbol_116 = P2%v
          OpenAD_Symbol_113 = OpenAD_Symbol_112
          OpenAD_Symbol_122 = EOSJMDCKP(13)
          OpenAD_Symbol_120 = 1_w2f__i8
          OpenAD_Symbol_117 = 1_w2f__i8
          OpenAD_Symbol_124 = EOSJMDCKP(14)
          OpenAD_Symbol_118 = 1_w2f__i8
          OpenAD_Symbol_114 = OpenAD_Symbol_111
          OpenAD_Symbol_59 = 1_w2f__i8
          BULKMOD(INT(I),INT(J))%v = (BMPRES%v+BMFRESH%v+BMSALT%v)
          OpenAD_Symbol_125 = 1_w2f__i8
          OpenAD_Symbol_127 = 1_w2f__i8
          OpenAD_Symbol_128 = 1_w2f__i8
          OpenAD_Symbol_126 = 1_w2f__i8
          OpenAD_Symbol_140 = (OpenAD_Symbol_10 *(OpenAD_Symbol_13 +  Op
     +enAD_Symbol_12))
          OpenAD_Symbol_141 = (OpenAD_Symbol_10 * OpenAD_Symbol_67)
          OpenAD_Symbol_142 = (OpenAD_Symbol_10 * OpenAD_Symbol_85)
          OpenAD_Symbol_143 = (OpenAD_Symbol_10 * OpenAD_Symbol_98)
          OpenAD_Symbol_144 = (OpenAD_Symbol_58 * OpenAD_Symbol_125)
          OpenAD_Symbol_145 = (OpenAD_Symbol_59 * OpenAD_Symbol_125)
          OpenAD_Symbol_146 = (OpenAD_Symbol_60 * OpenAD_Symbol_144)
          OpenAD_Symbol_147 = (OpenAD_Symbol_61 * OpenAD_Symbol_144)
          OpenAD_Symbol_148 = (OpenAD_Symbol_62 * OpenAD_Symbol_146)
          OpenAD_Symbol_149 = (OpenAD_Symbol_63 * OpenAD_Symbol_146)
          OpenAD_Symbol_150 = (OpenAD_Symbol_127 * OpenAD_Symbol_126)
          OpenAD_Symbol_151 = (OpenAD_Symbol_128 * OpenAD_Symbol_126)
          OpenAD_Symbol_152 = (OpenAD_Symbol_64 * OpenAD_Symbol_148)
          OpenAD_Symbol_153 = (OpenAD_Symbol_65 * OpenAD_Symbol_148)
          OpenAD_Symbol_154 = (OpenAD_Symbol_30 * OpenAD_Symbol_151)
          OpenAD_Symbol_155 = (OpenAD_Symbol_31 * OpenAD_Symbol_151)
          OpenAD_Symbol_156 = (OpenAD_Symbol_68 * OpenAD_Symbol_152)
          OpenAD_Symbol_157 = (OpenAD_Symbol_141 * OpenAD_Symbol_152)
          OpenAD_Symbol_158 = (OpenAD_Symbol_33 * OpenAD_Symbol_154)
          OpenAD_Symbol_159 = (OpenAD_Symbol_34 * OpenAD_Symbol_154)
          OpenAD_Symbol_160 = (OpenAD_Symbol_14 * OpenAD_Symbol_150)
          OpenAD_Symbol_161 = (OpenAD_Symbol_15 * OpenAD_Symbol_150)
          OpenAD_Symbol_162 = (OpenAD_Symbol_113 * OpenAD_Symbol_145)
          OpenAD_Symbol_163 = (OpenAD_Symbol_114 * OpenAD_Symbol_145)
          OpenAD_Symbol_164 = (OpenAD_Symbol_101 * OpenAD_Symbol_147)
          OpenAD_Symbol_165 = (OpenAD_Symbol_102 * OpenAD_Symbol_147)
          OpenAD_Symbol_166 = (OpenAD_Symbol_164 + OpenAD_Symbol_115 *  
     +OpenAD_Symbol_162)
          OpenAD_Symbol_167 = (OpenAD_Symbol_116 * OpenAD_Symbol_162)
          OpenAD_Symbol_168 = (OpenAD_Symbol_83 * OpenAD_Symbol_153)
          OpenAD_Symbol_169 = (OpenAD_Symbol_84 * OpenAD_Symbol_153)
          OpenAD_Symbol_170 = (OpenAD_Symbol_69 * OpenAD_Symbol_156)
          OpenAD_Symbol_171 = (OpenAD_Symbol_70 * OpenAD_Symbol_156)
          OpenAD_Symbol_172 = (OpenAD_Symbol_48 * OpenAD_Symbol_155)
          OpenAD_Symbol_173 = (OpenAD_Symbol_49 * OpenAD_Symbol_155)
          OpenAD_Symbol_174 = (OpenAD_Symbol_35 * OpenAD_Symbol_159)
          OpenAD_Symbol_175 = (OpenAD_Symbol_36 * OpenAD_Symbol_159)
          OpenAD_Symbol_176 = (OpenAD_Symbol_16 * OpenAD_Symbol_160)
          OpenAD_Symbol_177 = (OpenAD_Symbol_17 * OpenAD_Symbol_160)
          OpenAD_Symbol_178 = (OpenAD_Symbol_117 * OpenAD_Symbol_163)
          OpenAD_Symbol_179 = (OpenAD_Symbol_118 * OpenAD_Symbol_163)
          OpenAD_Symbol_180 = (OpenAD_Symbol_103 * OpenAD_Symbol_165)
          OpenAD_Symbol_181 = (OpenAD_Symbol_104 * OpenAD_Symbol_165)
          OpenAD_Symbol_182 = (OpenAD_Symbol_87 * OpenAD_Symbol_169)
          OpenAD_Symbol_183 = (OpenAD_Symbol_88 * OpenAD_Symbol_169)
          OpenAD_Symbol_184 = (OpenAD_Symbol_71 * OpenAD_Symbol_170)
          OpenAD_Symbol_185 = (OpenAD_Symbol_72 * OpenAD_Symbol_170)
          OpenAD_Symbol_186 = (OpenAD_Symbol_50 * OpenAD_Symbol_173)
          OpenAD_Symbol_187 = (OpenAD_Symbol_51 * OpenAD_Symbol_173)
          OpenAD_Symbol_188 = (OpenAD_Symbol_37 * OpenAD_Symbol_174)
          OpenAD_Symbol_189 = (OpenAD_Symbol_38 * OpenAD_Symbol_174)
          OpenAD_Symbol_190 = (OpenAD_Symbol_18 * OpenAD_Symbol_176)
          OpenAD_Symbol_191 = (OpenAD_Symbol_19 * OpenAD_Symbol_176)
          OpenAD_Symbol_192 = (OpenAD_Symbol_86 * OpenAD_Symbol_168)
          OpenAD_Symbol_193 = (OpenAD_Symbol_157 + OpenAD_Symbol_142 *  
     +OpenAD_Symbol_168)
          OpenAD_Symbol_194 = (OpenAD_Symbol_120 * OpenAD_Symbol_178)
          OpenAD_Symbol_195 = (OpenAD_Symbol_106 * OpenAD_Symbol_180)
          OpenAD_Symbol_196 = (OpenAD_Symbol_97 * OpenAD_Symbol_149)
          OpenAD_Symbol_197 = (OpenAD_Symbol_99 * OpenAD_Symbol_196)
          OpenAD_Symbol_198 = (OpenAD_Symbol_193 + OpenAD_Symbol_143 *  
     +OpenAD_Symbol_196)
          OpenAD_Symbol_199 = (OpenAD_Symbol_90 * OpenAD_Symbol_182)
          OpenAD_Symbol_200 = (OpenAD_Symbol_74 * OpenAD_Symbol_184)
          OpenAD_Symbol_201 = (OpenAD_Symbol_53 * OpenAD_Symbol_186)
          OpenAD_Symbol_202 = (OpenAD_Symbol_40 * OpenAD_Symbol_188)
          OpenAD_Symbol_203 = (OpenAD_Symbol_21 * OpenAD_Symbol_190)
          OpenAD_Symbol_204 = (OpenAD_Symbol_124 * OpenAD_Symbol_179)
          OpenAD_Symbol_205 = (OpenAD_Symbol_122 * OpenAD_Symbol_194)
          OpenAD_Symbol_206 = (OpenAD_Symbol_110 * OpenAD_Symbol_181)
          OpenAD_Symbol_207 = (OpenAD_Symbol_108 * OpenAD_Symbol_195)
          OpenAD_Symbol_208 = (OpenAD_Symbol_94 * OpenAD_Symbol_183)
          OpenAD_Symbol_209 = (OpenAD_Symbol_92 * OpenAD_Symbol_199)
          OpenAD_Symbol_210 = (OpenAD_Symbol_80 * OpenAD_Symbol_171)
          OpenAD_Symbol_211 = (OpenAD_Symbol_78 * OpenAD_Symbol_185)
          OpenAD_Symbol_212 = (OpenAD_Symbol_76 * OpenAD_Symbol_200)
          OpenAD_Symbol_213 = (OpenAD_Symbol_57 * OpenAD_Symbol_187)
          OpenAD_Symbol_214 = (OpenAD_Symbol_55 * OpenAD_Symbol_201)
          OpenAD_Symbol_215 = (OpenAD_Symbol_46 * OpenAD_Symbol_175)
          OpenAD_Symbol_216 = (OpenAD_Symbol_44 * OpenAD_Symbol_189)
          OpenAD_Symbol_217 = (OpenAD_Symbol_42 * OpenAD_Symbol_202)
          OpenAD_Symbol_218 = (OpenAD_Symbol_29 * OpenAD_Symbol_161)
          OpenAD_Symbol_219 = (OpenAD_Symbol_27 * OpenAD_Symbol_177)
          OpenAD_Symbol_220 = (OpenAD_Symbol_25 * OpenAD_Symbol_191)
          OpenAD_Symbol_221 = (OpenAD_Symbol_23 * OpenAD_Symbol_203)
          OpenAD_Symbol_222 = (OpenAD_Symbol_198 + OpenAD_Symbol_140 *  
     +OpenAD_Symbol_166)
          double_tape(double_tape_pointer) = OpenAD_Symbol_158
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_167
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_172
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_192
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_197
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_204
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_205
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_206
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_207
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_208
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_209
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_210
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_211
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_212
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_213
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_214
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_215
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_216
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_217
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_218
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_219
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_220
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_221
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_222
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_232 = (INT(OpenAD_Symbol_232) + INT(1_w2f__i8))
        END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_232
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_231 = (INT(OpenAD_Symbol_231) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_231
          integer_tape_pointer = integer_tape_pointer+1
      
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.TRUE.
          end if 
          if (our_rev_mode%adjoint) then
C            print*, " adjoint    ", our_rev_mode
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
C adjoint
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_226 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_227 = 1
      DO WHILE(INT(OpenAD_Symbol_227) .LE. INT(OpenAD_Symbol_226))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_228 = integer_tape(integer_tape_pointer)
        OpenAD_Symbol_229 = 1
        DO WHILE(INT(OpenAD_Symbol_229) .LE. INT(OpenAD_Symbol_228))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_317 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_318 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_319 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_320 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_321 = double_tape(double_tape_pointer)
          LOCPRES(INT(OpenAD_Symbol_320),INT(OpenAD_Symbol_319))%d = LOC
     +PRES(INT(OpenAD_Symbol_320),INT(OpenAD_Symbol_319))%d+BULKMOD(INT(
     +OpenAD_Symbol_318),INT(OpenAD_Symbol_317))%d*OpenAD_Symbol_321
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_322 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_323 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_324 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_323),INT(OpenAD_Symbol_322
     +))%d*OpenAD_Symbol_324
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_325 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_326 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_327 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_326),INT(OpenAD_Symbol_3
     +25))%d*OpenAD_Symbol_327
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_328 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_329 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_330 = double_tape(double_tape_pointer)
          T3%d = T3%d+BULKMOD(INT(OpenAD_Symbol_329),INT(OpenAD_Symbol_3
     +28))%d*OpenAD_Symbol_330
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_331 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_332 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_333 = double_tape(double_tape_pointer)
          T4%d = T4%d+BULKMOD(INT(OpenAD_Symbol_332),INT(OpenAD_Symbol_3
     +31))%d*OpenAD_Symbol_333
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_334 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_335 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_336 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_335),INT(OpenAD_Symbol_334
     +))%d*OpenAD_Symbol_336
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_337 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_338 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_339 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_338),INT(OpenAD_Symbol_3
     +37))%d*OpenAD_Symbol_339
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_340 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_341 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_342 = double_tape(double_tape_pointer)
          T3%d = T3%d+BULKMOD(INT(OpenAD_Symbol_341),INT(OpenAD_Symbol_3
     +40))%d*OpenAD_Symbol_342
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_343 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_344 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_345 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_344),INT(OpenAD_Symbol_343
     +))%d*OpenAD_Symbol_345
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_346 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_347 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_348 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_347),INT(OpenAD_Symbol_3
     +46))%d*OpenAD_Symbol_348
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_349 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_350 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_351 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_350),INT(OpenAD_Symbol_349
     +))%d*OpenAD_Symbol_351
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_352 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_353 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_354 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_353),INT(OpenAD_Symbol_3
     +52))%d*OpenAD_Symbol_354
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_355 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_356 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_357 = double_tape(double_tape_pointer)
          T3%d = T3%d+BULKMOD(INT(OpenAD_Symbol_356),INT(OpenAD_Symbol_3
     +55))%d*OpenAD_Symbol_357
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_358 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_359 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_360 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_359),INT(OpenAD_Symbol_358
     +))%d*OpenAD_Symbol_360
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_361 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_362 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_363 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_362),INT(OpenAD_Symbol_3
     +61))%d*OpenAD_Symbol_363
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_364 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_365 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_366 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_365),INT(OpenAD_Symbol_364
     +))%d*OpenAD_Symbol_366
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_367 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_368 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_369 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_368),INT(OpenAD_Symbol_3
     +67))%d*OpenAD_Symbol_369
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_370 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_371 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_372 = double_tape(double_tape_pointer)
          T%d = T%d+BULKMOD(INT(OpenAD_Symbol_371),INT(OpenAD_Symbol_370
     +))%d*OpenAD_Symbol_372
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_373 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_374 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_375 = double_tape(double_tape_pointer)
          T2%d = T2%d+BULKMOD(INT(OpenAD_Symbol_374),INT(OpenAD_Symbol_3
     +73))%d*OpenAD_Symbol_375
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_376 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_377 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_378 = double_tape(double_tape_pointer)
          S3O2%d = S3O2%d+BULKMOD(INT(OpenAD_Symbol_377),INT(OpenAD_Symb
     +ol_376))%d*OpenAD_Symbol_378
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_379 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_380 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_381 = double_tape(double_tape_pointer)
          S%d = S%d+BULKMOD(INT(OpenAD_Symbol_380),INT(OpenAD_Symbol_379
     +))%d*OpenAD_Symbol_381
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_382 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_383 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_384 = double_tape(double_tape_pointer)
          S3O2%d = S3O2%d+BULKMOD(INT(OpenAD_Symbol_383),INT(OpenAD_Symb
     +ol_382))%d*OpenAD_Symbol_384
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_385 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_386 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_387 = double_tape(double_tape_pointer)
          S%d = S%d+BULKMOD(INT(OpenAD_Symbol_386),INT(OpenAD_Symbol_385
     +))%d*OpenAD_Symbol_387
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_388 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_389 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_390 = double_tape(double_tape_pointer)
          S%d = S%d+BULKMOD(INT(OpenAD_Symbol_389),INT(OpenAD_Symbol_388
     +))%d*OpenAD_Symbol_390
          BULKMOD(INT(OpenAD_Symbol_389),INT(OpenAD_Symbol_388))%d = 0.0
     +d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_230 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_230 .ne. 0) THEN
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_315 = double_tape(double_tape_pointer)
          S%d = S%d+S3O2%d*OpenAD_Symbol_315
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_316 = double_tape(double_tape_pointer)
          S%d = S%d+S3O2%d*OpenAD_Symbol_316
          S3O2%d = 0.0d0
          ELSE
          S3O2%d = 0.0d0
          S%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_287 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_288 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_289 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_290 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_291 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_292 = double_tape(double_tape_pointer)
          TFLD(INT(OpenAD_Symbol_291),INT(OpenAD_Symbol_290),INT(OpenAD_
     +Symbol_289),INT(OpenAD_Symbol_288),INT(OpenAD_Symbol_287))%d = TFL
     +D(INT(OpenAD_Symbol_291),INT(OpenAD_Symbol_290),INT(OpenAD_Symbol_
     +289),INT(OpenAD_Symbol_288),INT(OpenAD_Symbol_287))%d+T2%d*OpenAD_
     +Symbol_292
          T2%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_293 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_294 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_295 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_296 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_297 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_298 = double_tape(double_tape_pointer)
          TFLD(INT(OpenAD_Symbol_297),INT(OpenAD_Symbol_296),INT(OpenAD_
     +Symbol_295),INT(OpenAD_Symbol_294),INT(OpenAD_Symbol_293))%d = TFL
     +D(INT(OpenAD_Symbol_297),INT(OpenAD_Symbol_296),INT(OpenAD_Symbol_
     +295),INT(OpenAD_Symbol_294),INT(OpenAD_Symbol_293))%d+T4%d*OpenAD_
     +Symbol_298
          T4%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_299 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_300 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_301 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_302 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_303 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_304 = double_tape(double_tape_pointer)
          TFLD(INT(OpenAD_Symbol_303),INT(OpenAD_Symbol_302),INT(OpenAD_
     +Symbol_301),INT(OpenAD_Symbol_300),INT(OpenAD_Symbol_299))%d = TFL
     +D(INT(OpenAD_Symbol_303),INT(OpenAD_Symbol_302),INT(OpenAD_Symbol_
     +301),INT(OpenAD_Symbol_300),INT(OpenAD_Symbol_299))%d+T3%d*OpenAD_
     +Symbol_304
          T3%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_305 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_306 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_307 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_308 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_309 = integer_tape(integer_tape_pointer)
          TFLD(INT(OpenAD_Symbol_309),INT(OpenAD_Symbol_308),INT(OpenAD_
     +Symbol_307),INT(OpenAD_Symbol_306),INT(OpenAD_Symbol_305))%d = TFL
     +D(INT(OpenAD_Symbol_309),INT(OpenAD_Symbol_308),INT(OpenAD_Symbol_
     +307),INT(OpenAD_Symbol_306),INT(OpenAD_Symbol_305))%d+T%d
          T%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_310 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_311 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_312 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_313 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_314 = integer_tape(integer_tape_pointer)
          SFLD(INT(OpenAD_Symbol_314),INT(OpenAD_Symbol_313),INT(OpenAD_
     +Symbol_312),INT(OpenAD_Symbol_311),INT(OpenAD_Symbol_310))%d = SFL
     +D(INT(OpenAD_Symbol_314),INT(OpenAD_Symbol_313),INT(OpenAD_Symbol_
     +312),INT(OpenAD_Symbol_311),INT(OpenAD_Symbol_310))%d+S%d
          S%d = 0.0d0
          OpenAD_Symbol_229 = INT(OpenAD_Symbol_229) + 1
        END DO
        OpenAD_Symbol_227 = INT(OpenAD_Symbol_227) + 1
      END DO
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
          end if 
C          write(*,'(A,I6,A,I6,A,I5,A,I5)')
C     +"a:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
        end subroutine find_bulkmod
C ========== begin copyright notice ==============
C This file is part of 
C ---------------
C xaifBooster
C ---------------
C Distributed under the BSD license as follows:
C Copyright (c) 2005, The University of Chicago
C All rights reserved.
C
C Redistribution and use in source and binary forms, 
C with or without modification, are permitted provided that the following conditions are met:
C
C    - Redistributions of source code must retain the above copyright notice, 
C      this list of conditions and the following disclaimer.
C    - Redistributions in binary form must reproduce the above copyright notice, 
C      this list of conditions and the following disclaimer in the documentation 
C      and/or other materials provided with the distribution.
C    - Neither the name of The University of Chicago nor the names of its contributors 
C      may be used to endorse or promote products derived from this software without 
C      specific prior written permission.
C
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
C EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
C OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
C SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
C INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
C INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
C LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
C 
C General Information:
C xaifBooster is intended for the transformation of 
C numerical programs represented as xml files according 
C to the XAIF schema. It is part of the OpenAD framework. 
C The main application is automatic 
C differentiation, i.e. the generation of code for 
C the computation of derivatives. 
C The following people are the principal authors of the 
C current version: 
C 	Uwe Naumann
C	Jean Utke
C Additional contributors are: 
C	Andrew Lyons
C	Peter Fine
C
C For more details about xaifBooster and its use in OpenAD please visit:
C   http://www.mcs.anl.gov/openad
C
C This work is partially supported by:
C 	NSF-ITR grant OCE-0205590
C ========== end copyright notice ==============
       subroutine head(X,Y)
          use OpenAD_dct
          use OpenAD_tape
          use OpenAD_rev
          use OpenAD_checkpoints

          ! original arguments get inserted before version
          ! and declared here together with all local variables
          ! generated by xaifBooster

      use w2f__types
      use active_module
      IMPLICIT NONE
C
C     **** Global Variables & Derived Type Definitions ****
C
      REAL(w2f__8) OpenAD_Symbol_129
      REAL(w2f__8) OpenAD_Symbol_131
      REAL(w2f__8) OpenAD_Symbol_133
      REAL(w2f__8) OpenAD_Symbol_223
      REAL(w2f__8) OpenAD_Symbol_224
      REAL(w2f__8) OpenAD_Symbol_225
      INTEGER(w2f__i8) OpenAD_Symbol_244
      INTEGER(w2f__i8) OpenAD_Symbol_245
      INTEGER(w2f__i8) OpenAD_Symbol_246
      INTEGER(w2f__i8) OpenAD_Symbol_247
      INTEGER(w2f__i8) OpenAD_Symbol_248
      INTEGER(w2f__i8) OpenAD_Symbol_249
      INTEGER(w2f__i8) OpenAD_Symbol_250
      INTEGER(w2f__i8) OpenAD_Symbol_251
      INTEGER(w2f__i8) OpenAD_Symbol_252
      INTEGER(w2f__i8) OpenAD_Symbol_253
      INTEGER(w2f__i8) OpenAD_Symbol_254
      INTEGER(w2f__i8) OpenAD_Symbol_255
      INTEGER(w2f__i8) OpenAD_Symbol_256
      INTEGER(w2f__i8) OpenAD_Symbol_257
      INTEGER(w2f__i8) OpenAD_Symbol_258
      INTEGER(w2f__i8) OpenAD_Symbol_259
      INTEGER(w2f__i8) OpenAD_Symbol_260
      INTEGER(w2f__i8) OpenAD_Symbol_261
      INTEGER(w2f__i8) OpenAD_Symbol_262
      INTEGER(w2f__i8) OpenAD_Symbol_263
      INTEGER(w2f__i8) OpenAD_Symbol_264
      INTEGER(w2f__i8) OpenAD_Symbol_265
      INTEGER(w2f__i8) OpenAD_Symbol_266
      INTEGER(w2f__i8) OpenAD_Symbol_267
      INTEGER(w2f__i8) OpenAD_Symbol_268
      INTEGER(w2f__i8) OpenAD_Symbol_269
      INTEGER(w2f__i8) OpenAD_Symbol_270
      INTEGER(w2f__i8) OpenAD_Symbol_271
      INTEGER(w2f__i8) OpenAD_Symbol_272
      INTEGER(w2f__i8) OpenAD_Symbol_273
      INTEGER(w2f__i8) OpenAD_Symbol_274
      INTEGER(w2f__i8) OpenAD_Symbol_275
      INTEGER(w2f__i8) OpenAD_Symbol_276
      INTEGER(w2f__i8) OpenAD_Symbol_277
      INTEGER(w2f__i8) OpenAD_Symbol_278
      INTEGER(w2f__i8) OpenAD_Symbol_279
      INTEGER(w2f__i8) OpenAD_Symbol_280
      INTEGER(w2f__i8) OpenAD_Symbol_281
      INTEGER(w2f__i8) OpenAD_Symbol_282
      INTEGER(w2f__i8) OpenAD_Symbol_283
      INTEGER(w2f__i8) OpenAD_Symbol_284
      INTEGER(w2f__i8) OpenAD_Symbol_285
C
C     **** Parameters and Result ****
C
      type(active) :: X(1 : 32)
      type(active) :: Y(1 : 4)
C
C     **** Local Variables and Functions ****
C
      type(active) :: BULKMOD(1 : 2, 1 : 2)
      EXTERNAL find_bulkmod
      INTEGER(w2f__i4) I
      INTEGER(w2f__i4) J
      INTEGER(w2f__i4) K
      INTEGER(w2f__i4) L
      type(active) :: LOCPRES(1 : 2, 1 : 2)
      INTEGER(w2f__i4) M
      type(active) :: SFLD(1 : 2, 1 : 2, 1 : 2, 1 : 2, 1 : 2)
      type(active) :: TFLD(1 : 2, 1 : 2, 1 : 2, 1 : 2, 1 : 2)
      INTEGER(w2f__i4) XCOUNT
      INTEGER(w2f__i8) OpenAD_Symbol_286
      INTEGER(w2f__i8) OpenAD_Symbol_391
      INTEGER(w2f__i8) OpenAD_Symbol_392
      INTEGER(w2f__i8) OpenAD_Symbol_393
      REAL(w2f__8) OpenAD_Symbol_394
      INTEGER(w2f__i8) OpenAD_Symbol_395
      INTEGER(w2f__i8) OpenAD_Symbol_396
      INTEGER(w2f__i8) OpenAD_Symbol_397
      INTEGER(w2f__i8) OpenAD_Symbol_398
      INTEGER(w2f__i8) OpenAD_Symbol_399
      INTEGER(w2f__i8) OpenAD_Symbol_400
      REAL(w2f__8) OpenAD_Symbol_401
      INTEGER(w2f__i8) OpenAD_Symbol_402
      INTEGER(w2f__i8) OpenAD_Symbol_403
      INTEGER(w2f__i8) OpenAD_Symbol_404
      INTEGER(w2f__i8) OpenAD_Symbol_405
      INTEGER(w2f__i8) OpenAD_Symbol_406
      INTEGER(w2f__i8) OpenAD_Symbol_407
      REAL(w2f__8) OpenAD_Symbol_408
      INTEGER(w2f__i8) OpenAD_Symbol_409
      INTEGER(w2f__i8) OpenAD_Symbol_410
      INTEGER(w2f__i8) OpenAD_Symbol_411
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(Y)
C
C     **** Statements ****
C


          ! checkpointing stacks and offsets
          integer :: cp_loop_variable_1,cp_loop_variable_2,
     +cp_loop_variable_3,cp_loop_variable_4,cp_loop_variable_5
          ! floats 'F'
          double precision, dimension(:), allocatable, save :: 
     +theArgFStack
          integer, save :: theArgFStackoffset=0, theArgFStackSize=0
          ! integers 'I'
          integer, dimension(:), allocatable, save :: 
     +theArgIStack
          integer, save :: theArgIStackoffset=0, theArgIStackSize=0
          ! booleans 'B'
          logical, dimension(:), allocatable, save :: 
     +theArgBStack
          integer, save :: theArgBStackoffset=0, theArgBStackSize=0
          ! strings 'S'
          character*(80), dimension(:), allocatable, save :: 
     +theArgSStack
          integer, save :: theArgSStackoffset=0, theArgSStackSize=0

          type(modeType) :: our_orig_mode

	  ! call external C function used in inlined code
          integer iaddr
          external iaddr

C          write(*,'(A,I6,A,I6,A,I5,A,I5)')
C     +"b:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
          if (our_rev_mode%arg_store) then 
C            print*, " arg_store  ", our_rev_mode
C store arguments
          end if 
          if (our_rev_mode%arg_restore) then
C            print*, " arg_restore", our_rev_mode
C restore arguments
          end if
          if (our_rev_mode%plain) then
C            print*, " plain      ", our_rev_mode
            our_orig_mode=our_rev_mode
            our_rev_mode%arg_store=.FALSE.
C original function
C$OPENAD XXX Template ad_template.f
      XCOUNT = 1
      DO I = 1, 2, 1
        DO J = 1, 2, 1
          LOCPRES(INT(I),INT(J))%v = (X(XCOUNT)%v*2.0D00)
          DO K = 1, 2, 1
            DO L = 1, 2, 1
              DO M = 1, 2, 1
                TFLD(INT(I),INT(J),INT(K),INT(L),INT(M))%v = (X(XCOUNT)%
     +v*3.0D00)
                SFLD(INT(I),INT(J),INT(K),INT(L),INT(M))%v = (X(XCOUNT)%
     +v*4.0D00)
                XCOUNT = XCOUNT + 1
              END DO
            END DO
          END DO
        END DO
      END DO
      CALL find_bulkmod(LOCPRES,TFLD,SFLD,BULKMOD)
      DO I = 1, 2, 1
        DO J = 1, 2, 1
          Y(INT(J+INT((I*2))+(-2)))%v = BULKMOD(I,J)%v
        END DO
      END DO
      
            our_rev_mode=our_orig_mode
          end if 
          if (our_rev_mode%tape) then
C            print*, " tape       ", our_rev_mode
            our_rev_mode%arg_store=.TRUE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.TRUE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.FALSE.
C taping
C$OPENAD XXX Template ad_template.f
      XCOUNT = 1
      OpenAD_Symbol_258 = 0_w2f__i8
      DO I = 1, 2, 1
        OpenAD_Symbol_259 = 0_w2f__i8
        DO J = 1, 2, 1
          LOCPRES(INT(I),INT(J))%v = (X(XCOUNT)%v*2.0D00)
          OpenAD_Symbol_129 = 2.0D00
          OpenAD_Symbol_223 = OpenAD_Symbol_129
          double_tape(double_tape_pointer) = OpenAD_Symbol_223
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = XCOUNT
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_260 = 0_w2f__i8
          DO K = 1, 2, 1
            OpenAD_Symbol_261 = 0_w2f__i8
            DO L = 1, 2, 1
              OpenAD_Symbol_262 = 0_w2f__i8
              DO M = 1, 2, 1
                TFLD(INT(I),INT(J),INT(K),INT(L),INT(M))%v = (X(XCOUNT)%
     +v*3.0D00)
                OpenAD_Symbol_131 = 3.0D00
                SFLD(INT(I),INT(J),INT(K),INT(L),INT(M))%v = (X(XCOUNT)%
     +v*4.0D00)
                OpenAD_Symbol_133 = 4.0D00
                OpenAD_Symbol_224 = OpenAD_Symbol_131
                OpenAD_Symbol_225 = OpenAD_Symbol_133
          double_tape(double_tape_pointer) = OpenAD_Symbol_224
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = XCOUNT
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = L
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = M
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_225
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = XCOUNT
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = L
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = M
          integer_tape_pointer = integer_tape_pointer+1
                XCOUNT = XCOUNT + 1
                OpenAD_Symbol_262 = (INT(OpenAD_Symbol_262) + INT( 1_w2f
     +__i8))
              END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_262
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_261 = (INT(OpenAD_Symbol_261) + INT( 1_w2f__
     +i8))
            END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_261
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_260 = (INT(OpenAD_Symbol_260) + INT(1_w2f__i8 
     +))
          END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_260
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_259 = (INT(OpenAD_Symbol_259) + INT(1_w2f__i8))
        END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_259
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_258 = (INT(OpenAD_Symbol_258) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_258
          integer_tape_pointer = integer_tape_pointer+1
      CALL find_bulkmod(LOCPRES,TFLD,SFLD,BULKMOD)
      OpenAD_Symbol_263 = 0_w2f__i8
      DO I = 1, 2, 1
        OpenAD_Symbol_264 = 0_w2f__i8
        DO J = 1, 2, 1
          Y(INT(J+INT((I*2))+(-2)))%v = BULKMOD(I,J)%v
          integer_tape(integer_tape_pointer) = I
          integer_tape_pointer = integer_tape_pointer+1
          integer_tape(integer_tape_pointer) = J
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_286 = (J + I * INT(2_w2f__i8) + INT((-2_w2f__i8 
     +)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_286
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_264 = (INT(OpenAD_Symbol_264) + INT(1_w2f__i8))
        END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_264
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_263 = (INT(OpenAD_Symbol_263) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_263
          integer_tape_pointer = integer_tape_pointer+1
      
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.TRUE.
          end if 
          if (our_rev_mode%adjoint) then
C            print*, " adjoint    ", our_rev_mode
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
C adjoint
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_244 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_245 = 1
      DO WHILE(INT(OpenAD_Symbol_245) .LE. INT(OpenAD_Symbol_244))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_246 = integer_tape(integer_tape_pointer)
        OpenAD_Symbol_247 = 1
        DO WHILE(INT(OpenAD_Symbol_247) .LE. INT(OpenAD_Symbol_246))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_409 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_410 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_411 = integer_tape(integer_tape_pointer)
          BULKMOD(INT(OpenAD_Symbol_411),INT(OpenAD_Symbol_410))%d = BUL
     +KMOD(INT(OpenAD_Symbol_411),INT(OpenAD_Symbol_410))%d+Y(INT(OpenAD
     +_Symbol_409))%d
          Y(INT(OpenAD_Symbol_409))%d = 0.0d0
          OpenAD_Symbol_247 = INT(OpenAD_Symbol_247) + 1
        END DO
        OpenAD_Symbol_245 = INT(OpenAD_Symbol_245) + 1
      END DO
      CALL find_bulkmod(LOCPRES,TFLD,SFLD,BULKMOD)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_248 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_249 = 1
      DO WHILE(INT(OpenAD_Symbol_249) .LE. INT(OpenAD_Symbol_248))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_250 = integer_tape(integer_tape_pointer)
        OpenAD_Symbol_251 = 1
        DO WHILE(INT(OpenAD_Symbol_251) .LE. INT(OpenAD_Symbol_250))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_252 = integer_tape(integer_tape_pointer)
          OpenAD_Symbol_253 = 1
          DO WHILE(INT(OpenAD_Symbol_253) .LE. INT(OpenAD_Symbol_252))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_254 = integer_tape(integer_tape_pointer)
            OpenAD_Symbol_255 = 1
            DO WHILE(INT(OpenAD_Symbol_255) .LE. INT(OpenAD_Symbol_254) 
     +)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_256 = integer_tape(integer_tape_pointer)
              OpenAD_Symbol_257 = 1
              DO WHILE(INT(OpenAD_Symbol_257) .LE. INT( OpenAD_Symbol_25
     +6))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_395 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_396 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_397 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_398 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_399 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_400 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_401 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_400))%d = X(INT(OpenAD_Symbol_400))%d+SFLD
     +(INT(OpenAD_Symbol_399),INT(OpenAD_Symbol_398),INT(OpenAD_Symbol_3
     +97),INT(OpenAD_Symbol_396),INT(OpenAD_Symbol_395))%d*OpenAD_Symbol
     +_401
          SFLD(INT(OpenAD_Symbol_399),INT(OpenAD_Symbol_398),INT(OpenAD_
     +Symbol_397),INT(OpenAD_Symbol_396),INT(OpenAD_Symbol_395))%d = 0.0
     +d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_402 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_403 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_404 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_405 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_406 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_407 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_408 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_407))%d = X(INT(OpenAD_Symbol_407))%d+TFLD
     +(INT(OpenAD_Symbol_406),INT(OpenAD_Symbol_405),INT(OpenAD_Symbol_4
     +04),INT(OpenAD_Symbol_403),INT(OpenAD_Symbol_402))%d*OpenAD_Symbol
     +_408
          TFLD(INT(OpenAD_Symbol_406),INT(OpenAD_Symbol_405),INT(OpenAD_
     +Symbol_404),INT(OpenAD_Symbol_403),INT(OpenAD_Symbol_402))%d = 0.0
     +d0
                OpenAD_Symbol_257 = INT(OpenAD_Symbol_257) + 1
              END DO
              OpenAD_Symbol_255 = INT(OpenAD_Symbol_255) + 1
            END DO
            OpenAD_Symbol_253 = INT(OpenAD_Symbol_253) + 1
          END DO
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_391 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_392 = integer_tape(integer_tape_pointer)
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_393 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_394 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_393))%d = X(INT(OpenAD_Symbol_393))%d+LOCP
     +RES(INT(OpenAD_Symbol_392),INT(OpenAD_Symbol_391))%d*OpenAD_Symbol
     +_394
          LOCPRES(INT(OpenAD_Symbol_392),INT(OpenAD_Symbol_391))%d = 0.0
     +d0
          OpenAD_Symbol_251 = INT(OpenAD_Symbol_251) + 1
        END DO
        OpenAD_Symbol_249 = INT(OpenAD_Symbol_249) + 1
      END DO
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
          end if 
C          write(*,'(A,I6,A,I6,A,I5,A,I5)')
C     +"a:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
        end subroutine head
