
C ========== begin copyright notice ==============
C This file is part of 
C ---------------
C xaifBooster
C ---------------
C Distributed under the BSD license as follows:
C Copyright (c) 2005, The University of Chicago
C All rights reserved.
C
C Redistribution and use in source and binary forms, 
C with or without modification, are permitted provided that the following conditions are met:
C
C    - Redistributions of source code must retain the above copyright notice, 
C      this list of conditions and the following disclaimer.
C    - Redistributions in binary form must reproduce the above copyright notice, 
C      this list of conditions and the following disclaimer in the documentation 
C      and/or other materials provided with the distribution.
C    - Neither the name of The University of Chicago nor the names of its contributors 
C      may be used to endorse or promote products derived from this software without 
C      specific prior written permission.
C
C THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY 
C EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
C OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
C SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
C INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
C PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
C INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
C LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
C OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
C 
C General Information:
C xaifBooster is intended for the transformation of 
C numerical programs represented as xml files according 
C to the XAIF schema. It is part of the OpenAD framework. 
C The main application is automatic 
C differentiation, i.e. the generation of code for 
C the computation of derivatives. 
C The following people are the principal authors of the 
C current version: 
C 	Uwe Naumann
C	Jean Utke
C Additional contributors are: 
C	Andrew Lyons
C	Peter Fine
C
C For more details about xaifBooster and its use in OpenAD please visit:
C   http://www.mcs.anl.gov/openad
C
C This work is partially supported by:
C 	NSF-ITR grant OCE-0205590
C ========== end copyright notice ==============
       subroutine head(NX,NY,X,FVEC,R)
          use OpenAD_dct
          use OpenAD_tape
          use OpenAD_rev
          use OpenAD_checkpoints

          ! original arguments get inserted before version
          ! and declared here together with all local variables
          ! generated by xaifBooster

      use w2f__types
      use active_module
      IMPLICIT NONE
C
C     **** Global Variables & Derived Type Definitions ****
C
      REAL(w2f__8) OpenAD_Symbol_0
      REAL(w2f__8) OpenAD_Symbol_1
      REAL(w2f__8) OpenAD_Symbol_10
      REAL(w2f__8) OpenAD_Symbol_100
      REAL(w2f__8) OpenAD_Symbol_101
      REAL(w2f__8) OpenAD_Symbol_103
      REAL(w2f__8) OpenAD_Symbol_104
      REAL(w2f__8) OpenAD_Symbol_106
      REAL(w2f__8) OpenAD_Symbol_107
      REAL(w2f__8) OpenAD_Symbol_108
      REAL(w2f__8) OpenAD_Symbol_109
      REAL(w2f__8) OpenAD_Symbol_11
      REAL(w2f__8) OpenAD_Symbol_110
      REAL(w2f__8) OpenAD_Symbol_112
      REAL(w2f__8) OpenAD_Symbol_113
      REAL(w2f__8) OpenAD_Symbol_114
      REAL(w2f__8) OpenAD_Symbol_115
      REAL(w2f__8) OpenAD_Symbol_116
      REAL(w2f__8) OpenAD_Symbol_117
      REAL(w2f__8) OpenAD_Symbol_119
      REAL(w2f__8) OpenAD_Symbol_12
      REAL(w2f__8) OpenAD_Symbol_120
      REAL(w2f__8) OpenAD_Symbol_121
      REAL(w2f__8) OpenAD_Symbol_122
      REAL(w2f__8) OpenAD_Symbol_123
      REAL(w2f__8) OpenAD_Symbol_125
      REAL(w2f__8) OpenAD_Symbol_126
      REAL(w2f__8) OpenAD_Symbol_128
      REAL(w2f__8) OpenAD_Symbol_129
      REAL(w2f__8) OpenAD_Symbol_13
      REAL(w2f__8) OpenAD_Symbol_130
      REAL(w2f__8) OpenAD_Symbol_131
      REAL(w2f__8) OpenAD_Symbol_132
      REAL(w2f__8) OpenAD_Symbol_134
      REAL(w2f__8) OpenAD_Symbol_136
      REAL(w2f__8) OpenAD_Symbol_137
      REAL(w2f__8) OpenAD_Symbol_138
      REAL(w2f__8) OpenAD_Symbol_139
      REAL(w2f__8) OpenAD_Symbol_14
      REAL(w2f__8) OpenAD_Symbol_140
      REAL(w2f__8) OpenAD_Symbol_141
      REAL(w2f__8) OpenAD_Symbol_143
      REAL(w2f__8) OpenAD_Symbol_144
      REAL(w2f__8) OpenAD_Symbol_145
      REAL(w2f__8) OpenAD_Symbol_146
      REAL(w2f__8) OpenAD_Symbol_147
      REAL(w2f__8) OpenAD_Symbol_148
      REAL(w2f__8) OpenAD_Symbol_149
      REAL(w2f__8) OpenAD_Symbol_15
      REAL(w2f__8) OpenAD_Symbol_150
      REAL(w2f__8) OpenAD_Symbol_152
      REAL(w2f__8) OpenAD_Symbol_153
      REAL(w2f__8) OpenAD_Symbol_154
      REAL(w2f__8) OpenAD_Symbol_155
      REAL(w2f__8) OpenAD_Symbol_156
      REAL(w2f__8) OpenAD_Symbol_157
      REAL(w2f__8) OpenAD_Symbol_159
      REAL(w2f__8) OpenAD_Symbol_160
      REAL(w2f__8) OpenAD_Symbol_162
      REAL(w2f__8) OpenAD_Symbol_163
      REAL(w2f__8) OpenAD_Symbol_164
      REAL(w2f__8) OpenAD_Symbol_165
      REAL(w2f__8) OpenAD_Symbol_166
      REAL(w2f__8) OpenAD_Symbol_167
      REAL(w2f__8) OpenAD_Symbol_168
      REAL(w2f__8) OpenAD_Symbol_169
      REAL(w2f__8) OpenAD_Symbol_17
      REAL(w2f__8) OpenAD_Symbol_170
      REAL(w2f__8) OpenAD_Symbol_171
      REAL(w2f__8) OpenAD_Symbol_172
      REAL(w2f__8) OpenAD_Symbol_173
      REAL(w2f__8) OpenAD_Symbol_174
      REAL(w2f__8) OpenAD_Symbol_175
      REAL(w2f__8) OpenAD_Symbol_176
      REAL(w2f__8) OpenAD_Symbol_177
      REAL(w2f__8) OpenAD_Symbol_178
      REAL(w2f__8) OpenAD_Symbol_179
      REAL(w2f__8) OpenAD_Symbol_18
      REAL(w2f__8) OpenAD_Symbol_180
      REAL(w2f__8) OpenAD_Symbol_181
      REAL(w2f__8) OpenAD_Symbol_182
      REAL(w2f__8) OpenAD_Symbol_183
      REAL(w2f__8) OpenAD_Symbol_184
      REAL(w2f__8) OpenAD_Symbol_185
      REAL(w2f__8) OpenAD_Symbol_186
      REAL(w2f__8) OpenAD_Symbol_187
      REAL(w2f__8) OpenAD_Symbol_188
      REAL(w2f__8) OpenAD_Symbol_189
      REAL(w2f__8) OpenAD_Symbol_19
      REAL(w2f__8) OpenAD_Symbol_190
      REAL(w2f__8) OpenAD_Symbol_191
      REAL(w2f__8) OpenAD_Symbol_192
      REAL(w2f__8) OpenAD_Symbol_193
      REAL(w2f__8) OpenAD_Symbol_194
      REAL(w2f__8) OpenAD_Symbol_195
      REAL(w2f__8) OpenAD_Symbol_196
      REAL(w2f__8) OpenAD_Symbol_197
      REAL(w2f__8) OpenAD_Symbol_198
      REAL(w2f__8) OpenAD_Symbol_199
      REAL(w2f__8) OpenAD_Symbol_2
      REAL(w2f__8) OpenAD_Symbol_20
      REAL(w2f__8) OpenAD_Symbol_200
      REAL(w2f__8) OpenAD_Symbol_201
      REAL(w2f__8) OpenAD_Symbol_202
      REAL(w2f__8) OpenAD_Symbol_203
      REAL(w2f__8) OpenAD_Symbol_204
      REAL(w2f__8) OpenAD_Symbol_205
      REAL(w2f__8) OpenAD_Symbol_206
      REAL(w2f__8) OpenAD_Symbol_207
      REAL(w2f__8) OpenAD_Symbol_208
      REAL(w2f__8) OpenAD_Symbol_209
      REAL(w2f__8) OpenAD_Symbol_21
      REAL(w2f__8) OpenAD_Symbol_210
      REAL(w2f__8) OpenAD_Symbol_211
      REAL(w2f__8) OpenAD_Symbol_212
      REAL(w2f__8) OpenAD_Symbol_213
      REAL(w2f__8) OpenAD_Symbol_214
      REAL(w2f__8) OpenAD_Symbol_215
      REAL(w2f__8) OpenAD_Symbol_216
      REAL(w2f__8) OpenAD_Symbol_217
      REAL(w2f__8) OpenAD_Symbol_218
      REAL(w2f__8) OpenAD_Symbol_219
      REAL(w2f__8) OpenAD_Symbol_220
      REAL(w2f__8) OpenAD_Symbol_221
      REAL(w2f__8) OpenAD_Symbol_222
      REAL(w2f__8) OpenAD_Symbol_223
      REAL(w2f__8) OpenAD_Symbol_224
      REAL(w2f__8) OpenAD_Symbol_225
      REAL(w2f__8) OpenAD_Symbol_226
      REAL(w2f__8) OpenAD_Symbol_227
      REAL(w2f__8) OpenAD_Symbol_228
      REAL(w2f__8) OpenAD_Symbol_229
      REAL(w2f__8) OpenAD_Symbol_23
      REAL(w2f__8) OpenAD_Symbol_230
      REAL(w2f__8) OpenAD_Symbol_231
      REAL(w2f__8) OpenAD_Symbol_232
      REAL(w2f__8) OpenAD_Symbol_233
      REAL(w2f__8) OpenAD_Symbol_234
      REAL(w2f__8) OpenAD_Symbol_235
      REAL(w2f__8) OpenAD_Symbol_236
      REAL(w2f__8) OpenAD_Symbol_237
      REAL(w2f__8) OpenAD_Symbol_238
      REAL(w2f__8) OpenAD_Symbol_239
      REAL(w2f__8) OpenAD_Symbol_24
      REAL(w2f__8) OpenAD_Symbol_240
      REAL(w2f__8) OpenAD_Symbol_241
      REAL(w2f__8) OpenAD_Symbol_242
      REAL(w2f__8) OpenAD_Symbol_243
      REAL(w2f__8) OpenAD_Symbol_244
      REAL(w2f__8) OpenAD_Symbol_245
      REAL(w2f__8) OpenAD_Symbol_246
      REAL(w2f__8) OpenAD_Symbol_247
      REAL(w2f__8) OpenAD_Symbol_248
      REAL(w2f__8) OpenAD_Symbol_249
      REAL(w2f__8) OpenAD_Symbol_250
      REAL(w2f__8) OpenAD_Symbol_251
      REAL(w2f__8) OpenAD_Symbol_252
      REAL(w2f__8) OpenAD_Symbol_253
      REAL(w2f__8) OpenAD_Symbol_254
      REAL(w2f__8) OpenAD_Symbol_255
      REAL(w2f__8) OpenAD_Symbol_256
      REAL(w2f__8) OpenAD_Symbol_257
      REAL(w2f__8) OpenAD_Symbol_258
      REAL(w2f__8) OpenAD_Symbol_259
      REAL(w2f__8) OpenAD_Symbol_26
      REAL(w2f__8) OpenAD_Symbol_260
      REAL(w2f__8) OpenAD_Symbol_261
      REAL(w2f__8) OpenAD_Symbol_262
      REAL(w2f__8) OpenAD_Symbol_263
      REAL(w2f__8) OpenAD_Symbol_264
      REAL(w2f__8) OpenAD_Symbol_265
      REAL(w2f__8) OpenAD_Symbol_266
      REAL(w2f__8) OpenAD_Symbol_267
      type(active) :: OpenAD_Symbol_268
      INTEGER(w2f__i8) OpenAD_Symbol_269
      REAL(w2f__8) OpenAD_Symbol_27
      INTEGER(w2f__i8) OpenAD_Symbol_270
      INTEGER(w2f__i8) OpenAD_Symbol_271
      INTEGER(w2f__i8) OpenAD_Symbol_272
      INTEGER(w2f__i8) OpenAD_Symbol_273
      INTEGER(w2f__i8) OpenAD_Symbol_274
      INTEGER(w2f__i8) OpenAD_Symbol_275
      INTEGER(w2f__i8) OpenAD_Symbol_276
      INTEGER(w2f__i8) OpenAD_Symbol_277
      INTEGER(w2f__i8) OpenAD_Symbol_278
      INTEGER(w2f__i8) OpenAD_Symbol_279
      REAL(w2f__8) OpenAD_Symbol_28
      INTEGER(w2f__i8) OpenAD_Symbol_280
      INTEGER(w2f__i8) OpenAD_Symbol_281
      INTEGER(w2f__i8) OpenAD_Symbol_282
      INTEGER(w2f__i8) OpenAD_Symbol_283
      INTEGER(w2f__i8) OpenAD_Symbol_284
      INTEGER(w2f__i8) OpenAD_Symbol_285
      INTEGER(w2f__i8) OpenAD_Symbol_286
      INTEGER(w2f__i8) OpenAD_Symbol_287
      INTEGER(w2f__i8) OpenAD_Symbol_288
      INTEGER(w2f__i8) OpenAD_Symbol_289
      REAL(w2f__8) OpenAD_Symbol_29
      INTEGER(w2f__i8) OpenAD_Symbol_290
      INTEGER(w2f__i8) OpenAD_Symbol_291
      INTEGER(w2f__i8) OpenAD_Symbol_292
      INTEGER(w2f__i8) OpenAD_Symbol_293
      INTEGER(w2f__i8) OpenAD_Symbol_294
      INTEGER(w2f__i8) OpenAD_Symbol_295
      INTEGER(w2f__i8) OpenAD_Symbol_296
      INTEGER(w2f__i8) OpenAD_Symbol_297
      INTEGER(w2f__i8) OpenAD_Symbol_298
      INTEGER(w2f__i8) OpenAD_Symbol_299
      REAL(w2f__8) OpenAD_Symbol_30
      INTEGER(w2f__i8) OpenAD_Symbol_300
      INTEGER(w2f__i8) OpenAD_Symbol_301
      INTEGER(w2f__i8) OpenAD_Symbol_302
      INTEGER(w2f__i8) OpenAD_Symbol_303
      INTEGER(w2f__i8) OpenAD_Symbol_304
      INTEGER(w2f__i8) OpenAD_Symbol_305
      INTEGER(w2f__i8) OpenAD_Symbol_306
      INTEGER(w2f__i8) OpenAD_Symbol_307
      INTEGER(w2f__i8) OpenAD_Symbol_308
      INTEGER(w2f__i8) OpenAD_Symbol_309
      INTEGER(w2f__i8) OpenAD_Symbol_310
      INTEGER(w2f__i8) OpenAD_Symbol_311
      INTEGER(w2f__i8) OpenAD_Symbol_312
      INTEGER(w2f__i8) OpenAD_Symbol_313
      INTEGER(w2f__i8) OpenAD_Symbol_314
      INTEGER(w2f__i8) OpenAD_Symbol_315
      INTEGER(w2f__i8) OpenAD_Symbol_316
      INTEGER(w2f__i8) OpenAD_Symbol_317
      INTEGER(w2f__i8) OpenAD_Symbol_318
      INTEGER(w2f__i8) OpenAD_Symbol_319
      REAL(w2f__8) OpenAD_Symbol_32
      INTEGER(w2f__i8) OpenAD_Symbol_320
      INTEGER(w2f__i8) OpenAD_Symbol_321
      INTEGER(w2f__i8) OpenAD_Symbol_322
      INTEGER(w2f__i8) OpenAD_Symbol_323
      INTEGER(w2f__i8) OpenAD_Symbol_324
      INTEGER(w2f__i8) OpenAD_Symbol_325
      INTEGER(w2f__i8) OpenAD_Symbol_326
      INTEGER(w2f__i8) OpenAD_Symbol_327
      INTEGER(w2f__i8) OpenAD_Symbol_328
      INTEGER(w2f__i8) OpenAD_Symbol_329
      REAL(w2f__8) OpenAD_Symbol_33
      INTEGER(w2f__i8) OpenAD_Symbol_330
      INTEGER(w2f__i8) OpenAD_Symbol_331
      INTEGER(w2f__i8) OpenAD_Symbol_332
      INTEGER(w2f__i8) OpenAD_Symbol_333
      INTEGER(w2f__i8) OpenAD_Symbol_334
      INTEGER(w2f__i8) OpenAD_Symbol_335
      INTEGER(w2f__i8) OpenAD_Symbol_336
      INTEGER(w2f__i8) OpenAD_Symbol_337
      INTEGER(w2f__i8) OpenAD_Symbol_338
      INTEGER(w2f__i8) OpenAD_Symbol_339
      REAL(w2f__8) OpenAD_Symbol_34
      INTEGER(w2f__i8) OpenAD_Symbol_340
      INTEGER(w2f__i8) OpenAD_Symbol_341
      INTEGER(w2f__i8) OpenAD_Symbol_342
      INTEGER(w2f__i8) OpenAD_Symbol_343
      INTEGER(w2f__i8) OpenAD_Symbol_344
      INTEGER(w2f__i8) OpenAD_Symbol_345
      INTEGER(w2f__i8) OpenAD_Symbol_346
      INTEGER(w2f__i8) OpenAD_Symbol_347
      INTEGER(w2f__i8) OpenAD_Symbol_348
      INTEGER(w2f__i8) OpenAD_Symbol_349
      REAL(w2f__8) OpenAD_Symbol_35
      INTEGER(w2f__i8) OpenAD_Symbol_350
      INTEGER(w2f__i8) OpenAD_Symbol_351
      INTEGER(w2f__i8) OpenAD_Symbol_352
      INTEGER(w2f__i8) OpenAD_Symbol_353
      INTEGER(w2f__i8) OpenAD_Symbol_354
      INTEGER(w2f__i8) OpenAD_Symbol_355
      INTEGER(w2f__i8) OpenAD_Symbol_356
      INTEGER(w2f__i8) OpenAD_Symbol_357
      INTEGER(w2f__i8) OpenAD_Symbol_358
      REAL(w2f__8) OpenAD_Symbol_37
      REAL(w2f__8) OpenAD_Symbol_38
      REAL(w2f__8) OpenAD_Symbol_39
      REAL(w2f__8) OpenAD_Symbol_4
      REAL(w2f__8) OpenAD_Symbol_40
      REAL(w2f__8) OpenAD_Symbol_41
      REAL(w2f__8) OpenAD_Symbol_43
      REAL(w2f__8) OpenAD_Symbol_44
      REAL(w2f__8) OpenAD_Symbol_46
      REAL(w2f__8) OpenAD_Symbol_47
      REAL(w2f__8) OpenAD_Symbol_48
      REAL(w2f__8) OpenAD_Symbol_49
      REAL(w2f__8) OpenAD_Symbol_5
      REAL(w2f__8) OpenAD_Symbol_50
      REAL(w2f__8) OpenAD_Symbol_52
      REAL(w2f__8) OpenAD_Symbol_53
      REAL(w2f__8) OpenAD_Symbol_54
      REAL(w2f__8) OpenAD_Symbol_55
      REAL(w2f__8) OpenAD_Symbol_57
      REAL(w2f__8) OpenAD_Symbol_58
      REAL(w2f__8) OpenAD_Symbol_59
      REAL(w2f__8) OpenAD_Symbol_6
      REAL(w2f__8) OpenAD_Symbol_60
      REAL(w2f__8) OpenAD_Symbol_61
      REAL(w2f__8) OpenAD_Symbol_63
      REAL(w2f__8) OpenAD_Symbol_64
      REAL(w2f__8) OpenAD_Symbol_66
      REAL(w2f__8) OpenAD_Symbol_67
      REAL(w2f__8) OpenAD_Symbol_68
      REAL(w2f__8) OpenAD_Symbol_69
      REAL(w2f__8) OpenAD_Symbol_7
      REAL(w2f__8) OpenAD_Symbol_70
      REAL(w2f__8) OpenAD_Symbol_72
      REAL(w2f__8) OpenAD_Symbol_73
      REAL(w2f__8) OpenAD_Symbol_74
      REAL(w2f__8) OpenAD_Symbol_75
      REAL(w2f__8) OpenAD_Symbol_77
      REAL(w2f__8) OpenAD_Symbol_78
      REAL(w2f__8) OpenAD_Symbol_79
      REAL(w2f__8) OpenAD_Symbol_8
      REAL(w2f__8) OpenAD_Symbol_80
      REAL(w2f__8) OpenAD_Symbol_81
      REAL(w2f__8) OpenAD_Symbol_83
      REAL(w2f__8) OpenAD_Symbol_84
      REAL(w2f__8) OpenAD_Symbol_86
      REAL(w2f__8) OpenAD_Symbol_87
      REAL(w2f__8) OpenAD_Symbol_88
      REAL(w2f__8) OpenAD_Symbol_89
      REAL(w2f__8) OpenAD_Symbol_90
      REAL(w2f__8) OpenAD_Symbol_92
      REAL(w2f__8) OpenAD_Symbol_93
      REAL(w2f__8) OpenAD_Symbol_94
      REAL(w2f__8) OpenAD_Symbol_95
      REAL(w2f__8) OpenAD_Symbol_97
      REAL(w2f__8) OpenAD_Symbol_98
      REAL(w2f__8) OpenAD_Symbol_99
C
C     **** Parameters and Result ****
C
      INTEGER(w2f__i4) NX
      INTEGER(w2f__i4) NY
      type(active) :: X(1 : INT((NX * NY)))
      type(active) :: FVEC(1 : INT((NX * NY)))
      REAL(w2f__8) R
C
C     **** Local Variables and Functions ****
C
      INTEGER(w2f__i8) t__1
      INTEGER(w2f__i8) t__2
      type(active) :: DPDX
      type(active) :: DPDY
      REAL(w2f__8) FOUR
      PARAMETER ( FOUR = 4.0D00)
      REAL(w2f__8) HX
      REAL(w2f__8) HX2
      REAL(w2f__8) HY
      REAL(w2f__8) HY2
      INTEGER(w2f__i4) I
      INTEGER(w2f__i4) J
      INTEGER(w2f__i4) K
      INTEGER(w2f__i4) N
      REAL(w2f__8) NXP1
      REAL(w2f__8) NYP1
      REAL(w2f__8) ONE
      PARAMETER ( ONE = 1.0D00)
      type(active) :: P
      type(active) :: PB
      type(active) :: PBB
      type(active) :: PBL
      type(active) :: PBLAP
      type(active) :: PBR
      type(active) :: PL
      type(active) :: PLAP
      type(active) :: PLL
      type(active) :: PLLAP
      type(active) :: PR
      type(active) :: PRLAP
      type(active) :: PRR
      type(active) :: PT
      type(active) :: PTL
      type(active) :: PTLAP
      type(active) :: PTR
      type(active) :: PTT
      REAL(w2f__8) THREE
      PARAMETER ( THREE = 3.0D00)
      REAL(w2f__8) TWO
      PARAMETER ( TWO = 2.0D00)
      REAL(w2f__8) ZERO
      PARAMETER ( ZERO = 0.0D00)
      INTEGER(w2f__i4) t__3
      INTEGER(w2f__i4) t__4
      INTEGER(w2f__i4) t__5
      INTEGER(w2f__i8) OpenAD_Symbol_359
      INTEGER(w2f__i8) OpenAD_Symbol_360
      INTEGER(w2f__i8) OpenAD_Symbol_361
      INTEGER(w2f__i8) OpenAD_Symbol_362
      INTEGER(w2f__i8) OpenAD_Symbol_363
      INTEGER(w2f__i8) OpenAD_Symbol_364
      INTEGER(w2f__i8) OpenAD_Symbol_365
      INTEGER(w2f__i8) OpenAD_Symbol_366
      INTEGER(w2f__i8) OpenAD_Symbol_367
      INTEGER(w2f__i8) OpenAD_Symbol_368
      INTEGER(w2f__i8) OpenAD_Symbol_369
      INTEGER(w2f__i8) OpenAD_Symbol_370
      INTEGER(w2f__i8) OpenAD_Symbol_371
      INTEGER(w2f__i8) OpenAD_Symbol_372
      INTEGER(w2f__i8) OpenAD_Symbol_373
      INTEGER(w2f__i8) OpenAD_Symbol_374
      INTEGER(w2f__i8) OpenAD_Symbol_375
      INTEGER(w2f__i8) OpenAD_Symbol_376
      INTEGER(w2f__i8) OpenAD_Symbol_377
      INTEGER(w2f__i8) OpenAD_Symbol_378
      INTEGER(w2f__i8) OpenAD_Symbol_379
      INTEGER(w2f__i8) OpenAD_Symbol_380
      REAL(w2f__8) OpenAD_Symbol_381
      INTEGER(w2f__i8) OpenAD_Symbol_382
      REAL(w2f__8) OpenAD_Symbol_383
      INTEGER(w2f__i8) OpenAD_Symbol_384
      REAL(w2f__8) OpenAD_Symbol_385
      INTEGER(w2f__i8) OpenAD_Symbol_386
      REAL(w2f__8) OpenAD_Symbol_387
      INTEGER(w2f__i8) OpenAD_Symbol_388
      REAL(w2f__8) OpenAD_Symbol_389
      INTEGER(w2f__i8) OpenAD_Symbol_390
      REAL(w2f__8) OpenAD_Symbol_391
      INTEGER(w2f__i8) OpenAD_Symbol_392
      REAL(w2f__8) OpenAD_Symbol_393
      INTEGER(w2f__i8) OpenAD_Symbol_394
      REAL(w2f__8) OpenAD_Symbol_395
      INTEGER(w2f__i8) OpenAD_Symbol_396
      REAL(w2f__8) OpenAD_Symbol_397
      INTEGER(w2f__i8) OpenAD_Symbol_398
      REAL(w2f__8) OpenAD_Symbol_399
      INTEGER(w2f__i8) OpenAD_Symbol_400
      REAL(w2f__8) OpenAD_Symbol_401
      INTEGER(w2f__i8) OpenAD_Symbol_402
      REAL(w2f__8) OpenAD_Symbol_403
      INTEGER(w2f__i8) OpenAD_Symbol_404
      REAL(w2f__8) OpenAD_Symbol_405
      INTEGER(w2f__i8) OpenAD_Symbol_406
      REAL(w2f__8) OpenAD_Symbol_407
      INTEGER(w2f__i8) OpenAD_Symbol_408
      REAL(w2f__8) OpenAD_Symbol_409
      INTEGER(w2f__i8) OpenAD_Symbol_410
      REAL(w2f__8) OpenAD_Symbol_411
      INTEGER(w2f__i8) OpenAD_Symbol_412
      REAL(w2f__8) OpenAD_Symbol_413
      INTEGER(w2f__i8) OpenAD_Symbol_414
      REAL(w2f__8) OpenAD_Symbol_415
      INTEGER(w2f__i8) OpenAD_Symbol_416
      REAL(w2f__8) OpenAD_Symbol_417
      INTEGER(w2f__i8) OpenAD_Symbol_418
      REAL(w2f__8) OpenAD_Symbol_419
      INTEGER(w2f__i8) OpenAD_Symbol_420
      REAL(w2f__8) OpenAD_Symbol_421
      INTEGER(w2f__i8) OpenAD_Symbol_422
      REAL(w2f__8) OpenAD_Symbol_423
      INTEGER(w2f__i8) OpenAD_Symbol_424
      REAL(w2f__8) OpenAD_Symbol_425
      INTEGER(w2f__i8) OpenAD_Symbol_426
      REAL(w2f__8) OpenAD_Symbol_427
      INTEGER(w2f__i8) OpenAD_Symbol_428
      REAL(w2f__8) OpenAD_Symbol_429
      INTEGER(w2f__i8) OpenAD_Symbol_430
      REAL(w2f__8) OpenAD_Symbol_431
      INTEGER(w2f__i8) OpenAD_Symbol_432
      REAL(w2f__8) OpenAD_Symbol_433
      INTEGER(w2f__i8) OpenAD_Symbol_434
      REAL(w2f__8) OpenAD_Symbol_435
      INTEGER(w2f__i8) OpenAD_Symbol_436
      REAL(w2f__8) OpenAD_Symbol_437
      INTEGER(w2f__i8) OpenAD_Symbol_438
      REAL(w2f__8) OpenAD_Symbol_439
      INTEGER(w2f__i8) OpenAD_Symbol_440
      REAL(w2f__8) OpenAD_Symbol_441
      INTEGER(w2f__i8) OpenAD_Symbol_442
      REAL(w2f__8) OpenAD_Symbol_443
      INTEGER(w2f__i8) OpenAD_Symbol_444
      REAL(w2f__8) OpenAD_Symbol_445
      INTEGER(w2f__i8) OpenAD_Symbol_446
      REAL(w2f__8) OpenAD_Symbol_447
      INTEGER(w2f__i8) OpenAD_Symbol_448
      INTEGER(w2f__i8) OpenAD_Symbol_449
      REAL(w2f__8) OpenAD_Symbol_450
      INTEGER(w2f__i8) OpenAD_Symbol_451
      INTEGER(w2f__i8) OpenAD_Symbol_452
      INTEGER(w2f__i8) OpenAD_Symbol_453
      INTEGER(w2f__i8) OpenAD_Symbol_454
      INTEGER(w2f__i8) OpenAD_Symbol_455
      INTEGER(w2f__i8) OpenAD_Symbol_456
      INTEGER(w2f__i8) OpenAD_Symbol_457
      INTEGER(w2f__i8) OpenAD_Symbol_458
      INTEGER(w2f__i8) OpenAD_Symbol_459
      INTEGER(w2f__i8) OpenAD_Symbol_460
      INTEGER(w2f__i8) OpenAD_Symbol_461
      INTEGER(w2f__i8) OpenAD_Symbol_462
      INTEGER(w2f__i8) OpenAD_Symbol_463
      INTEGER(w2f__i8) OpenAD_Symbol_464
      INTEGER(w2f__i8) OpenAD_Symbol_465
      REAL(w2f__8) OpenAD_Symbol_466
      INTEGER(w2f__i8) OpenAD_Symbol_467
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(FVEC)
C
C     **** Statements ****
C


          ! checkpointing stacks and offsets
          integer :: cp_loop_variable_1,cp_loop_variable_2,
     +cp_loop_variable_3,cp_loop_variable_4,cp_loop_variable_5
          ! floats 'F'
          double precision, dimension(:), allocatable, save :: 
     +theArgFStack
          integer, save :: theArgFStackoffset=0, theArgFStackSize=0
          ! integers 'I'
          integer, dimension(:), allocatable, save :: 
     +theArgIStack
          integer, save :: theArgIStackoffset=0, theArgIStackSize=0
          ! booleans 'B'
          logical, dimension(:), allocatable, save :: 
     +theArgBStack
          integer, save :: theArgBStackoffset=0, theArgBStackSize=0
          ! strings 'S'
          character*(80), dimension(:), allocatable, save :: 
     +theArgSStack
          integer, save :: theArgSStackoffset=0, theArgSStackSize=0

          type(modeType) :: our_orig_mode

	  ! call external C function used in inlined code
          integer iaddr
          external iaddr

C          write(*,'(A,I6,A,I6,A,I5,A,I5)')
C     +"b:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
          if (our_rev_mode%arg_store) then 
C            print*, " arg_store  ", our_rev_mode
C store arguments
          end if 
          if (our_rev_mode%arg_restore) then
C            print*, " arg_restore", our_rev_mode
C restore arguments
          end if
          if (our_rev_mode%plain) then
C            print*, " plain      ", our_rev_mode
            our_orig_mode=our_rev_mode
            our_rev_mode%arg_store=.FALSE.
C original function
C$OPENAD XXX Template ad_template.f
      t__1 = INT(NX * NY)
      t__2 = MAX(INT(NX * NY), 0_w2f__i8)
      N = NX * NY
      NXP1 = (NX + INT(1_w2f__i8))
      NYP1 = (NY + INT(1_w2f__i8))
      HX = (1.0D00 / NXP1)
      HY = (1.0D00 / NYP1)
      HY2 = (HY * HY)
      HX2 = (HX * HX)
      t__3 = NY
      DO I = 1, NY, 1
        t__4 = NX
        DO J = 1, NX, 1
          K = J + NX *(I +(-1))
          IF((I .eq. INT(1_w2f__i8)) .OR.(J .eq. INT(1_w2f__i8))) THEN
            PBL%v = 0.0D00
          ELSE
            PBL%v = X(K-NX+(-1))%v
          ENDIF
          IF(I .eq. INT(1_w2f__i8)) THEN
            PB%v = 0.0D00
            PBB%v = X(K)%v
          ELSE
            IF(I .eq. INT(2_w2f__i8)) THEN
              PB%v = X(K-NX)%v
              PBB%v = 0.0D00
            ELSE
              PB%v = X(K-NX)%v
              PBB%v = X(K-NX*2)%v
            ENDIF
          ENDIF
          IF((NX .eq. J) .OR.(I .eq. INT(1_w2f__i8))) THEN
            PBR%v = 0.0D00
          ELSE
            PBR%v = X(K-NX+1)%v
          ENDIF
          IF(J .eq. INT(1_w2f__i8)) THEN
            PL%v = 0.0D00
            PLL%v = X(K)%v
          ELSE
            IF(J .eq. INT(2_w2f__i8)) THEN
              PL%v = X(K+(-1))%v
              PLL%v = 0.0D00
            ELSE
              PL%v = X(K+(-1))%v
              PLL%v = X(K+(-2))%v
            ENDIF
          ENDIF
          P%v = X(K)%v
          IF(J .eq.(NX + INT((-1_w2f__i8)))) THEN
            PR%v = X(K+1)%v
            PRR%v = 0.0D00
          ELSE
            IF(NX .eq. J) THEN
              PR%v = 0.0D00
              PRR%v = X(K)%v
            ELSE
              PR%v = X(K+1)%v
              PRR%v = X(K+2)%v
            ENDIF
          ENDIF
          IF((NY .eq. I) .OR.(J .eq. INT(1_w2f__i8))) THEN
            PTL%v = 0.0D00
          ELSE
            PTL%v = X(NX+K+(-1))%v
          ENDIF
          IF(I .eq.(NY + INT((-1_w2f__i8)))) THEN
            PT%v = X(NX+K)%v
            PTT%v = 0.0D00
          ELSE
            IF(NY .eq. I) THEN
              PT%v = 0.0D00
              PTT%v = (X(K)%v+HY*2.0D00)
            ELSE
              PT%v = X(NX+K)%v
              PTT%v = X(K+NX*2)%v
            ENDIF
          ENDIF
          IF((NX .eq. J) .OR.(NY .eq. I)) THEN
            PTR%v = 0.0D00
          ELSE
            PTR%v = X(NX+K+1)%v
          ENDIF
          DPDY%v = ((PT%v-PB%v)/(HY*2.0D00))
          DPDX%v = ((PR%v-PL%v)/(HX*2.0D00))
          PBLAP%v = (((PBB%v+P%v-PB%v*2.0D00)/HY2)+((PBL%v+PBR%v-PB%v*2.
     +0D00)/HX2))
          PLLAP%v = (((PBL%v+PTL%v-PL%v*2.0D00)/HY2)+((PLL%v+P%v-PL%v*2.
     +0D00)/HX2))
          PLAP%v = (((PB%v+PT%v-P%v*2.0D00)/HY2)+((PL%v+PR%v-P%v*2.0D00)
     +/HX2))
          PRLAP%v = (((P%v+PRR%v-PR%v*2.0D00)/HX2)+((PBR%v+PTR%v-PR%v*2.
     +0D00)/HY2))
          PTLAP%v = (((P%v+PTT%v-PT%v*2.0D00)/HY2)+((PTL%v+PTR%v-PT%v*2.
     +0D00)/HX2))
          FVEC(INT(K))%v = (((PBLAP%v+PTLAP%v-PLAP%v*2.0D00)/HY2)+((PLLA
     +P%v+PRLAP%v-PLAP%v*2.0D00)/HX2)-R*(((DPDY%v*(PRLAP%v-PLLAP%v))/(HX
     +*2.0D00))-((DPDX%v*(PTLAP%v-PBLAP%v))/(HY*2.0D00))))
        END DO
      END DO
      t__5 = N
      DO K = 1, N, 1
        FVEC(INT(K))%v = (FVEC(K)%v*HX2*HY2)
      END DO
      
            our_rev_mode=our_orig_mode
          end if 
          if (our_rev_mode%tape) then
C            print*, " tape       ", our_rev_mode
            our_rev_mode%arg_store=.TRUE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.TRUE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.FALSE.
C taping
C$OPENAD XXX Template ad_template.f
      t__1 = INT(NX * NY)
      t__2 = MAX(INT(NX * NY), 0_w2f__i8)
      N = NX * NY
      NXP1 = (NX + INT(1_w2f__i8))
      NYP1 = (NY + INT(1_w2f__i8))
      HX = (1.0D00 / NXP1)
      HY = (1.0D00 / NYP1)
      HY2 = (HY * HY)
      HX2 = (HX * HX)
      t__3 = NY
      OpenAD_Symbol_287 = 0_w2f__i8
      DO I = 1, NY, 1
        t__4 = NX
        OpenAD_Symbol_288 = 0_w2f__i8
        DO J = 1, NX, 1
          K = J + NX *(I +(-1))
          IF((I .eq. INT(1_w2f__i8)) .OR.(J .eq. INT(1_w2f__i8))) THEN
            PBL%v = 0.0D00
            OpenAD_Symbol_289 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_289
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PBL%v = X(K-NX+(-1))%v
            OpenAD_Symbol_374 = (K - NX + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_374
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_290 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_290
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF(I .eq. INT(1_w2f__i8)) THEN
            PB%v = 0.0D00
            PBB%v = X(K)%v
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_293 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_293
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF(I .eq. INT(2_w2f__i8)) THEN
              PB%v = X(K-NX)%v
              PBB%v = 0.0D00
              OpenAD_Symbol_371 = (K - NX)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_371
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_291 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_291
          integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PB%v = X(K-NX)%v
              PBB%v = X(K-NX*2)%v
              OpenAD_Symbol_372 = (K - NX)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_372
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_373 = (K - NX * INT(2_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_373
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_292 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_292
          integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_294 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_294
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF((NX .eq. J) .OR.(I .eq. INT(1_w2f__i8))) THEN
            PBR%v = 0.0D00
            OpenAD_Symbol_295 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_295
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PBR%v = X(K-NX+1)%v
            OpenAD_Symbol_370 = (K - NX + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_370
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_296 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_296
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF(J .eq. INT(1_w2f__i8)) THEN
            PL%v = 0.0D00
            PLL%v = X(K)%v
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_299 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_299
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF(J .eq. INT(2_w2f__i8)) THEN
              PL%v = X(K+(-1))%v
              PLL%v = 0.0D00
              OpenAD_Symbol_367 = (K + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_367
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_297 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_297
          integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PL%v = X(K+(-1))%v
              PLL%v = X(K+(-2))%v
              OpenAD_Symbol_368 = (K + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_368
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_369 = (K + INT((-2_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_369
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_298 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_298
          integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_300 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_300
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          P%v = X(K)%v
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          IF(J .eq.(NX + INT((-1_w2f__i8)))) THEN
            PR%v = X(K+1)%v
            PRR%v = 0.0D00
            OpenAD_Symbol_359 = (K + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_359
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_303 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_303
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF(NX .eq. J) THEN
              PR%v = 0.0D00
              PRR%v = X(K)%v
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_301 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_301
          integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PR%v = X(K+1)%v
              PRR%v = X(K+2)%v
              OpenAD_Symbol_365 = (K + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_365
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_366 = (K + INT(2_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_366
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_302 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_302
          integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_304 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_304
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF((NY .eq. I) .OR.(J .eq. INT(1_w2f__i8))) THEN
            PTL%v = 0.0D00
            OpenAD_Symbol_305 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_305
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PTL%v = X(NX+K+(-1))%v
            OpenAD_Symbol_364 = (NX + K + INT((-1_w2f__i8)))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_364
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_306 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_306
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF(I .eq.(NY + INT((-1_w2f__i8)))) THEN
            PT%v = X(NX+K)%v
            PTT%v = 0.0D00
            OpenAD_Symbol_360 = (NX + K)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_360
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_309 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_309
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF(NY .eq. I) THEN
              PT%v = 0.0D00
              PTT%v = (X(K)%v+HY*2.0D00)
              OpenAD_Symbol_157 = 1_w2f__i8
              OpenAD_Symbol_266 = OpenAD_Symbol_157
          double_tape(double_tape_pointer) = OpenAD_Symbol_266
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_307 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_307
          integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PT%v = X(NX+K)%v
              PTT%v = X(K+NX*2)%v
              OpenAD_Symbol_362 = (NX + K)
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_362
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_363 = (K + NX * INT(2_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_363
          integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_308 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_308
          integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_310 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_310
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF((NX .eq. J) .OR.(NY .eq. I)) THEN
            PTR%v = 0.0D00
            OpenAD_Symbol_311 = 1_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_311
          integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PTR%v = X(NX+K+1)%v
            OpenAD_Symbol_361 = (NX + K + INT(1_w2f__i8))
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_361
          integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_312 = 0_w2f__i8
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_312
          integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          OpenAD_Symbol_0 = (PT%v-PB%v)
          OpenAD_Symbol_1 = (HY * 2.0D00)
          DPDY%v = (OpenAD_Symbol_0/OpenAD_Symbol_1)
          OpenAD_Symbol_4 = 1_w2f__i8
          OpenAD_Symbol_5 = (-1_w2f__i8)
          OpenAD_Symbol_2 = (INT(1_w2f__i8) / OpenAD_Symbol_1)
          OpenAD_Symbol_6 = (PR%v-PL%v)
          OpenAD_Symbol_7 = (HX * 2.0D00)
          DPDX%v = (OpenAD_Symbol_6/OpenAD_Symbol_7)
          OpenAD_Symbol_10 = 1_w2f__i8
          OpenAD_Symbol_11 = (-1_w2f__i8)
          OpenAD_Symbol_8 = (INT(1_w2f__i8) / OpenAD_Symbol_7)
          OpenAD_Symbol_14 = (PBB%v+P%v-PB%v*2.0D00)
          OpenAD_Symbol_23 = (PBL%v+PBR%v-PB%v*2.0D00)
          PBLAP%v = ((OpenAD_Symbol_14/HY2)+(OpenAD_Symbol_23/HX2))
          OpenAD_Symbol_17 = 1_w2f__i8
          OpenAD_Symbol_19 = 1_w2f__i8
          OpenAD_Symbol_21 = 2.0D00
          OpenAD_Symbol_20 = (-1_w2f__i8)
          OpenAD_Symbol_18 = 1_w2f__i8
          OpenAD_Symbol_15 = (INT(1_w2f__i8) / HY2)
          OpenAD_Symbol_12 = 1_w2f__i8
          OpenAD_Symbol_26 = 1_w2f__i8
          OpenAD_Symbol_28 = 1_w2f__i8
          OpenAD_Symbol_30 = 2.0D00
          OpenAD_Symbol_29 = (-1_w2f__i8)
          OpenAD_Symbol_27 = 1_w2f__i8
          OpenAD_Symbol_24 = (INT(1_w2f__i8) / HX2)
          OpenAD_Symbol_13 = 1_w2f__i8
          OpenAD_Symbol_34 = (PBL%v+PTL%v-PL%v*2.0D00)
          OpenAD_Symbol_43 = (PLL%v+P%v-PL%v*2.0D00)
          PLLAP%v = ((OpenAD_Symbol_34/HY2)+(OpenAD_Symbol_43/HX2))
          OpenAD_Symbol_37 = 1_w2f__i8
          OpenAD_Symbol_39 = 1_w2f__i8
          OpenAD_Symbol_41 = 2.0D00
          OpenAD_Symbol_40 = (-1_w2f__i8)
          OpenAD_Symbol_38 = 1_w2f__i8
          OpenAD_Symbol_35 = (INT(1_w2f__i8) / HY2)
          OpenAD_Symbol_32 = 1_w2f__i8
          OpenAD_Symbol_46 = 1_w2f__i8
          OpenAD_Symbol_48 = 1_w2f__i8
          OpenAD_Symbol_50 = 2.0D00
          OpenAD_Symbol_49 = (-1_w2f__i8)
          OpenAD_Symbol_47 = 1_w2f__i8
          OpenAD_Symbol_44 = (INT(1_w2f__i8) / HX2)
          OpenAD_Symbol_33 = 1_w2f__i8
          OpenAD_Symbol_54 = (PB%v+PT%v-P%v*2.0D00)
          OpenAD_Symbol_63 = (PL%v+PR%v-P%v*2.0D00)
          PLAP%v = ((OpenAD_Symbol_54/HY2)+(OpenAD_Symbol_63/HX2))
          OpenAD_Symbol_57 = 1_w2f__i8
          OpenAD_Symbol_59 = 1_w2f__i8
          OpenAD_Symbol_61 = 2.0D00
          OpenAD_Symbol_60 = (-1_w2f__i8)
          OpenAD_Symbol_58 = 1_w2f__i8
          OpenAD_Symbol_55 = (INT(1_w2f__i8) / HY2)
          OpenAD_Symbol_52 = 1_w2f__i8
          OpenAD_Symbol_66 = 1_w2f__i8
          OpenAD_Symbol_68 = 1_w2f__i8
          OpenAD_Symbol_70 = 2.0D00
          OpenAD_Symbol_69 = (-1_w2f__i8)
          OpenAD_Symbol_67 = 1_w2f__i8
          OpenAD_Symbol_64 = (INT(1_w2f__i8) / HX2)
          OpenAD_Symbol_53 = 1_w2f__i8
          OpenAD_Symbol_74 = (P%v+PRR%v-PR%v*2.0D00)
          OpenAD_Symbol_83 = (PBR%v+PTR%v-PR%v*2.0D00)
          PRLAP%v = ((OpenAD_Symbol_74/HX2)+(OpenAD_Symbol_83/HY2))
          OpenAD_Symbol_77 = 1_w2f__i8
          OpenAD_Symbol_79 = 1_w2f__i8
          OpenAD_Symbol_81 = 2.0D00
          OpenAD_Symbol_80 = (-1_w2f__i8)
          OpenAD_Symbol_78 = 1_w2f__i8
          OpenAD_Symbol_75 = (INT(1_w2f__i8) / HX2)
          OpenAD_Symbol_72 = 1_w2f__i8
          OpenAD_Symbol_86 = 1_w2f__i8
          OpenAD_Symbol_88 = 1_w2f__i8
          OpenAD_Symbol_90 = 2.0D00
          OpenAD_Symbol_89 = (-1_w2f__i8)
          OpenAD_Symbol_87 = 1_w2f__i8
          OpenAD_Symbol_84 = (INT(1_w2f__i8) / HY2)
          OpenAD_Symbol_73 = 1_w2f__i8
          OpenAD_Symbol_94 = (P%v+PTT%v-PT%v*2.0D00)
          OpenAD_Symbol_103 = (PTL%v+PTR%v-PT%v*2.0D00)
          PTLAP%v = ((OpenAD_Symbol_94/HY2)+(OpenAD_Symbol_103/HX2))
          OpenAD_Symbol_97 = 1_w2f__i8
          OpenAD_Symbol_99 = 1_w2f__i8
          OpenAD_Symbol_101 = 2.0D00
          OpenAD_Symbol_100 = (-1_w2f__i8)
          OpenAD_Symbol_98 = 1_w2f__i8
          OpenAD_Symbol_95 = (INT(1_w2f__i8) / HY2)
          OpenAD_Symbol_92 = 1_w2f__i8
          OpenAD_Symbol_106 = 1_w2f__i8
          OpenAD_Symbol_108 = 1_w2f__i8
          OpenAD_Symbol_110 = 2.0D00
          OpenAD_Symbol_109 = (-1_w2f__i8)
          OpenAD_Symbol_107 = 1_w2f__i8
          OpenAD_Symbol_104 = (INT(1_w2f__i8) / HX2)
          OpenAD_Symbol_93 = 1_w2f__i8
          OpenAD_Symbol_116 = (PBLAP%v+PTLAP%v-PLAP%v*2.0D00)
          OpenAD_Symbol_125 = (PLLAP%v+PRLAP%v-PLAP%v*2.0D00)
          OpenAD_Symbol_143 = (PRLAP%v-PLLAP%v)
          OpenAD_Symbol_139 = (DPDY%v*OpenAD_Symbol_143)
          OpenAD_Symbol_140 = (HX * 2.0D00)
          OpenAD_Symbol_152 = (PTLAP%v-PBLAP%v)
          OpenAD_Symbol_148 = (DPDX%v*OpenAD_Symbol_152)
          OpenAD_Symbol_149 = (HY * 2.0D00)
          OpenAD_Symbol_134 = ((OpenAD_Symbol_139 / OpenAD_Symbol_140)  
     +-(OpenAD_Symbol_148 / OpenAD_Symbol_149))
          FVEC(INT(K))%v = ((OpenAD_Symbol_116/HY2)+(OpenAD_Symbol_125/H
     +X2)-R*OpenAD_Symbol_134)
          OpenAD_Symbol_119 = 1_w2f__i8
          OpenAD_Symbol_121 = 1_w2f__i8
          OpenAD_Symbol_123 = 2.0D00
          OpenAD_Symbol_122 = (-1_w2f__i8)
          OpenAD_Symbol_120 = 1_w2f__i8
          OpenAD_Symbol_117 = (INT(1_w2f__i8) / HY2)
          OpenAD_Symbol_114 = 1_w2f__i8
          OpenAD_Symbol_128 = 1_w2f__i8
          OpenAD_Symbol_130 = 1_w2f__i8
          OpenAD_Symbol_132 = 2.0D00
          OpenAD_Symbol_131 = (-1_w2f__i8)
          OpenAD_Symbol_129 = 1_w2f__i8
          OpenAD_Symbol_126 = (INT(1_w2f__i8) / HX2)
          OpenAD_Symbol_115 = 1_w2f__i8
          OpenAD_Symbol_112 = 1_w2f__i8
          OpenAD_Symbol_144 = OpenAD_Symbol_143
          OpenAD_Symbol_146 = 1_w2f__i8
          OpenAD_Symbol_147 = (-1_w2f__i8)
          OpenAD_Symbol_145 = DPDY%v
          OpenAD_Symbol_141 = (INT(1_w2f__i8) / OpenAD_Symbol_140)
          OpenAD_Symbol_137 = 1_w2f__i8
          OpenAD_Symbol_153 = OpenAD_Symbol_152
          OpenAD_Symbol_155 = 1_w2f__i8
          OpenAD_Symbol_156 = (-1_w2f__i8)
          OpenAD_Symbol_154 = DPDX%v
          OpenAD_Symbol_150 = (INT(1_w2f__i8) / OpenAD_Symbol_149)
          OpenAD_Symbol_138 = (-1_w2f__i8)
          OpenAD_Symbol_136 = R
          OpenAD_Symbol_113 = (-1_w2f__i8)
          OpenAD_Symbol_163 = (OpenAD_Symbol_114 * OpenAD_Symbol_112)
          OpenAD_Symbol_164 = (OpenAD_Symbol_115 * OpenAD_Symbol_112)
          OpenAD_Symbol_165 = (OpenAD_Symbol_136 * OpenAD_Symbol_113)
          OpenAD_Symbol_166 = (OpenAD_Symbol_137 * OpenAD_Symbol_165)
          OpenAD_Symbol_167 = (OpenAD_Symbol_138 * OpenAD_Symbol_165)
          OpenAD_Symbol_168 = (OpenAD_Symbol_126 * OpenAD_Symbol_164)
          OpenAD_Symbol_169 = (OpenAD_Symbol_128 * OpenAD_Symbol_168)
          OpenAD_Symbol_170 = (OpenAD_Symbol_129 * OpenAD_Symbol_168)
          OpenAD_Symbol_171 = (OpenAD_Symbol_130 * OpenAD_Symbol_170)
          OpenAD_Symbol_172 = (OpenAD_Symbol_131 * OpenAD_Symbol_170)
          OpenAD_Symbol_173 = (OpenAD_Symbol_117 * OpenAD_Symbol_163)
          OpenAD_Symbol_174 = (OpenAD_Symbol_119 * OpenAD_Symbol_173)
          OpenAD_Symbol_175 = (OpenAD_Symbol_120 * OpenAD_Symbol_173)
          OpenAD_Symbol_176 = (OpenAD_Symbol_121 * OpenAD_Symbol_175)
          OpenAD_Symbol_177 = (OpenAD_Symbol_122 * OpenAD_Symbol_175)
          OpenAD_Symbol_178 = (OpenAD_Symbol_150 * OpenAD_Symbol_167)
          OpenAD_Symbol_179 = (OpenAD_Symbol_153 * OpenAD_Symbol_178)
          OpenAD_Symbol_180 = (OpenAD_Symbol_154 * OpenAD_Symbol_178)
          OpenAD_Symbol_181 = (OpenAD_Symbol_176 + OpenAD_Symbol_155 *  
     +OpenAD_Symbol_180)
          OpenAD_Symbol_182 = (OpenAD_Symbol_174 + OpenAD_Symbol_156 *  
     +OpenAD_Symbol_180)
          OpenAD_Symbol_183 = (OpenAD_Symbol_92 * OpenAD_Symbol_181)
          OpenAD_Symbol_184 = (OpenAD_Symbol_93 * OpenAD_Symbol_181)
          OpenAD_Symbol_185 = (OpenAD_Symbol_12 * OpenAD_Symbol_182)
          OpenAD_Symbol_186 = (OpenAD_Symbol_13 * OpenAD_Symbol_182)
          OpenAD_Symbol_187 = (OpenAD_Symbol_141 * OpenAD_Symbol_166)
          OpenAD_Symbol_188 = (OpenAD_Symbol_144 * OpenAD_Symbol_187)
          OpenAD_Symbol_189 = (OpenAD_Symbol_145 * OpenAD_Symbol_187)
          OpenAD_Symbol_190 = (OpenAD_Symbol_171 + OpenAD_Symbol_146 *  
     +OpenAD_Symbol_189)
          OpenAD_Symbol_191 = (OpenAD_Symbol_169 + OpenAD_Symbol_147 *  
     +OpenAD_Symbol_189)
          OpenAD_Symbol_192 = (OpenAD_Symbol_72 * OpenAD_Symbol_190)
          OpenAD_Symbol_193 = (OpenAD_Symbol_73 * OpenAD_Symbol_190)
          OpenAD_Symbol_194 = (OpenAD_Symbol_32 * OpenAD_Symbol_191)
          OpenAD_Symbol_195 = (OpenAD_Symbol_33 * OpenAD_Symbol_191)
          OpenAD_Symbol_196 = (OpenAD_Symbol_132 * OpenAD_Symbol_172)
          OpenAD_Symbol_197 = (OpenAD_Symbol_196 + OpenAD_Symbol_123 *  
     +OpenAD_Symbol_177)
          OpenAD_Symbol_198 = (OpenAD_Symbol_52 * OpenAD_Symbol_197)
          OpenAD_Symbol_199 = (OpenAD_Symbol_53 * OpenAD_Symbol_197)
          OpenAD_Symbol_200 = (OpenAD_Symbol_104 * OpenAD_Symbol_184)
          OpenAD_Symbol_201 = (OpenAD_Symbol_106 * OpenAD_Symbol_200)
          OpenAD_Symbol_202 = (OpenAD_Symbol_107 * OpenAD_Symbol_200)
          OpenAD_Symbol_203 = (OpenAD_Symbol_108 * OpenAD_Symbol_202)
          OpenAD_Symbol_204 = (OpenAD_Symbol_109 * OpenAD_Symbol_202)
          OpenAD_Symbol_205 = (OpenAD_Symbol_95 * OpenAD_Symbol_183)
          OpenAD_Symbol_206 = (OpenAD_Symbol_97 * OpenAD_Symbol_205)
          OpenAD_Symbol_207 = (OpenAD_Symbol_98 * OpenAD_Symbol_205)
          OpenAD_Symbol_208 = (OpenAD_Symbol_99 * OpenAD_Symbol_207)
          OpenAD_Symbol_209 = (OpenAD_Symbol_100 * OpenAD_Symbol_207)
          OpenAD_Symbol_210 = (OpenAD_Symbol_84 * OpenAD_Symbol_193)
          OpenAD_Symbol_211 = (OpenAD_Symbol_86 * OpenAD_Symbol_210)
          OpenAD_Symbol_212 = (OpenAD_Symbol_87 * OpenAD_Symbol_210)
          OpenAD_Symbol_213 = (OpenAD_Symbol_88 * OpenAD_Symbol_212)
          OpenAD_Symbol_214 = (OpenAD_Symbol_89 * OpenAD_Symbol_212)
          OpenAD_Symbol_215 = (OpenAD_Symbol_75 * OpenAD_Symbol_192)
          OpenAD_Symbol_216 = (OpenAD_Symbol_77 * OpenAD_Symbol_215)
          OpenAD_Symbol_217 = (OpenAD_Symbol_78 * OpenAD_Symbol_215)
          OpenAD_Symbol_218 = (OpenAD_Symbol_79 * OpenAD_Symbol_217)
          OpenAD_Symbol_219 = (OpenAD_Symbol_80 * OpenAD_Symbol_217)
          OpenAD_Symbol_220 = (OpenAD_Symbol_64 * OpenAD_Symbol_199)
          OpenAD_Symbol_221 = (OpenAD_Symbol_66 * OpenAD_Symbol_220)
          OpenAD_Symbol_222 = (OpenAD_Symbol_67 * OpenAD_Symbol_220)
          OpenAD_Symbol_223 = (OpenAD_Symbol_68 * OpenAD_Symbol_222)
          OpenAD_Symbol_224 = (OpenAD_Symbol_69 * OpenAD_Symbol_222)
          OpenAD_Symbol_225 = (OpenAD_Symbol_55 * OpenAD_Symbol_198)
          OpenAD_Symbol_226 = (OpenAD_Symbol_57 * OpenAD_Symbol_225)
          OpenAD_Symbol_227 = (OpenAD_Symbol_58 * OpenAD_Symbol_225)
          OpenAD_Symbol_228 = (OpenAD_Symbol_59 * OpenAD_Symbol_227)
          OpenAD_Symbol_229 = (OpenAD_Symbol_60 * OpenAD_Symbol_227)
          OpenAD_Symbol_230 = (OpenAD_Symbol_44 * OpenAD_Symbol_195)
          OpenAD_Symbol_231 = (OpenAD_Symbol_46 * OpenAD_Symbol_230)
          OpenAD_Symbol_232 = (OpenAD_Symbol_47 * OpenAD_Symbol_230)
          OpenAD_Symbol_233 = (OpenAD_Symbol_48 * OpenAD_Symbol_232)
          OpenAD_Symbol_234 = (OpenAD_Symbol_49 * OpenAD_Symbol_232)
          OpenAD_Symbol_235 = (OpenAD_Symbol_35 * OpenAD_Symbol_194)
          OpenAD_Symbol_236 = (OpenAD_Symbol_37 * OpenAD_Symbol_235)
          OpenAD_Symbol_237 = (OpenAD_Symbol_38 * OpenAD_Symbol_235)
          OpenAD_Symbol_238 = (OpenAD_Symbol_39 * OpenAD_Symbol_237)
          OpenAD_Symbol_239 = (OpenAD_Symbol_40 * OpenAD_Symbol_237)
          OpenAD_Symbol_240 = (OpenAD_Symbol_24 * OpenAD_Symbol_186)
          OpenAD_Symbol_241 = (OpenAD_Symbol_26 * OpenAD_Symbol_240)
          OpenAD_Symbol_242 = (OpenAD_Symbol_27 * OpenAD_Symbol_240)
          OpenAD_Symbol_243 = (OpenAD_Symbol_28 * OpenAD_Symbol_242)
          OpenAD_Symbol_244 = (OpenAD_Symbol_29 * OpenAD_Symbol_242)
          OpenAD_Symbol_245 = (OpenAD_Symbol_15 * OpenAD_Symbol_185)
          OpenAD_Symbol_246 = (OpenAD_Symbol_17 * OpenAD_Symbol_245)
          OpenAD_Symbol_247 = (OpenAD_Symbol_18 * OpenAD_Symbol_245)
          OpenAD_Symbol_248 = (OpenAD_Symbol_19 * OpenAD_Symbol_247)
          OpenAD_Symbol_249 = (OpenAD_Symbol_20 * OpenAD_Symbol_247)
          OpenAD_Symbol_250 = (OpenAD_Symbol_8 * OpenAD_Symbol_179)
          OpenAD_Symbol_251 = (OpenAD_Symbol_10 * OpenAD_Symbol_250)
          OpenAD_Symbol_252 = (OpenAD_Symbol_11 * OpenAD_Symbol_250)
          OpenAD_Symbol_253 = (OpenAD_Symbol_2 * OpenAD_Symbol_188)
          OpenAD_Symbol_254 = (OpenAD_Symbol_4 * OpenAD_Symbol_253)
          OpenAD_Symbol_255 = (OpenAD_Symbol_5 * OpenAD_Symbol_253)
          OpenAD_Symbol_256 = (OpenAD_Symbol_110 * OpenAD_Symbol_204)
          OpenAD_Symbol_257 = (OpenAD_Symbol_101 * OpenAD_Symbol_209)
          OpenAD_Symbol_258 = (OpenAD_Symbol_90 * OpenAD_Symbol_214)
          OpenAD_Symbol_259 = (OpenAD_Symbol_81 * OpenAD_Symbol_219)
          OpenAD_Symbol_260 = (OpenAD_Symbol_70 * OpenAD_Symbol_224)
          OpenAD_Symbol_261 = (OpenAD_Symbol_61 * OpenAD_Symbol_229)
          OpenAD_Symbol_262 = (OpenAD_Symbol_50 * OpenAD_Symbol_234)
          OpenAD_Symbol_263 = (OpenAD_Symbol_41 * OpenAD_Symbol_239)
          OpenAD_Symbol_264 = (OpenAD_Symbol_30 * OpenAD_Symbol_244)
          OpenAD_Symbol_265 = (OpenAD_Symbol_21 * OpenAD_Symbol_249)
          double_tape(double_tape_pointer) = OpenAD_Symbol_201
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_203
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_206
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_208
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_211
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_213
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_216
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_218
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_221
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_223
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_226
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_228
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_231
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_233
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_236
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_238
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_241
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_243
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_246
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_248
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_251
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_252
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_254
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_255
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_256
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_257
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_258
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_259
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_260
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_261
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_262
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_263
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_264
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_265
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_288 = (INT(OpenAD_Symbol_288) + INT(1_w2f__i8))
        END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_288
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_287 = (INT(OpenAD_Symbol_287) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_287
          integer_tape_pointer = integer_tape_pointer+1
      t__5 = N
      OpenAD_Symbol_313 = 0_w2f__i8
      DO K = 1, N, 1
        OpenAD_Symbol_159 = (HX2 * HY2)
        OpenAD_Symbol_162 = (FVEC(K)%v*OpenAD_Symbol_159)
        OpenAD_Symbol_160 = OpenAD_Symbol_159
        FVEC(INT(K))%v = OpenAD_Symbol_162
        OpenAD_Symbol_267 = OpenAD_Symbol_160
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_267
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_313 = (INT(OpenAD_Symbol_313) + INT(1_w2f__i8))
      END DO
          integer_tape(integer_tape_pointer) = OpenAD_Symbol_313
          integer_tape_pointer = integer_tape_pointer+1
      
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.FALSE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.FALSE.
            our_rev_mode%adjoint=.TRUE.
          end if 
          if (our_rev_mode%adjoint) then
C            print*, " adjoint    ", our_rev_mode
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
C adjoint
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_269 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_270 = 1
      DO WHILE(INT(OpenAD_Symbol_270) .LE. INT(OpenAD_Symbol_269))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_465 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_466 = double_tape(double_tape_pointer)
          OpenAD_Symbol_268%d = OpenAD_Symbol_268%d+FVEC(INT(OpenAD_Symb
     +ol_465))%d*OpenAD_Symbol_466
          FVEC(INT(OpenAD_Symbol_465))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_467 = integer_tape(integer_tape_pointer)
          FVEC(INT(OpenAD_Symbol_467))%d = FVEC(INT(OpenAD_Symbol_467))%
     +d+OpenAD_Symbol_268%d
          OpenAD_Symbol_268%d = 0.0d0
        OpenAD_Symbol_270 = INT(OpenAD_Symbol_270) + 1
      END DO
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_271 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_272 = 1
      DO WHILE(INT(OpenAD_Symbol_272) .LE. INT(OpenAD_Symbol_271))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_273 = integer_tape(integer_tape_pointer)
        OpenAD_Symbol_274 = 1
        DO WHILE(INT(OpenAD_Symbol_274) .LE. INT(OpenAD_Symbol_273))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_380 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_381 = double_tape(double_tape_pointer)
          PB%d = PB%d+FVEC(INT(OpenAD_Symbol_380))%d*OpenAD_Symbol_381
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_382 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_383 = double_tape(double_tape_pointer)
          PB%d = PB%d+FVEC(INT(OpenAD_Symbol_382))%d*OpenAD_Symbol_383
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_384 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_385 = double_tape(double_tape_pointer)
          PL%d = PL%d+FVEC(INT(OpenAD_Symbol_384))%d*OpenAD_Symbol_385
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_386 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_387 = double_tape(double_tape_pointer)
          PL%d = PL%d+FVEC(INT(OpenAD_Symbol_386))%d*OpenAD_Symbol_387
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_388 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_389 = double_tape(double_tape_pointer)
          P%d = P%d+FVEC(INT(OpenAD_Symbol_388))%d*OpenAD_Symbol_389
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_390 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_391 = double_tape(double_tape_pointer)
          P%d = P%d+FVEC(INT(OpenAD_Symbol_390))%d*OpenAD_Symbol_391
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_392 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_393 = double_tape(double_tape_pointer)
          PR%d = PR%d+FVEC(INT(OpenAD_Symbol_392))%d*OpenAD_Symbol_393
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_394 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_395 = double_tape(double_tape_pointer)
          PR%d = PR%d+FVEC(INT(OpenAD_Symbol_394))%d*OpenAD_Symbol_395
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_396 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_397 = double_tape(double_tape_pointer)
          PT%d = PT%d+FVEC(INT(OpenAD_Symbol_396))%d*OpenAD_Symbol_397
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_398 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_399 = double_tape(double_tape_pointer)
          PT%d = PT%d+FVEC(INT(OpenAD_Symbol_398))%d*OpenAD_Symbol_399
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_400 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_401 = double_tape(double_tape_pointer)
          PB%d = PB%d+FVEC(INT(OpenAD_Symbol_400))%d*OpenAD_Symbol_401
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_402 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_403 = double_tape(double_tape_pointer)
          PT%d = PT%d+FVEC(INT(OpenAD_Symbol_402))%d*OpenAD_Symbol_403
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_404 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_405 = double_tape(double_tape_pointer)
          PL%d = PL%d+FVEC(INT(OpenAD_Symbol_404))%d*OpenAD_Symbol_405
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_406 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_407 = double_tape(double_tape_pointer)
          PR%d = PR%d+FVEC(INT(OpenAD_Symbol_406))%d*OpenAD_Symbol_407
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_408 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_409 = double_tape(double_tape_pointer)
          P%d = P%d+FVEC(INT(OpenAD_Symbol_408))%d*OpenAD_Symbol_409
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_410 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_411 = double_tape(double_tape_pointer)
          PBB%d = PBB%d+FVEC(INT(OpenAD_Symbol_410))%d*OpenAD_Symbol_411
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_412 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_413 = double_tape(double_tape_pointer)
          PBR%d = PBR%d+FVEC(INT(OpenAD_Symbol_412))%d*OpenAD_Symbol_413
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_414 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_415 = double_tape(double_tape_pointer)
          PBL%d = PBL%d+FVEC(INT(OpenAD_Symbol_414))%d*OpenAD_Symbol_415
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_416 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_417 = double_tape(double_tape_pointer)
          PTL%d = PTL%d+FVEC(INT(OpenAD_Symbol_416))%d*OpenAD_Symbol_417
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_418 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_419 = double_tape(double_tape_pointer)
          PBL%d = PBL%d+FVEC(INT(OpenAD_Symbol_418))%d*OpenAD_Symbol_419
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_420 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_421 = double_tape(double_tape_pointer)
          P%d = P%d+FVEC(INT(OpenAD_Symbol_420))%d*OpenAD_Symbol_421
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_422 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_423 = double_tape(double_tape_pointer)
          PLL%d = PLL%d+FVEC(INT(OpenAD_Symbol_422))%d*OpenAD_Symbol_423
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_424 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_425 = double_tape(double_tape_pointer)
          PT%d = PT%d+FVEC(INT(OpenAD_Symbol_424))%d*OpenAD_Symbol_425
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_426 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_427 = double_tape(double_tape_pointer)
          PB%d = PB%d+FVEC(INT(OpenAD_Symbol_426))%d*OpenAD_Symbol_427
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_428 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_429 = double_tape(double_tape_pointer)
          PR%d = PR%d+FVEC(INT(OpenAD_Symbol_428))%d*OpenAD_Symbol_429
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_430 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_431 = double_tape(double_tape_pointer)
          PL%d = PL%d+FVEC(INT(OpenAD_Symbol_430))%d*OpenAD_Symbol_431
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_432 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_433 = double_tape(double_tape_pointer)
          PRR%d = PRR%d+FVEC(INT(OpenAD_Symbol_432))%d*OpenAD_Symbol_433
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_434 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_435 = double_tape(double_tape_pointer)
          P%d = P%d+FVEC(INT(OpenAD_Symbol_434))%d*OpenAD_Symbol_435
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_436 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_437 = double_tape(double_tape_pointer)
          PTR%d = PTR%d+FVEC(INT(OpenAD_Symbol_436))%d*OpenAD_Symbol_437
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_438 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_439 = double_tape(double_tape_pointer)
          PBR%d = PBR%d+FVEC(INT(OpenAD_Symbol_438))%d*OpenAD_Symbol_439
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_440 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_441 = double_tape(double_tape_pointer)
          PTT%d = PTT%d+FVEC(INT(OpenAD_Symbol_440))%d*OpenAD_Symbol_441
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_442 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_443 = double_tape(double_tape_pointer)
          P%d = P%d+FVEC(INT(OpenAD_Symbol_442))%d*OpenAD_Symbol_443
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_444 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_445 = double_tape(double_tape_pointer)
          PTR%d = PTR%d+FVEC(INT(OpenAD_Symbol_444))%d*OpenAD_Symbol_445
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_446 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_447 = double_tape(double_tape_pointer)
          PTL%d = PTL%d+FVEC(INT(OpenAD_Symbol_446))%d*OpenAD_Symbol_447
          FVEC(INT(OpenAD_Symbol_446))%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_275 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_275 .ne. 0) THEN
          PTR%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_448 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_448))%d = X(INT(OpenAD_Symbol_448))%d+PTR%
     +d
          PTR%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_276 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_276 .ne. 0) THEN
          PTT%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_379 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_379))%d = X(INT(OpenAD_Symbol_379))%d+PT%d
          PT%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_277 = integer_tape(integer_tape_pointer)
            IF(OpenAD_Symbol_277 .ne. 0) THEN
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_449 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_450 = double_tape(double_tape_pointer)
          X(INT(OpenAD_Symbol_449))%d = X(INT(OpenAD_Symbol_449))%d+PTT%
     +d*OpenAD_Symbol_450
          PTT%d = 0.0d0
          PT%d = 0.0d0
            ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_451 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_451))%d = X(INT(OpenAD_Symbol_451))%d+PTT%
     +d
          PTT%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_452 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_452))%d = X(INT(OpenAD_Symbol_452))%d+PT%d
          PT%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_278 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_278 .ne. 0) THEN
          PTL%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_453 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_453))%d = X(INT(OpenAD_Symbol_453))%d+PTL%
     +d
          PTL%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_279 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_279 .ne. 0) THEN
          PRR%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_378 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_378))%d = X(INT(OpenAD_Symbol_378))%d+PR%d
          PR%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_280 = integer_tape(integer_tape_pointer)
            IF(OpenAD_Symbol_280 .ne. 0) THEN
          PR%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_454 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_454))%d = X(INT(OpenAD_Symbol_454))%d+PRR%
     +d
          PRR%d = 0.0d0
            ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_455 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_455))%d = X(INT(OpenAD_Symbol_455))%d+PRR%
     +d
          PRR%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_456 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_456))%d = X(INT(OpenAD_Symbol_456))%d+PR%d
          PR%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_377 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_377))%d = X(INT(OpenAD_Symbol_377))%d+P%d
          P%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_281 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_281 .ne. 0) THEN
          PL%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_376 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_376))%d = X(INT(OpenAD_Symbol_376))%d+PLL%
     +d
          PLL%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_282 = integer_tape(integer_tape_pointer)
            IF(OpenAD_Symbol_282 .ne. 0) THEN
          PLL%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_457 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_457))%d = X(INT(OpenAD_Symbol_457))%d+PL%d
          PL%d = 0.0d0
            ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_458 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_458))%d = X(INT(OpenAD_Symbol_458))%d+PLL%
     +d
          PLL%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_459 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_459))%d = X(INT(OpenAD_Symbol_459))%d+PL%d
          PL%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_283 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_283 .ne. 0) THEN
          PBR%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_460 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_460))%d = X(INT(OpenAD_Symbol_460))%d+PBR%
     +d
          PBR%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_284 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_284 .ne. 0) THEN
          PB%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_375 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_375))%d = X(INT(OpenAD_Symbol_375))%d+PBB%
     +d
          PBB%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_285 = integer_tape(integer_tape_pointer)
            IF(OpenAD_Symbol_285 .ne. 0) THEN
          PBB%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_461 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_461))%d = X(INT(OpenAD_Symbol_461))%d+PB%d
          PB%d = 0.0d0
            ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_462 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_462))%d = X(INT(OpenAD_Symbol_462))%d+PBB%
     +d
          PBB%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_463 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_463))%d = X(INT(OpenAD_Symbol_463))%d+PB%d
          PB%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_286 = integer_tape(integer_tape_pointer)
          IF(OpenAD_Symbol_286 .ne. 0) THEN
          PBL%d = 0.0d0
          ELSE
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_464 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_464))%d = X(INT(OpenAD_Symbol_464))%d+PBL%
     +d
          PBL%d = 0.0d0
          ENDIF
          OpenAD_Symbol_274 = INT(OpenAD_Symbol_274) + 1
        END DO
        OpenAD_Symbol_272 = INT(OpenAD_Symbol_272) + 1
      END DO
            our_rev_mode%arg_store=.FALSE.
            our_rev_mode%arg_restore=.TRUE.
            our_rev_mode%res_store=.FALSE.
            our_rev_mode%res_restore=.FALSE.
            our_rev_mode%plain=.FALSE.
            our_rev_mode%tape=.TRUE.
            our_rev_mode%adjoint=.FALSE.
          end if 
C          write(*,'(A,I6,A,I6,A,I5,A,I5)')
C     +"a:AF:", theArgFStackoffset, 
C     +" AI:",theArgIStackoffset, 
C     +" DT:",double_tape_pointer, 
C     +" IT:",integer_tape_pointer
        end subroutine head
