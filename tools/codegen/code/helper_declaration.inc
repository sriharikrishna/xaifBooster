public:

void setAliasMap(AliasMap& whatToSet);
AliasMap& getAliasMap() const;
bool hasAliasMap() const;
void setAliasMapEntry(AliasMapEntry& whatToSet);
AliasMapEntry& getAliasMapEntry() const;
bool hasAliasMapEntry() const;
void setArgumentList(ArgumentList& whatToSet);
ArgumentList& getArgumentList() const;
bool hasArgumentList() const;
void setArrayAccess(ArrayAccess& whatToSet);
ArrayAccess& getArrayAccess() const;
bool hasArrayAccess() const;
void setAssignment(Assignment& whatToSet);
Assignment& getAssignment() const;
bool hasAssignment() const;
void setBaseLoop(BaseLoop& whatToSet);
BaseLoop& getBaseLoop() const;
bool hasBaseLoop() const;
void setBasicBlock(BasicBlock& whatToSet);
BasicBlock& getBasicBlock() const;
bool hasBasicBlock() const;
void setBranch(Branch& whatToSet);
Branch& getBranch() const;
bool hasBranch() const;
void setCallGraph(CallGraph& whatToSet);
CallGraph& getCallGraph() const;
bool hasCallGraph() const;
void setConcreteArgument(ConcreteArgument& whatToSet);
ConcreteArgument& getConcreteArgument() const;
bool hasConcreteArgument() const;
void setCondition(Condition& whatToSet);
Condition& getCondition() const;
bool hasCondition() const;
void setControlFlowGraph(ControlFlowGraph& whatToSet);
ControlFlowGraph& getControlFlowGraph() const;
bool hasControlFlowGraph() const;
void setDoMap(DoMap& whatToSet);
DoMap& getDoMap() const;
bool hasDoMap() const;
void setDuUdMap(DuUdMap& whatToSet);
DuUdMap& getDuUdMap() const;
bool hasDuUdMap() const;
void setExpression(Expression& whatToSet);
Expression& getExpression() const;
bool hasExpression() const;
void setExpressionEdge(ExpressionEdge& whatToSet);
ExpressionEdge& getExpressionEdge() const;
bool hasExpressionEdge() const;
void setForLoop(ForLoop& whatToSet);
ForLoop& getForLoop() const;
bool hasForLoop() const;
void setGoto(Goto& whatToSet);
Goto& getGoto() const;
bool hasGoto() const;
void setIfStatement(IfStatement& whatToSet);
IfStatement& getIfStatement() const;
bool hasIfStatement() const;
void setIndexTriplet(IndexTriplet& whatToSet);
IndexTriplet& getIndexTriplet() const;
bool hasIndexTriplet() const;
void setInitialization(Initialization& whatToSet);
Initialization& getInitialization() const;
bool hasInitialization() const;
void setLabel(Label& whatToSet);
Label& getLabel() const;
bool hasLabel() const;
void setPostLoop(PostLoop& whatToSet);
PostLoop& getPostLoop() const;
bool hasPostLoop() const;
void setPreLoop(PreLoop& whatToSet);
PreLoop& getPreLoop() const;
bool hasPreLoop() const;
void setScope(Scope& whatToSet);
Scope& getScope() const;
bool hasScope() const;
void setScopes(Scopes& whatToSet);
Scopes& getScopes() const;
bool hasScopes() const;
void setSideEffectList(SideEffectList& whatToSet);
SideEffectList& getSideEffectList() const;
bool hasSideEffectList() const;
void setStatementIdSetMap(StatementIdSetMap& whatToSet);
StatementIdSetMap& getStatementIdSetMap() const;
bool hasStatementIdSetMap() const;
void setStatementIdSetMapEntry(StatementIdSetMapEntry& whatToSet);
StatementIdSetMapEntry& getStatementIdSetMapEntry() const;
bool hasStatementIdSetMapEntry() const;
void setSubroutineCall(SubroutineCall& whatToSet);
SubroutineCall& getSubroutineCall() const;
bool hasSubroutineCall() const;
void setSymbol(Symbol& whatToSet);
Symbol& getSymbol() const;
bool hasSymbol() const;
void setSymbolReferenceProperty(SymbolReferenceProperty& whatToSet);
SymbolReferenceProperty& getSymbolReferenceProperty() const;
bool hasSymbolReferenceProperty() const;
void setSymbolTable(SymbolTable& whatToSet);
SymbolTable& getSymbolTable() const;
bool hasSymbolTable() const;
void setUpdate(Update& whatToSet);
Update& getUpdate() const;
bool hasUpdate() const;
void setVariable(Variable& whatToSet);
Variable& getVariable() const;
bool hasVariable() const;
void setVariableEdge(VariableEdge& whatToSet);
VariableEdge& getVariableEdge() const;
bool hasVariableEdge() const;

private:
AliasMap* myAliasMap_p;
AliasMapEntry* myAliasMapEntry_p;
ArgumentList* myArgumentList_p;
ArrayAccess* myArrayAccess_p;
Assignment* myAssignment_p;
BaseLoop* myBaseLoop_p;
BasicBlock* myBasicBlock_p;
Branch* myBranch_p;
CallGraph* myCallGraph_p;
ConcreteArgument* myConcreteArgument_p;
Condition* myCondition_p;
ControlFlowGraph* myControlFlowGraph_p;
DoMap* myDoMap_p;
DuUdMap* myDuUdMap_p;
Expression* myExpression_p;
ExpressionEdge* myExpressionEdge_p;
ForLoop* myForLoop_p;
Goto* myGoto_p;
IfStatement* myIfStatement_p;
IndexTriplet* myIndexTriplet_p;
Initialization* myInitialization_p;
Label* myLabel_p;
PostLoop* myPostLoop_p;
PreLoop* myPreLoop_p;
Scope* myScope_p;
Scopes* myScopes_p;
SideEffectList* mySideEffectList_p;
StatementIdSetMap* myStatementIdSetMap_p;
StatementIdSetMapEntry* myStatementIdSetMapEntry_p;
SubroutineCall* mySubroutineCall_p;
Symbol* mySymbol_p;
SymbolReferenceProperty* mySymbolReferenceProperty_p;
SymbolTable* mySymbolTable_p;
Update* myUpdate_p;
Variable* myVariable_p;
VariableEdge* myVariableEdge_p;
